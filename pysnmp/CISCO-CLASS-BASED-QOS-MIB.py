#
# PySNMP MIB module CISCO-CLASS-BASED-QOS-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/cisco/CISCO-CLASS-BASED-QOS-MIB
# Produced by pysmi-0.0.6 at Mon Dec  7 15:53:32 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( DlciNumber, ) = mibBuilder.importSymbols("CISCO-FRAME-RELAY-MIB", "DlciNumber")
( ciscoMgmt, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
( EntPhysicalIndexOrZero, Unsigned64, ) = mibBuilder.importSymbols("CISCO-TC", "EntPhysicalIndexOrZero", "Unsigned64")
( CounterBasedGauge64, ) = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
( ifIndex, InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
( VlanIndex, ) = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, IpAddress, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, Bits, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "IpAddress", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "Bits", "Counter32")
( DisplayString, TruthValue, TextualConvention, TimeStamp, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention", "TimeStamp")
ciscoCBQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 166)).setRevisions(("2012-07-24 00:00", "2012-03-22 00:00", "2009-11-25 00:00", "2009-09-16 00:00", "2009-04-24 00:00", "2009-01-26 00:00", "2008-11-20 00:00", "2008-06-17 00:00", "2007-10-09 00:00", "2007-08-30 00:00", "2007-07-10 00:00", "2004-09-20 00:00", "2004-04-12 00:00", "2003-07-24 00:00", "2003-06-09 00:00", "2003-01-21 00:00", "2002-12-03 00:00", "2002-07-24 00:00", "2001-03-14 00:00", "2000-12-08 00:00", "2000-07-13 00:00",))
class QueueMechanism(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("precedence", 1), ("dscp", 2), ("discardClass", 3), ("qosGroup", 4), ("atmClp", 5), ("mplsExp", 6),)

class QosObjectType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,)
    namedValues = NamedValues(("policymap", 1), ("classmap", 2), ("matchStatement", 3), ("queueing", 4), ("randomDetect", 5), ("trafficShaping", 6), ("police", 7), ("set", 8), ("compression", 9), ("ipslaMeasure", 10), ("account", 11),)

class TrafficDirection(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2,)
    namedValues = NamedValues(("input", 1), ("output", 2),)

class QosClassInfo(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3,)
    namedValues = NamedValues(("none", 1), ("matchAll", 2), ("matchAny", 3),)

class QosMatchInfo(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2,)
    namedValues = NamedValues(("none", 1), ("matchNot", 2),)

class InterfaceType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7,)
    namedValues = NamedValues(("mainInterface", 1), ("subInterface", 2), ("frDLCI", 3), ("atmPVC", 4), ("controlPlane", 5), ("vlanPort", 6), ("evc", 7),)

class QueueingBandwidthUnits(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("kbps", 1), ("percentage", 2), ("percentageRemaining", 3), ("ratioRemaining", 4), ("perThousand", 5), ("perMillion", 6),)

class TrafficShapingLimit(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2,)
    namedValues = NamedValues(("average", 1), ("peak", 2),)

class PoliceAction(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,)
    namedValues = NamedValues(("transmit", 1), ("setIpDSCP", 2), ("setIpPrecedence", 3), ("setQosGroup", 4), ("drop", 5), ("setMplsExp", 6), ("setAtmClp", 7), ("setFrDe", 8), ("setL2Cos", 9), ("setDiscardClass", 10), ("setMplsExpTopMost", 11), ("setIpDscpTunnel", 12), ("setIpPrecedenceTunnel", 13), ("setL2CosInner", 14), ("unconfigured", 15), ("setDei", 16), ("setDeiImposition", 17), ("setSrpPriority", 18),)

class SetFeatureType(Bits, TextualConvention):
    namedValues = NamedValues(("ipDscp", 0), ("ipPrecedence", 1), ("qosGroupNumber", 2), ("frDeBit", 3), ("atmClpBit", 4), ("l2Cos", 5), ("mplsExp", 6), ("discardClass", 7), ("mplsExpTopMost", 8), ("srpPriority", 9), ("frFecnBecn", 10), ("ipDscpTunnel", 11), ("ipPrecedenceTunnel", 12), ("l2CosInner", 13), ("dei", 14), ("deiImposition", 15),)

class REDMechanism(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9,)
    namedValues = NamedValues(("precedence", 1), ("dscp", 2), ("discardClass", 3), ("l2Cos", 4), ("atmClp", 5), ("mplsExp", 6), ("redDefault", 7), ("redUserDefault", 8), ("dei", 9),)

class CbQosQueueUnitType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5,)
    namedValues = NamedValues(("packets", 1), ("cells", 2), ("bytes", 3), ("ms", 4), ("us", 5),)

class CbQosQueueDepth(Unsigned32, TextualConvention):
    pass

class CbQosRateType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5,)
    namedValues = NamedValues(("bps", 1), ("percentage", 2), ("cps", 3), ("perThousand", 4), ("perMillion", 5),)

class IPHCOption(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3,)
    namedValues = NamedValues(("rtp", 1), ("tcp", 2), ("bothRtpTcp", 3),)

class CbQosTMSetType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("none", 0), ("ipDscp", 1), ("ipPrecedence", 2), ("qosGroup", 3), ("l2Cos", 4), ("mplsExpImp", 5), ("mplsExpTop", 6),)

class CbQosEBType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1,)
    namedValues = NamedValues(("typeNone", 0), ("typeCorvil", 1),)

class CbQosEBCtd(OctetString, TextualConvention):
    pass

class SetC3plAccountFeatureType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2,)
    namedValues = NamedValues(("queueing", 0), ("wred", 1), ("police", 2),)

ciscoCBQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1))
ciscocbQosMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2))
cbQosServicePolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1))
cbQosInterfacePolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2))
cbQosFrameRelayVCPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3))
cbQosATMPVCPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4))
cbQosObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5))
cbQosPolicyMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6))
cbQosClassMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7))
cbQosMatchStmtCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8))
cbQosQueueingCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9))
cbQosREDCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10))
cbQosREDClassCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11))
cbQosPoliceCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12))
cbQosTSCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13))
cbQosSetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14))
cbQosClassMapStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15))
cbQosMatchStmtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16))
cbQosPoliceStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17))
cbQosQueueingStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18))
cbQosTSStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19))
cbQosREDClassStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20))
cbQosPoliceActionCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21))
cbQosIPHCCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22))
cbQosIPHCStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23))
cbQosSetStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24))
cbQosPoliceColorStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25))
cbQosTableMapCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26))
cbQosTableMapValueCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27))
cbQosTableMapSetCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28))
cbQosEBCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29))
cbQosEBStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30))
cbQosMeasureIPSLACfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31))
cbQosQueueingClassCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32))
cbQosC3plAccountCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33))
cbQosC3plAccountStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34))
cbQosQueueingClassCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1), )
cbQosQueueingClassCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosQlimitWeightValue"))
cbQosQueueingClassConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535)))
cbQosQlimitWeightValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,63)))
cbQosQueueingClassCfgThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 3), CbQosQueueDepth()).setMaxAccess("readonly")
cbQosQueueingClassCfgThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 4), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosQueueingClassCfgQLimitWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 32, 1, 1, 5), QueueMechanism()).setMaxAccess("readonly")
cbQosMeasureIPSLACfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1), )
cbQosMeasureIPSLACfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupIndex"))
cbQosMeasureIPSLACfgGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
cbQosMeasureIPSLACfgGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 31, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
cbQosServicePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1), )
cbQosServicePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"))
cbQosPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 1), Unsigned32())
cbQosIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 2), InterfaceType()).setMaxAccess("readonly")
cbQosPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 3), TrafficDirection()).setMaxAccess("readonly")
cbQosIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 4), InterfaceIndex()).setMaxAccess("readonly")
cbQosFrDLCI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 5), DlciNumber()).setMaxAccess("readonly")
cbQosAtmVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readonly")
cbQosAtmVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
cbQosEntityIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 8), EntPhysicalIndexOrZero()).setMaxAccess("readonly")
cbQosVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 9), VlanIndex()).setMaxAccess("readonly")
cbQosEVC = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
cbQosPolicyDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 1, 1, 1, 11), TimeStamp()).setMaxAccess("readonly")
cbQosInterfacePolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1), )
cbQosInterfacePolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
cbQosIFPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 2, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
cbQosFrameRelayPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1), )
cbQosFrameRelayPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
cbQosFRPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
cbQosATMPVCPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1), )
cbQosATMPVCPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"))
cbQosATMPolicyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 4, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
cbQosObjectsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1), )
cbQosObjectsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosObjectsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 1), Unsigned32())
cbQosConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
cbQosObjectsType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 3), QosObjectType()).setMaxAccess("readonly")
cbQosParentObjectsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
cbQosPolicyMapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1), )
cbQosPolicyMapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosPolicyMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
cbQosPolicyMapDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
cbQosCMCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1), )
cbQosCMCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosCMName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
cbQosCMDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
cbQosCMInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 7, 1, 1, 3), QosClassInfo()).setMaxAccess("readonly")
cbQosMatchStmtCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1), )
cbQosMatchStmtCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosMatchStmtName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,255))).setMaxAccess("readonly")
cbQosMatchStmtInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 8, 1, 1, 2), QosMatchInfo()).setMaxAccess("readonly")
cbQosQueueingCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1), )
cbQosQueueingCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosQueueingCfgBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,2000000))).setMaxAccess("readonly")
cbQosQueueingCfgBandwidthUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 2), QueueingBandwidthUnits()).setMaxAccess("readonly")
cbQosQueueingCfgFlowEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
cbQosQueueingCfgPriorityEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
cbQosQueueingCfgAggregateQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setUnits('Packets').setMaxAccess("readonly")
cbQosQueueingCfgIndividualQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,32768))).setUnits('Packets').setMaxAccess("readonly")
cbQosQueueingCfgDynamicQNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,32768))).setMaxAccess("readonly")
cbQosQueueingCfgPrioBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32,64000000))).setUnits('Bytes').setMaxAccess("readonly")
cbQosQueueingCfgQLimitUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 9), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosQueueingCfgAggregateQLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 10), CbQosQueueDepth()).setMaxAccess("readonly")
cbQosQueueingCfgAggrQLimitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 11), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosQueueingCfgPriorityLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
cbQosQueueingCfgBandwidth64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 13), Unsigned64()).setMaxAccess("readonly")
cbQosQueueingCfgIndividualQSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 9, 1, 1, 14), Unsigned64()).setMaxAccess("readonly")
cbQosREDCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1), )
cbQosREDCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosREDCfgExponWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,16))).setMaxAccess("readonly")
cbQosREDCfgMeanQsize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setUnits('Packets').setMaxAccess("readonly")
cbQosREDCfgDscpPrec = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 3), REDMechanism()).setMaxAccess("readonly")
cbQosREDCfgECNEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 10, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
cbQosREDClassCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1), )
cbQosREDClassCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosREDValue"))
cbQosREDValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,63)))
cbQosREDCfgMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,32768))).setUnits('Packets').setMaxAccess("readonly")
cbQosREDCfgMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,32768))).setUnits('Packets').setMaxAccess("readonly")
cbQosREDCfgPktDropProb = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,65536))).setMaxAccess("readonly")
cbQosREDClassCfgThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 5), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosREDClassCfgMinThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 6), CbQosQueueDepth()).setMaxAccess("readonly")
cbQosREDClassCfgMaxThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 7), CbQosQueueDepth()).setMaxAccess("readonly")
cbQosREDClassCfgMinThresholdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 8), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosREDClassCfgMaxThresholdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 9), Unsigned32()).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosREDClassCfgMaxThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 10), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosREDClassCfgMinThresholdUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 11, 1, 1, 11), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosPoliceCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1), )
cbQosPoliceCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosPoliceCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('bits/second').setMaxAccess("readonly")
cbQosPoliceCfgBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000,512000000))).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfgExtBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000,512000000))).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfgConformAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 4), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceCfgConformSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,99))).setMaxAccess("readonly")
cbQosPoliceCfgExceedAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 6), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceCfgExceedSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,99))).setMaxAccess("readonly")
cbQosPoliceCfgViolateAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 8), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceCfgViolateSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,99))).setMaxAccess("readonly")
cbQosPoliceCfgPir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(8000,2000000000))).setUnits('bits/second').setMaxAccess("readonly")
cbQosPoliceCfgRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 11), Unsigned64()).setUnits('bits/second').setMaxAccess("readonly")
cbQosPoliceCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 12), CbQosRateType()).setMaxAccess("readonly")
cbQosPoliceCfgPercentRateValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
cbQosPoliceCfgPercentPirValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
cbQosPoliceCfgCellRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 15), Unsigned32()).setUnits('cells/second').setMaxAccess("readonly")
cbQosPoliceCfgCellPir = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 16), Unsigned32()).setUnits('cells/second').setMaxAccess("readonly")
cbQosPoliceCfgBurstCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('Cells').setMaxAccess("readonly")
cbQosPoliceCfgExtBurstCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('Cells').setMaxAccess("readonly")
cbQosPoliceCfgBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosPoliceCfgExtBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosPoliceCfgCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('micro-second').setMaxAccess("readonly")
cbQosPoliceCfgConformColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 22), DisplayString()).setMaxAccess("readonly")
cbQosPoliceCfgExceedColor = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 23), DisplayString()).setMaxAccess("readonly")
cbQosPoliceCfgConditional = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 24), TruthValue()).setMaxAccess("readonly")
cbQosPoliceCfgBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 25), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfgExtBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 26), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfgPir64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 12, 1, 1, 27), Unsigned64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceActionCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1), )
cbQosPoliceActionCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgIndex"))
cbQosPoliceActionCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 1), Unsigned32())
cbQosPoliceActionCfgConform = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 2), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceActionCfgConformSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosPoliceActionCfgExceed = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 4), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceActionCfgExceedSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosPoliceActionCfgViolate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 6), PoliceAction()).setMaxAccess("readonly")
cbQosPoliceActionCfgViolateSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 21, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosTSCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1), )
cbQosTSCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosTSCfgRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,2147483647))).setUnits('bits/second').setMaxAccess("readonly")
cbQosTSCfgBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(256,154400000))).setUnits('bits').setMaxAccess("readonly")
cbQosTSCfgExtBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,154400000))).setUnits('bits').setMaxAccess("readonly")
cbQosTSCfgAdaptiveEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 4), TruthValue()).setMaxAccess("readonly")
cbQosTSCfgAdaptiveRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(8000,154400000))).setUnits('bits/second').setMaxAccess("readonly")
cbQosTSCfgLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 6), TrafficShapingLimit()).setMaxAccess("readonly")
cbQosTSCfgRateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 7), CbQosRateType()).setMaxAccess("readonly")
cbQosTSCfgPercentRateValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,100))).setUnits('% of Interface Bandwidth').setMaxAccess("readonly")
cbQosTSCfgBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosTSCfgExtBurstTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,4294967295))).setUnits('milli-seconds').setMaxAccess("readonly")
cbQosTSCfgRate64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 11), Unsigned64()).setUnits('bits/second').setMaxAccess("readonly")
cbQosTSCfgBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 12), Unsigned64()).setUnits('bits').setMaxAccess("readonly")
cbQosTSCfgExtBurstSize64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 13, 1, 1, 13), Unsigned64()).setUnits('bits').setMaxAccess("readonly")
cbQosSetCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1), )
cbQosSetCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosSetCfgFeature = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 1), SetFeatureType()).setMaxAccess("readonly")
cbQosSetCfgIpDSCPValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,63))).setMaxAccess("readonly")
cbQosSetCfgIpPrecedenceValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgQosGroupValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosSetCfgL2CosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgMplsExpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgDiscardClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgMplsExpTopMostValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgSrpPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgFrFecnBecn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosSetCfgL2CosInnerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgFrDe = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 12), TruthValue().clone('false')).setMaxAccess("readonly")
cbQosSetCfgIpPrecedenceTunnelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,7))).setMaxAccess("readonly")
cbQosSetCfgIpDSCPTunnelValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,63))).setMaxAccess("readonly")
cbQosSetCfgDei = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
cbQosSetCfgDeiImposition = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 14, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
cbQosCMStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1), )
cbQosCMStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosCMPrePolicyPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 1), Counter32()).setMaxAccess("readonly")
cbQosCMPrePolicyPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 2), Counter32()).setMaxAccess("readonly")
cbQosCMPrePolicyPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 3), Counter64()).setMaxAccess("readonly")
cbQosCMPrePolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 4), Counter32()).setMaxAccess("readonly")
cbQosCMPrePolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 5), Counter32()).setMaxAccess("readonly")
cbQosCMPrePolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 6), Counter64()).setMaxAccess("readonly")
cbQosCMPrePolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosCMPostPolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 8), Counter32()).setMaxAccess("readonly")
cbQosCMPostPolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 9), Counter32()).setMaxAccess("readonly")
cbQosCMPostPolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 10), Counter64()).setMaxAccess("readonly")
cbQosCMPostPolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 11), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosCMDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 12), Counter32()).setMaxAccess("readonly")
cbQosCMDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 13), Counter32()).setMaxAccess("readonly")
cbQosCMDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 14), Counter64()).setMaxAccess("readonly")
cbQosCMDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 15), Counter32()).setMaxAccess("readonly")
cbQosCMDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 16), Counter32()).setMaxAccess("readonly")
cbQosCMDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 17), Counter64()).setMaxAccess("readonly")
cbQosCMDropBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 18), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosCMNoBufDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 19), Counter32()).setMaxAccess("readonly")
cbQosCMNoBufDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 20), Counter32()).setMaxAccess("readonly")
cbQosCMNoBufDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 21), Counter64()).setMaxAccess("readonly")
cbQosCMFragmentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 22), Counter32()).setMaxAccess("readonly")
cbQosCMFragmentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 23), Counter32()).setMaxAccess("readonly")
cbQosCMFragmentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 24), Counter64()).setMaxAccess("readonly")
cbQosCMFragmentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 25), Counter32()).setMaxAccess("readonly")
cbQosCMFragmentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 26), Counter32()).setMaxAccess("readonly")
cbQosCMFragmentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 15, 1, 1, 27), Counter64()).setMaxAccess("readonly")
cbQosMatchStmtStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1), )
cbQosMatchStmtStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosMatchPrePolicyPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 1), Counter32()).setMaxAccess("readonly")
cbQosMatchPrePolicyPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 2), Counter32()).setMaxAccess("readonly")
cbQosMatchPrePolicyPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 3), Counter64()).setMaxAccess("readonly")
cbQosMatchPrePolicyByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 4), Counter32()).setMaxAccess("readonly")
cbQosMatchPrePolicyByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 5), Counter32()).setMaxAccess("readonly")
cbQosMatchPrePolicyByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 6), Counter64()).setMaxAccess("readonly")
cbQosMatchPrePolicyBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 16, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1), )
cbQosPoliceStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosPoliceConformedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceConformedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceConformedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceConformedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceConformedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceConformedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceConformedBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 7), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceExceededPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceExceededPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 9), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceExceededPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceExceededByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceExceededByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 12), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceExceededByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 13), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceExceededBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 14), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceViolatedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 15), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceViolatedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 16), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceViolatedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 17), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceViolatedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 18), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceViolatedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 19), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceViolatedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 20), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceViolatedBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 17, 1, 1, 21), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cbQosQueueingStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1), )
cbQosQueueingStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosQueueingCurrentQDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 1), Gauge32()).setUnits('Octets').setMaxAccess("readonly")
cbQosQueueingMaxQDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 2), Gauge32()).setUnits('Octets').setMaxAccess("readonly")
cbQosQueueingDiscardByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 3), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosQueueingDiscardByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosQueueingDiscardByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosQueueingDiscardPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 6), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosQueueingDiscardPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosQueueingDiscardPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 18, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosTSStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1), )
cbQosTSStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosTSStatsDelayedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 1), Counter32()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDelayedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 2), Counter32()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDelayedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDelayedPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsDelayedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsDelayedPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 6), Counter64()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 7), Counter32()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 8), Counter32()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
cbQosTSStatsDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
cbQosTSStatsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
cbQosTSStatsCurrentQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 19, 1, 1, 14), Gauge32()).setUnits('packets').setMaxAccess("readonly")
cbQosREDClassStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1), )
cbQosREDClassStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosREDValue"))
cbQosREDRandomDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDRandomDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDRandomDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDRandomDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDRandomDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDRandomDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTailDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTailDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTailDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTailDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTailDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTailDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTransmitPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 13), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTransmitPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 14), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTransmitPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 15), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDTransmitByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 16), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTransmitByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 17), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDTransmitByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 18), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDECNMarkPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 19), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDECNMarkPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 20), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDECNMarkPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 21), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosREDECNMarkByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 22), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDECNMarkByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 23), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDECNMarkByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 24), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosREDMeanQSizeUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 25), CbQosQueueUnitType()).setMaxAccess("readonly")
cbQosREDMeanQSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 20, 1, 1, 26), CbQosQueueDepth()).setMaxAccess("readonly")
cbQosIPHCCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1), )
cbQosIPHCCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosIPHCCfgOption = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1, 1), IPHCOption()).setMaxAccess("readonly")
cbQosIPHCCfgEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 22, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
cbQosIPHCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1), )
cbQosIPHCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosIPHCRtpSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpCmprsOutPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 4), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpCmprsOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 5), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpCmprsOutPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpSavedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 7), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSavedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 8), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSavedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 9), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCRtpSentByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 13), Gauge32()).setUnits('Octets per second').setMaxAccess("readonly")
cbQosIPHCTcpSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 14), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 15), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 16), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpCmprsOutPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 17), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpCmprsOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 18), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpCmprsOutPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 19), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpSavedByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 20), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSavedByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 21), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSavedByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 22), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSentByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 23), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSentByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 24), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSentByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 25), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosIPHCTcpSentByteRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 26), Gauge32()).setUnits('Octets per second').setMaxAccess("readonly")
cbQosIPHCRtpFullHdrSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 27), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpFullHdrSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 28), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCRtpFullHdrSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 29), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpFullHdrSentPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 30), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpFullHdrSentPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 31), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosIPHCTcpFullHdrSentPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 23, 1, 1, 32), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1), )
cbQosSetStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosSetDscpPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetPrecedencePkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetQosGroupPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetFrDePkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetAtmClpPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetL2CosPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 6), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetMplsExpImpositionPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetDiscardClassPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 8), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetMplsExpTopMostPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetSrpPriorityPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 10), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetFrFecnBecnPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetDscpTunnelPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 12), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosSetPrecedenceTunnelPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 24, 1, 1, 13), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceColorStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1), )
cbQosPoliceColorStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosPoliceCfmColorCfmPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 1), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceCfmColorCfmByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 2), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfmColorExdPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceCfmColorExdByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 4), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfmColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceCfmColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceExdColorExdPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceExdColorExdByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 8), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceExdColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceExdColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 10), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceVltColorVltPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 11), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosPoliceVltColorVltByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosPoliceCfmColorCfmBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 13), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceCfmColorExdBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 14), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceCfmColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 15), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceExdColorExdBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 16), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceExdColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 17), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosPoliceVltColorVltBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 25, 1, 1, 18), CounterBasedGauge64()).setUnits('bits per second').setMaxAccess("readonly")
cbQosTableMapCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1), )
cbQosTableMapCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgIndex"))
cbQosTableMapCfgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 1), Unsigned32())
cbQosTableMapCfgName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
cbQosTableMapCfgBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("value", 1), ("copy", 2), ("ignore", 3),))).setMaxAccess("readonly")
cbQosTableMapCfgDftValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 26, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,99))).setMaxAccess("readonly")
cbQosTableMapValueCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1), )
cbQosTableMapValueCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapValueCfgFrom"))
cbQosTableMapValueCfgFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1, 1), Unsigned32())
cbQosTableMapValueCfgTo = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 27, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
cbQosTableMapSetCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1), )
cbQosTableMapSetCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosTMSetIpDscpFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 1), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetIpDscpMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
cbQosTMSetIpPrecedenceFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 3), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetIpPrecedenceMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
cbQosTMSetQosGroupFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 5), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetQosGroupMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
cbQosTMSetL2CosFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 7), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetL2CosMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
cbQosTMSetMplsExpImpFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 9), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetMplsExpImpMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
cbQosTMSetMplsExpTopFromType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 11), CbQosTMSetType()).setMaxAccess("readonly")
cbQosTMSetMplsExpTopMapName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 28, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
cbQosEBCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1), )
cbQosEBCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosEBCfgMechanism = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 1), CbQosEBType()).setMaxAccess("readonly")
cbQosEBCfgDropTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50,1000000))).setUnits('packets').setMaxAccess("readonly")
cbQosEBCfgDelayTarget = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(50,1000000))).setUnits('packets').setMaxAccess("readonly")
cbQosEBCfgDelayThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 29, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(16,1000))).setUnits('millisecond').setMaxAccess("readonly")
cbQosEBStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1), )
cbQosEBStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"))
cbQosEBStatsCorvilEBValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 1), Gauge32()).setUnits('kbps').setMaxAccess("readonly")
cbQosEBStatsCorvilEBStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
cbQosEBStatsCorvilCTD = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 30, 1, 1, 3), CbQosEBCtd()).setMaxAccess("readonly")
cbQosC3plAccountCfgTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1), )
cbQosC3plAccountCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"))
cbQosC3plAccountFeatureType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 33, 1, 1, 1), SetC3plAccountFeatureType()).setMaxAccess("readonly")
cbQosC3plAccountStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1), )
cbQosC3plAccountStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1), ).setIndexNames((0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsIndex"), (0, "CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountFeatureType"))
cbQosC3plAccountDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 1), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 2), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 4), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosC3plAccountDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 5), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosC3plAccountDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cbQosC3plAccountTailDropPktOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 7), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountTailDropPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 8), Counter32()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountTailDropPkt64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cbQosC3plAccountTailDropByteOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 10), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosC3plAccountTailDropByte = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 11), Counter32()).setUnits('Octets').setMaxAccess("readonly")
cbQosC3plAccountTailDropByte64 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 166, 1, 34, 1, 1, 12), Counter64()).setUnits('Octets').setMaxAccess("readonly")
ciscocbQosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1))
ciscocbQosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2))
ciscocbQosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 1)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"),))
ciscocbQosMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 2)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"),))
ciscocbQosMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 3)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"),))
ciscocbQosMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 4)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"),))
ciscocbQosMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 5)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"),))
ciscocbQosMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 6)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNewSetCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"),))
ciscocbQosMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 7)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"),))
ciscocbQosMIBComplianceRev7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 8)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"),))
ciscocbQosMIBComplianceRev8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 9)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrDeGroup"),))
ciscocbQosMIBComplianceRev9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 10)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"),))
ciscocbQosMIBComplianceRev10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 11)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"),))
ciscocbQosMIBComplianceRev11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 1, 12)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDDscpCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgGroupRev2"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgGroupRev3"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgGroupRev1"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosClassMapStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQos421XRCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosInterfacePolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrameRelayVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPVCPolicyGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosNoBufferDropGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDynamicQNumberGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassXmitCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassECNMarkCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPirGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAFPoliceViolateCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTrafficShapingDelayCountersGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsImpositionGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMPLSTopMostGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgThresholdTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgColorGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgTimeGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriorityGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecnGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2Group"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosServicePolicyExtGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountCfgGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountStatsGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVCGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFragmentGroup"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceColorStatsExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgExt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCStatsExt"),))
cbQosServicePolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 1)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"),))
cbQosInterfacePolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 2)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIFPolicyIndex"),))
cbQosFrameRelayVCPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 3)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosFRPolicyIndex"),))
cbQosATMPVCPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 4)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosATMPolicyIndex"),))
cbQosObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 5)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosConfigIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosObjectsType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosParentObjectsIndex"),))
cbQosPolicyMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 6)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyMapDesc"),))
cbQosClassMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 7)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDesc"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMInfo"),))
cbQosMatchStmtCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 8)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchStmtInfo"),))
cbQosQueueingCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 9)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"),))
cbQosREDCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 10)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgExponWeight"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMeanQsize"),))
cbQosREDClassCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 11)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgMaxThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"),))
cbQosPoliceCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 12)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"),))
cbQosTSCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 13)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgAdaptiveEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgAdaptiveRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgLimitType"),))
cbQosSetCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 14)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFeature"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgQosGroupValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassValue"),))
cbQosClassMapStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 15)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPrePolicyBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMPostPolicyBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMDropBitRate"),))
cbQosNoBufferDropGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 16)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMNoBufDropPkt64"),))
cbQosQueueingDynamicQNumberGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 17)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgDynamicQNumber"),))
cbQosTrafficShapingDelayCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 18)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDelayedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsActive"),))
cbQosMatchStmtStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 19)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMatchPrePolicyBitRate"),))
cbQosPoliceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 20)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceConformedBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExceededBitRate"),))
cbQosQueueingStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 21)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCurrentQDepth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingMaxQDepth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingDiscardPkt64"),))
cbQosTSStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 22)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSStatsCurrentQSize"),))
cbQosREDClassStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 23)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDRandomDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTailDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDMeanQSizeUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDMeanQSize"),))
cbQosREDClassXmitCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 24)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDTransmitByte64"),))
cbQosAFPoliceStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 25)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceViolatedBitRate"),))
cbQosAFPoliceCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 26)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgViolateAction"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgViolateSetValue"),))
cbQosREDDscpCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 27)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgDscpPrec"),))
cbQosNewSetCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 28)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"),))
cbQosQueueingCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 29)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQLimit"),))
cbQosREDCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 30)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgExponWeight"),))
cbQosREDClassCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 31)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThreshold"),))
cbQosPoliceCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 32)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"),))
cbQosPoliceActionCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 33)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgConform"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgConformSetValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgExceed"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgExceedSetValue"),))
cbQosAFPoliceViolateCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 34)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgViolate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceActionCfgViolateSetValue"),))
cbQosREDECNCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 35)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgECNEnabled"),))
cbQosREDClassECNMarkCountersGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 36)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDECNMarkByte64"),))
cbQosPoliceCfgExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 37)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate64"),))
cbQosSetCfgGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 38)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFeature"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgQosGroupValue"),))
cbQosSetCfgMplsImpositionGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 39)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpValue"),))
cbQosSetCfgDiscardClassGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 40)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDiscardClassValue"),))
cbQosSetCfgMPLSTopMostGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 41)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgMplsExpTopMostValue"),))
cbQosPoliceCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 42)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"),))
cbQosPoliceCfgPirGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 43)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir"),))
cbQosPoliceCfgPercentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 44)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRateType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentRateValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPercentPirValue"),))
cbQosTSCfgPercentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 45)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRateType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgPercentRateValue"),))
cbQosIPHCCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 46)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgOption"),))
cbQosIPHCStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 47)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpCmprsOutPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSavedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpSentByteRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpCmprsOutPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSavedByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpSentByteRate"),))
cbQosServicePolicyGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 48)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDirection"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIfIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosFrDLCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVPI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosAtmVCI"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEntityIndex"),))
cbQosQueueingCfgQLimitTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 49)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggrQLimitTime"),))
cbQosREDCfgThresholdTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 50)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdTime"),))
cbQosPoliceCfgCellGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 51)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCellPir"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstCell"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstCell"),))
cbQosPoliceCfgTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 52)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstTime"),))
cbQosPoliceCfgCdvtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 53)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgCdvt"),))
cbQosPoliceCfgColorGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 54)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConformColor"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExceedColor"),))
cbQosTSCfgTimeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 55)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstTime"),))
cbQosSetCfgSrpPriorityGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 56)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgSrpPriority"),))
cbQosSetCfgFrFecnBecnGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 57)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrFecnBecn"),))
cbQosSetStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 58)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDscpPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetPrecedencePkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetQosGroupPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetFrDePkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetAtmClpPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetL2CosPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetMplsExpImpositionPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDiscardClassPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetMplsExpTopMostPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetSrpPriorityPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetFrFecnBecnPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetDscpTunnelPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetPrecedenceTunnelPkt64"),))
cbQosPoliceColorStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 59)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltByte64"),))
cbQosTableMapCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 60)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgBehavior"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapCfgDftValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTableMapValueCfgTo"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpDscpFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpDscpMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpPrecedenceFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetIpPrecedenceMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetQosGroupFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetQosGroupMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetL2CosFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetL2CosMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpImpFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpImpMapName"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpTopFromType"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTMSetMplsExpTopMapName"),))
cbQosEBCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 61)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgMechanism"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDropTarget"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDelayTarget"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBCfgDelayThreshold"),))
cbQosEBStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 62)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilEBValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilEBStatus"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosEBStatsCorvilCTD"),))
cbQosServicePolicyExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 63)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosVlanIndex"),))
cbQosMeasureIPSLACfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 64)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupIndex"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosMeasureIPSLACfgGroupName"),))
cbQosTSCfgExtGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 65)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgRate64"),))
cbQosQueueingCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 66)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidthUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgFlowEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityEnabled"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPrioBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgQLimitUnits"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgAggregateQLimit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgPriorityLevel"),))
cbQosSetCfgL2Group = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 67)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgL2CosInnerValue"),))
cbQosREDClassCfgGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 68)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDCfgPktDropProb"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMaxThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosREDClassCfgMinThresholdUnit"),))
cbQosQueueingClassCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 69)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgThreshold"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgThresholdUnit"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingClassCfgQLimitWeight"),))
cbQosPoliceCfgGroupRev3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 70)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgConditional"),))
cbQosC3plAccountCfgGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 71)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountFeatureType"),))
cbQosC3plAccountStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 72)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountDropByte64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosC3plAccountTailDropByte64"),))
cbQosSetCfgFrDeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 73)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgFrDe"),))
cbQosEVCGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 74)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosEVC"),))
cbQosFragmentGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 75)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByteOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByte"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosCMFragmentByte64"),))
cbQosSetCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 76)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpPrecedenceTunnelValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgIpDSCPTunnelValue"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDei"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosSetCfgDeiImposition"),))
cbQosPoliceColorStatsExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 77)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorExdBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorCfmBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorExdBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfmColorVltBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceExdColorVltBitRate"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceVltColorVltBitRate"),))
cbQosIPHCCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 78)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCCfgEnabled"),))
cbQosIPHCStatsExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 79)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCRtpFullHdrSentPkt64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPktOverflow"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPkt"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosIPHCTcpFullHdrSentPkt64"),))
cbQos421XRCfgExt = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 166, 2, 2, 80)).setObjects(*(("CISCO-CLASS-BASED-QOS-MIB", "cbQosPolicyDiscontinuityTime"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgBandwidth64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosQueueingCfgIndividualQSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgExtBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosPoliceCfgPir64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgBurstSize64"), ("CISCO-CLASS-BASED-QOS-MIB", "cbQosTSCfgExtBurstSize64"),))
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosPoliceActionCfgEntry=cbQosPoliceActionCfgEntry, cbQosCMStatsTable=cbQosCMStatsTable, cbQosTSCfgTimeGroup=cbQosTSCfgTimeGroup, CbQosEBCtd=CbQosEBCtd, PYSNMP_MODULE_ID=ciscoCBQosMIB, cbQosIPHCStatsGroup=cbQosIPHCStatsGroup, cbQosCMNoBufDropPktOverflow=cbQosCMNoBufDropPktOverflow, cbQosPoliceCfgViolateAction=cbQosPoliceCfgViolateAction, cbQosSetPrecedenceTunnelPkt64=cbQosSetPrecedenceTunnelPkt64, cbQosQueueingCfgQLimitUnits=cbQosQueueingCfgQLimitUnits, cbQosSetStatsGroup=cbQosSetStatsGroup, InterfaceType=InterfaceType, cbQosTableMapSetCfg=cbQosTableMapSetCfg, cbQosREDRandomDropByte=cbQosREDRandomDropByte, cbQosQueueingCfgGroupRev2=cbQosQueueingCfgGroupRev2, cbQosREDTransmitByte=cbQosREDTransmitByte, cbQosIPHCRtpSentByteRate=cbQosIPHCRtpSentByteRate, cbQosTMSetL2CosFromType=cbQosTMSetL2CosFromType, cbQosPolicyMapCfgGroup=cbQosPolicyMapCfgGroup, cbQosIPHCTcpSentPktOverflow=cbQosIPHCTcpSentPktOverflow, cbQosCMPrePolicyBitRate=cbQosCMPrePolicyBitRate, cbQosAFPoliceCfgGroup=cbQosAFPoliceCfgGroup, cbQosPoliceExceededPkt64=cbQosPoliceExceededPkt64, cbQosIPHCRtpFullHdrSentPkt64=cbQosIPHCRtpFullHdrSentPkt64, cbQosTSCfgLimitType=cbQosTSCfgLimitType, cbQosC3plAccountStats=cbQosC3plAccountStats, cbQosPoliceExceededByteOverflow=cbQosPoliceExceededByteOverflow, cbQosVlanIndex=cbQosVlanIndex, cbQosPoliceCfgRate=cbQosPoliceCfgRate, ciscocbQosMIBComplianceRev2=ciscocbQosMIBComplianceRev2, cbQosCMDropByte=cbQosCMDropByte, ciscocbQosMIBComplianceRev8=ciscocbQosMIBComplianceRev8, cbQosMatchStmtCfg=cbQosMatchStmtCfg, cbQosREDCfgThresholdTimeGroup=cbQosREDCfgThresholdTimeGroup, cbQosSetCfgFrDeGroup=cbQosSetCfgFrDeGroup, cbQosPoliceCfgEntry=cbQosPoliceCfgEntry, cbQosEBCfg=cbQosEBCfg, cbQosSetCfgIpDSCPTunnelValue=cbQosSetCfgIpDSCPTunnelValue, cbQosTSCfgBurstSize64=cbQosTSCfgBurstSize64, cbQosIPHCTcpFullHdrSentPkt64=cbQosIPHCTcpFullHdrSentPkt64, cbQosREDClassCfgMinThresholdUnit=cbQosREDClassCfgMinThresholdUnit, cbQosPoliceActionCfgIndex=cbQosPoliceActionCfgIndex, cbQosSetCfgDiscardClassValue=cbQosSetCfgDiscardClassValue, cbQosPoliceVltColorVltByte64=cbQosPoliceVltColorVltByte64, cbQosTSCfgExtBurstSize=cbQosTSCfgExtBurstSize, cbQosPoliceCfgPirGroup=cbQosPoliceCfgPirGroup, cbQosCMDropPktOverflow=cbQosCMDropPktOverflow, cbQosIPHCRtpSentByte64=cbQosIPHCRtpSentByte64, cbQosC3plAccountDropByte64=cbQosC3plAccountDropByte64, cbQosAtmVPI=cbQosAtmVPI, cbQosTSStatsDropByteOverflow=cbQosTSStatsDropByteOverflow, cbQosC3plAccountTailDropPktOverflow=cbQosC3plAccountTailDropPktOverflow, cbQosTSStatsDropByte64=cbQosTSStatsDropByte64, cbQosIPHCRtpCmprsOutPkt=cbQosIPHCRtpCmprsOutPkt, cbQosREDCfgEntry=cbQosREDCfgEntry, cbQosQueueingStatsGroup=cbQosQueueingStatsGroup, cbQosTSStatsDropPktOverflow=cbQosTSStatsDropPktOverflow, cbQosFrameRelayPolicyEntry=cbQosFrameRelayPolicyEntry, cbQosPoliceCfgExtBurstCell=cbQosPoliceCfgExtBurstCell, cbQosSetCfgSrpPriorityGroup=cbQosSetCfgSrpPriorityGroup, cbQosTableMapSetCfgTable=cbQosTableMapSetCfgTable, cbQosSetCfgTable=cbQosSetCfgTable, cbQosC3plAccountTailDropByte64=cbQosC3plAccountTailDropByte64, cbQosTMSetQosGroupFromType=cbQosTMSetQosGroupFromType, cbQosMatchStmtName=cbQosMatchStmtName, cbQosPoliceCfgCellGroup=cbQosPoliceCfgCellGroup, cbQosREDECNMarkPktOverflow=cbQosREDECNMarkPktOverflow, cbQosTSCfgExtBurstSize64=cbQosTSCfgExtBurstSize64, cbQosREDDscpCfgGroup=cbQosREDDscpCfgGroup, cbQosC3plAccountStatsEntry=cbQosC3plAccountStatsEntry, cbQosPoliceCfgBurstTime=cbQosPoliceCfgBurstTime, cbQosAFPoliceViolateCfgGroup=cbQosAFPoliceViolateCfgGroup, cbQosQueueingClassCfgThreshold=cbQosQueueingClassCfgThreshold, cbQosCMPostPolicyByte64=cbQosCMPostPolicyByte64, cbQosPoliceCfgConformSetValue=cbQosPoliceCfgConformSetValue, cbQosEBStatsCorvilEBValue=cbQosEBStatsCorvilEBValue, cbQosEBCfgDelayTarget=cbQosEBCfgDelayTarget, cbQosREDMeanQSize=cbQosREDMeanQSize, cbQosPoliceCfgBurstSize64=cbQosPoliceCfgBurstSize64, cbQosPoliceStats=cbQosPoliceStats, cbQosTableMapCfgTable=cbQosTableMapCfgTable, cbQosPoliceCfgGroupRev2=cbQosPoliceCfgGroupRev2, cbQosTMSetL2CosMapName=cbQosTMSetL2CosMapName, cbQosTMSetIpDscpFromType=cbQosTMSetIpDscpFromType, cbQosIPHCCfgExt=cbQosIPHCCfgExt, cbQosTSCfgTable=cbQosTSCfgTable, cbQosPoliceCfgRateType=cbQosPoliceCfgRateType, cbQosMatchPrePolicyByte64=cbQosMatchPrePolicyByte64, cbQosMatchStmtStats=cbQosMatchStmtStats, cbQosREDClassCfg=cbQosREDClassCfg, cbQosPoliceActionCfgViolate=cbQosPoliceActionCfgViolate, cbQosIPHCRtpFullHdrSentPkt=cbQosIPHCRtpFullHdrSentPkt, cbQosMatchPrePolicyPktOverflow=cbQosMatchPrePolicyPktOverflow, cbQosPoliceCfgColorGroup=cbQosPoliceCfgColorGroup, cbQosREDClassCfgTable=cbQosREDClassCfgTable, cbQosTableMapSetCfgEntry=cbQosTableMapSetCfgEntry, cbQosREDECNMarkPkt=cbQosREDECNMarkPkt, cbQosREDClassCfgMinThresholdTime=cbQosREDClassCfgMinThresholdTime, cbQosQueueingDiscardPktOverflow=cbQosQueueingDiscardPktOverflow, cbQosPoliceActionCfgConformSetValue=cbQosPoliceActionCfgConformSetValue, cbQosPoliceViolatedPkt=cbQosPoliceViolatedPkt, cbQosQueueingDiscardByte=cbQosQueueingDiscardByte, cbQosREDCfgDscpPrec=cbQosREDCfgDscpPrec, cbQosQueueingCfgIndividualQSize=cbQosQueueingCfgIndividualQSize, cbQosPoliceActionCfgExceed=cbQosPoliceActionCfgExceed, cbQosFragmentGroup=cbQosFragmentGroup, cbQosCMPostPolicyByte=cbQosCMPostPolicyByte, cbQosREDClassCfgMaxThreshold=cbQosREDClassCfgMaxThreshold, cbQosIPHCRtpSentPkt=cbQosIPHCRtpSentPkt, cbQosTSStatsDropByte=cbQosTSStatsDropByte, cbQosIPHCRtpSentPkt64=cbQosIPHCRtpSentPkt64, cbQosREDTransmitByte64=cbQosREDTransmitByte64, cbQosPoliceCfgConformAction=cbQosPoliceCfgConformAction, cbQosIPHCTcpSentByteRate=cbQosIPHCTcpSentByteRate, cbQosPolicyDirection=cbQosPolicyDirection, cbQosPoliceCfgExtBurstTime=cbQosPoliceCfgExtBurstTime, cbQosTMSetMplsExpTopMapName=cbQosTMSetMplsExpTopMapName, cbQosIPHCTcpCmprsOutPkt=cbQosIPHCTcpCmprsOutPkt, cbQosCMPrePolicyPkt=cbQosCMPrePolicyPkt, cbQosSetCfgDiscardClassGroup=cbQosSetCfgDiscardClassGroup, cbQosPoliceCfgPercentRateValue=cbQosPoliceCfgPercentRateValue, cbQosClassMapStatsGroup=cbQosClassMapStatsGroup, cbQosQueueingCfgTable=cbQosQueueingCfgTable, cbQosIPHCTcpSentByte=cbQosIPHCTcpSentByte, cbQosFrDLCI=cbQosFrDLCI, cbQosSetDscpPkt64=cbQosSetDscpPkt64, cbQosPoliceVltColorVltPkt64=cbQosPoliceVltColorVltPkt64, CbQosQueueUnitType=CbQosQueueUnitType, cbQosPoliceViolatedByte64=cbQosPoliceViolatedByte64, cbQosEBStats=cbQosEBStats, cbQosSetCfgGroupRev1=cbQosSetCfgGroupRev1, cbQosCMDropByte64=cbQosCMDropByte64, cbQosC3plAccountDropPkt=cbQosC3plAccountDropPkt, cbQosIPHCCfgEntry=cbQosIPHCCfgEntry, cbQosSetCfgFrFecnBecnGroup=cbQosSetCfgFrFecnBecnGroup, cbQosQueueingCfg=cbQosQueueingCfg, cbQosQueueingDiscardPkt=cbQosQueueingDiscardPkt, cbQosREDRandomDropByteOverflow=cbQosREDRandomDropByteOverflow, cbQosIPHCTcpSentByteOverflow=cbQosIPHCTcpSentByteOverflow, cbQosIPHCTcpSavedByte64=cbQosIPHCTcpSavedByte64, ciscocbQosMIBComplianceRev5=ciscocbQosMIBComplianceRev5, cbQosQueueingCfgQLimitTimeGroup=cbQosQueueingCfgQLimitTimeGroup, cbQosATMPVCPolicy=cbQosATMPVCPolicy, cbQosPoliceCfmColorExdBitRate=cbQosPoliceCfmColorExdBitRate, cbQosPolicyDiscontinuityTime=cbQosPolicyDiscontinuityTime, cbQosTableMapValueCfg=cbQosTableMapValueCfg, CbQosTMSetType=CbQosTMSetType, cbQosPoliceCfgPercentGroup=cbQosPoliceCfgPercentGroup, cbQosPoliceActionCfg=cbQosPoliceActionCfg, cbQosIPHCStats=cbQosIPHCStats, cbQosTSStatsGroup=cbQosTSStatsGroup, cbQosREDCfgGroupRev1=cbQosREDCfgGroupRev1, cbQosNoBufferDropGroup=cbQosNoBufferDropGroup, cbQosInterfacePolicyTable=cbQosInterfacePolicyTable, cbQosSetCfgExt=cbQosSetCfgExt, cbQosREDClassStatsEntry=cbQosREDClassStatsEntry, cbQosAtmVCI=cbQosAtmVCI, cbQosTableMapCfgDftValue=cbQosTableMapCfgDftValue, cbQosPolicyMapCfgEntry=cbQosPolicyMapCfgEntry, cbQosQueueingCfgEntry=cbQosQueueingCfgEntry, cbQosPoliceCfgBurstCell=cbQosPoliceCfgBurstCell, cbQosPoliceCfgRate64=cbQosPoliceCfgRate64, cbQosTableMapCfgName=cbQosTableMapCfgName, cbQosCMPrePolicyPkt64=cbQosCMPrePolicyPkt64, cbQosPoliceExceededByte64=cbQosPoliceExceededByte64, cbQosQueueingClassConfigIndex=cbQosQueueingClassConfigIndex, cbQosQueueingMaxQDepth=cbQosQueueingMaxQDepth, cbQosCMDropPkt=cbQosCMDropPkt, cbQosC3plAccountCfgTable=cbQosC3plAccountCfgTable, cbQosREDTailDropByte64=cbQosREDTailDropByte64, cbQosTSStatsDelayedPktOverflow=cbQosTSStatsDelayedPktOverflow, cbQosSetDiscardClassPkt64=cbQosSetDiscardClassPkt64, cbQosSetCfg=cbQosSetCfg, cbQosIPHCCfg=cbQosIPHCCfg, cbQosCMPostPolicyBitRate=cbQosCMPostPolicyBitRate, cbQosC3plAccountCfgGroup=cbQosC3plAccountCfgGroup, TrafficShapingLimit=TrafficShapingLimit, cbQosREDMeanQSizeUnits=cbQosREDMeanQSizeUnits, cbQosPoliceCfmColorExdPkt64=cbQosPoliceCfmColorExdPkt64, cbQosSetL2CosPkt64=cbQosSetL2CosPkt64, cbQosQueueingClassCfgQLimitWeight=cbQosQueueingClassCfgQLimitWeight, cbQosPoliceViolatedPktOverflow=cbQosPoliceViolatedPktOverflow, cbQosTableMapValueCfgFrom=cbQosTableMapValueCfgFrom, SetC3plAccountFeatureType=SetC3plAccountFeatureType, cbQosQueueingDiscardByteOverflow=cbQosQueueingDiscardByteOverflow, cbQosPoliceStatsTable=cbQosPoliceStatsTable, REDMechanism=REDMechanism, cbQosAFPoliceStatsGroup=cbQosAFPoliceStatsGroup, cbQosIPHCTcpFullHdrSentPktOverflow=cbQosIPHCTcpFullHdrSentPktOverflow, cbQosREDTailDropPktOverflow=cbQosREDTailDropPktOverflow, cbQosREDECNMarkByte64=cbQosREDECNMarkByte64, cbQosREDCfgGroup=cbQosREDCfgGroup, cbQosREDTailDropByte=cbQosREDTailDropByte, cbQosMatchStmtStatsTable=cbQosMatchStmtStatsTable, cbQosQueueingCfgIndividualQSize64=cbQosQueueingCfgIndividualQSize64, cbQosEBStatsTable=cbQosEBStatsTable, cbQosCMStatsEntry=cbQosCMStatsEntry, cbQosMatchStmtCfgEntry=cbQosMatchStmtCfgEntry, cbQosSetFrFecnBecnPkt64=cbQosSetFrFecnBecnPkt64, ciscocbQosMIBCompliance=ciscocbQosMIBCompliance, cbQosTSCfgRate64=cbQosTSCfgRate64, cbQosNewSetCfgGroup=cbQosNewSetCfgGroup, cbQosQueueingClassCfgGroup=cbQosQueueingClassCfgGroup, cbQosMatchStmtStatsEntry=cbQosMatchStmtStatsEntry, cbQosServicePolicyTable=cbQosServicePolicyTable, cbQosObjectsType=cbQosObjectsType, cbQosIfIndex=cbQosIfIndex, cbQosPoliceCfgCdvt=cbQosPoliceCfgCdvt, cbQosPoliceViolatedBitRate=cbQosPoliceViolatedBitRate, cbQosC3plAccountStatsTable=cbQosC3plAccountStatsTable, cbQosEBStatsGroup=cbQosEBStatsGroup, cbQosMeasureIPSLACfgEntry=cbQosMeasureIPSLACfgEntry, CbQosRateType=CbQosRateType, cbQosConfigIndex=cbQosConfigIndex, cbQosPoliceCfmColorVltBitRate=cbQosPoliceCfmColorVltBitRate, cbQosTSStatsDelayedPkt=cbQosTSStatsDelayedPkt, cbQosPoliceColorStatsTable=cbQosPoliceColorStatsTable, ciscocbQosMIBComplianceRev11=ciscocbQosMIBComplianceRev11, cbQosServicePolicyGroup=cbQosServicePolicyGroup, cbQosPoliceConformedByteOverflow=cbQosPoliceConformedByteOverflow, cbQosFrameRelayVCPolicyGroup=cbQosFrameRelayVCPolicyGroup, cbQosREDClassCfgMaxThresholdTime=cbQosREDClassCfgMaxThresholdTime, cbQosREDRandomDropPkt64=cbQosREDRandomDropPkt64, cbQosObjects=cbQosObjects, cbQosIFPolicyIndex=cbQosIFPolicyIndex, cbQosIPHCTcpSavedByte=cbQosIPHCTcpSavedByte, cbQosCMFragmentByte=cbQosCMFragmentByte, cbQosTableMapCfgGroup=cbQosTableMapCfgGroup, cbQosC3plAccountDropByte=cbQosC3plAccountDropByte, cbQosMatchPrePolicyByte=cbQosMatchPrePolicyByte, cbQosSetPrecedencePkt64=cbQosSetPrecedencePkt64, cbQosTSStatsDropPkt64=cbQosTSStatsDropPkt64, cbQosC3plAccountCfg=cbQosC3plAccountCfg, cbQosPoliceStatsEntry=cbQosPoliceStatsEntry, cbQosREDClassCfgGroup=cbQosREDClassCfgGroup, cbQosPoliceConformedPkt64=cbQosPoliceConformedPkt64, cbQosClassMapCfg=cbQosClassMapCfg, cbQosIPHCRtpSentByteOverflow=cbQosIPHCRtpSentByteOverflow, CbQosEBType=CbQosEBType, cbQosREDClassCfgEntry=cbQosREDClassCfgEntry, cbQosIPHCRtpSentPktOverflow=cbQosIPHCRtpSentPktOverflow, cbQosTSStatsTable=cbQosTSStatsTable, cbQosC3plAccountTailDropByte=cbQosC3plAccountTailDropByte, cbQosTrafficShapingDelayCountersGroup=cbQosTrafficShapingDelayCountersGroup, cbQosCMNoBufDropPkt64=cbQosCMNoBufDropPkt64, cbQosQueueingStatsTable=cbQosQueueingStatsTable, cbQosEBStatsCorvilEBStatus=cbQosEBStatsCorvilEBStatus, cbQosPoliceActionCfgTable=cbQosPoliceActionCfgTable, ciscocbQosMIBComplianceRev4=ciscocbQosMIBComplianceRev4, cbQosQueueingCfgPriorityEnabled=cbQosQueueingCfgPriorityEnabled, cbQosObjectsGroup=cbQosObjectsGroup, cbQosEBCfgEntry=cbQosEBCfgEntry, cbQosREDRandomDropPktOverflow=cbQosREDRandomDropPktOverflow, cbQosCMPostPolicyByteOverflow=cbQosCMPostPolicyByteOverflow)
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosSetDscpTunnelPkt64=cbQosSetDscpTunnelPkt64, cbQosPoliceCfgExceedColor=cbQosPoliceCfgExceedColor, cbQosIPHCTcpFullHdrSentPkt=cbQosIPHCTcpFullHdrSentPkt, cbQosREDTransmitByteOverflow=cbQosREDTransmitByteOverflow, cbQosTSCfgBurstSize=cbQosTSCfgBurstSize, SetFeatureType=SetFeatureType, cbQosPolicyIndex=cbQosPolicyIndex, cbQosTSCfg=cbQosTSCfg, cbQosEVCGroup=cbQosEVCGroup, cbQosMatchPrePolicyByteOverflow=cbQosMatchPrePolicyByteOverflow, cbQosREDRandomDropByte64=cbQosREDRandomDropByte64, cbQosPoliceColorStatsEntry=cbQosPoliceColorStatsEntry, cbQosQueueingCfgGroupRev1=cbQosQueueingCfgGroupRev1, cbQosIPHCStatsTable=cbQosIPHCStatsTable, cbQosCMName=cbQosCMName, cbQosCMDropBitRate=cbQosCMDropBitRate, cbQosIPHCCfgEnabled=cbQosIPHCCfgEnabled, cbQosQlimitWeightValue=cbQosQlimitWeightValue, cbQosEBCfgGroup=cbQosEBCfgGroup, cbQosSetCfgMPLSTopMostGroup=cbQosSetCfgMPLSTopMostGroup, cbQosTMSetQosGroupMapName=cbQosTMSetQosGroupMapName, cbQosREDCfg=cbQosREDCfg, cbQosQueueingCfgPriorityLevel=cbQosQueueingCfgPriorityLevel, cbQosTableMapCfgBehavior=cbQosTableMapCfgBehavior, cbQosObjectsIndex=cbQosObjectsIndex, cbQosPoliceExceededByte=cbQosPoliceExceededByte, cbQosPoliceCfgGroupRev3=cbQosPoliceCfgGroupRev3, cbQosServicePolicy=cbQosServicePolicy, cbQosQueueingCfgAggregateQSize=cbQosQueueingCfgAggregateQSize, cbQosREDCfgMeanQsize=cbQosREDCfgMeanQsize, cbQosPoliceCfgPir64=cbQosPoliceCfgPir64, cbQosEBCfgMechanism=cbQosEBCfgMechanism, cbQosREDClassCfgThresholdUnit=cbQosREDClassCfgThresholdUnit, cbQosREDClassStats=cbQosREDClassStats, cbQosQueueingCurrentQDepth=cbQosQueueingCurrentQDepth, cbQosREDCfgECNEnabled=cbQosREDCfgECNEnabled, cbQosQueueingClassCfgThresholdUnit=cbQosQueueingClassCfgThresholdUnit, cbQosREDValue=cbQosREDValue, QueueMechanism=QueueMechanism, cbQosTableMapCfg=cbQosTableMapCfg, cbQosTSStatsDelayedByte=cbQosTSStatsDelayedByte, cbQosSetFrDePkt64=cbQosSetFrDePkt64, cbQosInterfacePolicyEntry=cbQosInterfacePolicyEntry, cbQosPoliceCfgPir=cbQosPoliceCfgPir, ciscocbQosMIBCompliances=ciscocbQosMIBCompliances, cbQosSetCfgMplsExpValue=cbQosSetCfgMplsExpValue, cbQosREDClassCfgMaxThresholdUnit=cbQosREDClassCfgMaxThresholdUnit, cbQosCMDropByteOverflow=cbQosCMDropByteOverflow, cbQosIPHCRtpCmprsOutPktOverflow=cbQosIPHCRtpCmprsOutPktOverflow, cbQosREDTailDropByteOverflow=cbQosREDTailDropByteOverflow, cbQosREDTailDropPkt=cbQosREDTailDropPkt, cbQosCMPrePolicyPktOverflow=cbQosCMPrePolicyPktOverflow, cbQosQueueingClassCfgEntry=cbQosQueueingClassCfgEntry, cbQosTSCfgAdaptiveEnabled=cbQosTSCfgAdaptiveEnabled, cbQosATMPVCPolicyTable=cbQosATMPVCPolicyTable, ciscoCBQosMIB=ciscoCBQosMIB, cbQosTSCfgGroup=cbQosTSCfgGroup, cbQosREDClassStatsTable=cbQosREDClassStatsTable, cbQosPoliceCfmColorExdByte64=cbQosPoliceCfmColorExdByte64, cbQosSetCfgIpDSCPValue=cbQosSetCfgIpDSCPValue, cbQosFRPolicyIndex=cbQosFRPolicyIndex, cbQosInterfacePolicyGroup=cbQosInterfacePolicyGroup, cbQosPoliceCfgViolateSetValue=cbQosPoliceCfgViolateSetValue, cbQosTableMapValueCfgEntry=cbQosTableMapValueCfgEntry, cbQosPoliceCfgCdvtGroup=cbQosPoliceCfgCdvtGroup, cbQosC3plAccountTailDropPkt64=cbQosC3plAccountTailDropPkt64, cbQosPoliceCfgGroupRev1=cbQosPoliceCfgGroupRev1, cbQosPoliceExdColorExdByte64=cbQosPoliceExdColorExdByte64, cbQosREDClassECNMarkCountersGroup=cbQosREDClassECNMarkCountersGroup, cbQosTMSetIpDscpMapName=cbQosTMSetIpDscpMapName, cbQosQueueingCfgAggregateQLimit=cbQosQueueingCfgAggregateQLimit, cbQosPoliceCfgTimeGroup=cbQosPoliceCfgTimeGroup, ciscocbQosMIBComplianceRev1=ciscocbQosMIBComplianceRev1, cbQosQueueingStatsEntry=cbQosQueueingStatsEntry, cbQosPoliceCfgGroup=cbQosPoliceCfgGroup, cbQosC3plAccountDropPktOverflow=cbQosC3plAccountDropPktOverflow, cbQosPoliceActionCfgGroup=cbQosPoliceActionCfgGroup, cbQosQueueingCfgGroup=cbQosQueueingCfgGroup, cbQosSetStatsEntry=cbQosSetStatsEntry, cbQosTSStatsDropPkt=cbQosTSStatsDropPkt, cbQosTMSetMplsExpImpMapName=cbQosTMSetMplsExpImpMapName, cbQosCMFragmentPkt64=cbQosCMFragmentPkt64, cbQosREDECNCfgGroup=cbQosREDECNCfgGroup, cbQosREDECNMarkPkt64=cbQosREDECNMarkPkt64, cbQosPoliceCfmColorVltPkt64=cbQosPoliceCfmColorVltPkt64, cbQosMeasureIPSLACfgGroupIndex=cbQosMeasureIPSLACfgGroupIndex, cbQosPoliceConformedBitRate=cbQosPoliceConformedBitRate, cbQosMatchStmtStatsGroup=cbQosMatchStmtStatsGroup, cbQosATMPVCPolicyEntry=cbQosATMPVCPolicyEntry, cbQosPoliceCfgExceedSetValue=cbQosPoliceCfgExceedSetValue, cbQosSetQosGroupPkt64=cbQosSetQosGroupPkt64, cbQosPolicyMapCfgTable=cbQosPolicyMapCfgTable, cbQosSetCfgDeiImposition=cbQosSetCfgDeiImposition, cbQosSetCfgL2CosValue=cbQosSetCfgL2CosValue, cbQosPoliceExdColorVltBitRate=cbQosPoliceExdColorVltBitRate, cbQosPoliceColorStatsGroup=cbQosPoliceColorStatsGroup, cbQosIPHCTcpSentPkt64=cbQosIPHCTcpSentPkt64, cbQosPoliceStatsGroup=cbQosPoliceStatsGroup, cbQosREDECNMarkByteOverflow=cbQosREDECNMarkByteOverflow, cbQosPoliceConformedByte64=cbQosPoliceConformedByte64, cbQosPoliceCfgBurstSize=cbQosPoliceCfgBurstSize, cbQosSetStatsTable=cbQosSetStatsTable, cbQosTableMapCfgIndex=cbQosTableMapCfgIndex, cbQosPoliceActionCfgExceedSetValue=cbQosPoliceActionCfgExceedSetValue, cbQosPoliceCfmColorCfmBitRate=cbQosPoliceCfmColorCfmBitRate, cbQosSetCfgL2CosInnerValue=cbQosSetCfgL2CosInnerValue, cbQosIPHCRtpFullHdrSentPktOverflow=cbQosIPHCRtpFullHdrSentPktOverflow, cbQosIPHCRtpSavedByte64=cbQosIPHCRtpSavedByte64, cbQosMatchPrePolicyPkt64=cbQosMatchPrePolicyPkt64, cbQosFrameRelayVCPolicy=cbQosFrameRelayVCPolicy, cbQosPoliceExceededBitRate=cbQosPoliceExceededBitRate, ciscocbQosMIBComplianceRev7=ciscocbQosMIBComplianceRev7, cbQosSetCfgSrpPriority=cbQosSetCfgSrpPriority, cbQosQueueingCfgBandwidth=cbQosQueueingCfgBandwidth, cbQosTSCfgPercentGroup=cbQosTSCfgPercentGroup, cbQosMatchStmtCfgGroup=cbQosMatchStmtCfgGroup, cbQosPoliceCfmColorCfmByte64=cbQosPoliceCfmColorCfmByte64, cbQosSetCfgIpPrecedenceTunnelValue=cbQosSetCfgIpPrecedenceTunnelValue, cbQosREDCfgMinThreshold=cbQosREDCfgMinThreshold, cbQosQueueingDiscardPkt64=cbQosQueueingDiscardPkt64, cbQosCMPrePolicyByteOverflow=cbQosCMPrePolicyByteOverflow, CbQosQueueDepth=CbQosQueueDepth, cbQosCMPrePolicyByte=cbQosCMPrePolicyByte, cbQosSetCfgFrFecnBecn=cbQosSetCfgFrFecnBecn, cbQosSetCfgMplsImpositionGroup=cbQosSetCfgMplsImpositionGroup, cbQosREDCfgExponWeight=cbQosREDCfgExponWeight, cbQosClassMapCfgGroup=cbQosClassMapCfgGroup, cbQosQueueingCfgFlowEnabled=cbQosQueueingCfgFlowEnabled, cbQosREDRandomDropPkt=cbQosREDRandomDropPkt, cbQosSetCfgGroup=cbQosSetCfgGroup, cbQosC3plAccountCfgEntry=cbQosC3plAccountCfgEntry, cbQosPoliceConformedPktOverflow=cbQosPoliceConformedPktOverflow, cbQosTSCfgExtBurstTime=cbQosTSCfgExtBurstTime, cbQosServicePolicyGroupRev1=cbQosServicePolicyGroupRev1, cbQosC3plAccountStatsGroup=cbQosC3plAccountStatsGroup, cbQosTSStats=cbQosTSStats, cbQosREDClassCfgGroupRev1=cbQosREDClassCfgGroupRev1, cbQosPolicyMapDesc=cbQosPolicyMapDesc, cbQosCMDesc=cbQosCMDesc, cbQosPoliceCfgExceedAction=cbQosPoliceCfgExceedAction, cbQosIPHCTcpSentByte64=cbQosIPHCTcpSentByte64, cbQosTMSetIpPrecedenceMapName=cbQosTMSetIpPrecedenceMapName, cbQosQueueingCfgBandwidthUnits=cbQosQueueingCfgBandwidthUnits, cbQosSetCfgIpPrecedenceValue=cbQosSetCfgIpPrecedenceValue, cbQosREDCfgPktDropProb=cbQosREDCfgPktDropProb, cbQosTSCfgRateType=cbQosTSCfgRateType, cbQosPoliceCfgCellPir=cbQosPoliceCfgCellPir, cbQosQueueingDiscardByte64=cbQosQueueingDiscardByte64, ciscocbQosMIBConformance=ciscocbQosMIBConformance, cbQosIPHCCfgGroup=cbQosIPHCCfgGroup, cbQosATMPolicyIndex=cbQosATMPolicyIndex, cbQosTSStatsDelayedByte64=cbQosTSStatsDelayedByte64, cbQosTSCfgBurstTime=cbQosTSCfgBurstTime, cbQosObjectsTable=cbQosObjectsTable, cbQosREDCfgMaxThreshold=cbQosREDCfgMaxThreshold, cbQosIfType=cbQosIfType, cbQosCMFragmentByte64=cbQosCMFragmentByte64, cbQosTSCfgAdaptiveRate=cbQosTSCfgAdaptiveRate, cbQosTSStatsActive=cbQosTSStatsActive, ciscocbQosMIBComplianceRev10=ciscocbQosMIBComplianceRev10, cbQosIPHCRtpSavedByteOverflow=cbQosIPHCRtpSavedByteOverflow, ciscocbQosMIBComplianceRev3=ciscocbQosMIBComplianceRev3, cbQosPoliceCfgExtGroup=cbQosPoliceCfgExtGroup, cbQosTSStatsDelayedPkt64=cbQosTSStatsDelayedPkt64, cbQosPoliceViolatedPkt64=cbQosPoliceViolatedPkt64, cbQosSetMplsExpTopMostPkt64=cbQosSetMplsExpTopMostPkt64, cbQosSetCfgQosGroupValue=cbQosSetCfgQosGroupValue, cbQosSetAtmClpPkt64=cbQosSetAtmClpPkt64, cbQosQueueingCfgAggrQLimitTime=cbQosQueueingCfgAggrQLimitTime, cbQosCMFragmentByteOverflow=cbQosCMFragmentByteOverflow, cbQosTMSetMplsExpImpFromType=cbQosTMSetMplsExpImpFromType, cbQosPoliceActionCfgConform=cbQosPoliceActionCfgConform, cbQosREDClassCfgGroupRev2=cbQosREDClassCfgGroupRev2, cbQosATMPVCPolicyGroup=cbQosATMPVCPolicyGroup, cbQosEBStatsCorvilCTD=cbQosEBStatsCorvilCTD, cbQosClassMapStats=cbQosClassMapStats, cbQosPoliceExdColorExdBitRate=cbQosPoliceExdColorExdBitRate, cbQosREDClassXmitCountersGroup=cbQosREDClassXmitCountersGroup, cbQosCMDropPkt64=cbQosCMDropPkt64, QueueingBandwidthUnits=QueueingBandwidthUnits, cbQosTableMapValueCfgTable=cbQosTableMapValueCfgTable, cbQosPoliceConformedPkt=cbQosPoliceConformedPkt, cbQosSetSrpPriorityPkt64=cbQosSetSrpPriorityPkt64, cbQosInterfacePolicy=cbQosInterfacePolicy, cbQosMeasureIPSLACfgGroup=cbQosMeasureIPSLACfgGroup, cbQosSetMplsExpImpositionPkt64=cbQosSetMplsExpImpositionPkt64, cbQosSetCfgFrDe=cbQosSetCfgFrDe, QosClassInfo=QosClassInfo, cbQosEBCfgTable=cbQosEBCfgTable, cbQosQueueingCfgPrioBurstSize=cbQosQueueingCfgPrioBurstSize, cbQosFrameRelayPolicyTable=cbQosFrameRelayPolicyTable, cbQosPoliceCfmColorVltByte64=cbQosPoliceCfmColorVltByte64, ciscoCBQosMIBObjects=ciscoCBQosMIBObjects, cbQosPoliceCfgExtBurstSize64=cbQosPoliceCfgExtBurstSize64, ciscocbQosMIBComplianceRev6=ciscocbQosMIBComplianceRev6, cbQosTMSetMplsExpTopFromType=cbQosTMSetMplsExpTopFromType, cbQosTSStatsEntry=cbQosTSStatsEntry, cbQosPoliceExdColorVltPkt64=cbQosPoliceExdColorVltPkt64, cbQos421XRCfgExt=cbQos421XRCfgExt, cbQosIPHCTcpCmprsOutPkt64=cbQosIPHCTcpCmprsOutPkt64, cbQosC3plAccountTailDropPkt=cbQosC3plAccountTailDropPkt, cbQosMeasureIPSLACfgTable=cbQosMeasureIPSLACfgTable, cbQosIPHCRtpCmprsOutPkt64=cbQosIPHCRtpCmprsOutPkt64, cbQosPolicyMapName=cbQosPolicyMapName, cbQosIPHCRtpSavedByte=cbQosIPHCRtpSavedByte, cbQosPoliceColorStatsExt=cbQosPoliceColorStatsExt, cbQosPoliceCfgConformColor=cbQosPoliceCfgConformColor, cbQosREDTransmitPkt=cbQosREDTransmitPkt, cbQosREDCfgTable=cbQosREDCfgTable, cbQosREDECNMarkByte=cbQosREDECNMarkByte, cbQosTableMapCfgEntry=cbQosTableMapCfgEntry, TrafficDirection=TrafficDirection, cbQosSetCfgL2Group=cbQosSetCfgL2Group, cbQosPoliceCfgTable=cbQosPoliceCfgTable, cbQosIPHCStatsExt=cbQosIPHCStatsExt, cbQosQueueingStats=cbQosQueueingStats, cbQosREDClassCfgMinThreshold=cbQosREDClassCfgMinThreshold, cbQosPoliceCfmColorCfmPkt64=cbQosPoliceCfmColorCfmPkt64, cbQosPoliceViolatedByte=cbQosPoliceViolatedByte, cbQosTSCfgExtGroup=cbQosTSCfgExtGroup, QosObjectType=QosObjectType, cbQosPoliceViolatedByteOverflow=cbQosPoliceViolatedByteOverflow, cbQosREDTailDropPkt64=cbQosREDTailDropPkt64, cbQosTSCfgPercentRateValue=cbQosTSCfgPercentRateValue, cbQosMatchStmtCfgTable=cbQosMatchStmtCfgTable, cbQosPoliceCfgCellRate=cbQosPoliceCfgCellRate, cbQosREDTransmitPktOverflow=cbQosREDTransmitPktOverflow, cbQosC3plAccountTailDropByteOverflow=cbQosC3plAccountTailDropByteOverflow, cbQosREDClassStatsGroup=cbQosREDClassStatsGroup, cbQosSetCfgDei=cbQosSetCfgDei, cbQosCMFragmentPkt=cbQosCMFragmentPkt, cbQosTSCfgRate=cbQosTSCfgRate, cbQosPoliceActionCfgViolateSetValue=cbQosPoliceActionCfgViolateSetValue, cbQosTSCfgEntry=cbQosTSCfgEntry, cbQosEBStatsEntry=cbQosEBStatsEntry, ciscocbQosMIBGroups=ciscocbQosMIBGroups, QosMatchInfo=QosMatchInfo, cbQosPoliceCfgExtBurstSize=cbQosPoliceCfgExtBurstSize, cbQosC3plAccountDropPkt64=cbQosC3plAccountDropPkt64, cbQosIPHCTcpSavedByteOverflow=cbQosIPHCTcpSavedByteOverflow, cbQosMeasureIPSLACfg=cbQosMeasureIPSLACfg, cbQosCMCfgTable=cbQosCMCfgTable, cbQosSetCfgFeature=cbQosSetCfgFeature, cbQosPoliceExdColorVltByte64=cbQosPoliceExdColorVltByte64, cbQosQueueingClassCfg=cbQosQueueingClassCfg, cbQosTMSetIpPrecedenceFromType=cbQosTMSetIpPrecedenceFromType, PoliceAction=PoliceAction, cbQosEVC=cbQosEVC, cbQosEBCfgDropTarget=cbQosEBCfgDropTarget, cbQosParentObjectsIndex=cbQosParentObjectsIndex, cbQosC3plAccountFeatureType=cbQosC3plAccountFeatureType, cbQosEBCfgDelayThreshold=cbQosEBCfgDelayThreshold, cbQosIPHCTcpCmprsOutPktOverflow=cbQosIPHCTcpCmprsOutPktOverflow, IPHCOption=IPHCOption)
mibBuilder.exportSymbols("CISCO-CLASS-BASED-QOS-MIB", cbQosQueueingCfgBandwidth64=cbQosQueueingCfgBandwidth64, cbQosTSStatsCurrentQSize=cbQosTSStatsCurrentQSize, cbQosSetCfgMplsExpTopMostValue=cbQosSetCfgMplsExpTopMostValue, cbQosServicePolicyExtGroup=cbQosServicePolicyExtGroup, cbQosIPHCCfgTable=cbQosIPHCCfgTable, cbQosIPHCRtpSentByte=cbQosIPHCRtpSentByte, cbQosMatchPrePolicyPkt=cbQosMatchPrePolicyPkt, cbQosSetCfgEntry=cbQosSetCfgEntry, cbQosPoliceCfgPercentPirValue=cbQosPoliceCfgPercentPirValue, cbQosCMCfgEntry=cbQosCMCfgEntry, cbQosTSStatsDelayedByteOverflow=cbQosTSStatsDelayedByteOverflow, cbQosQueueingCfgDynamicQNumber=cbQosQueueingCfgDynamicQNumber, cbQosCMFragmentPktOverflow=cbQosCMFragmentPktOverflow, cbQosPoliceCfg=cbQosPoliceCfg, cbQosEntityIndex=cbQosEntityIndex, cbQosServicePolicyEntry=cbQosServicePolicyEntry, cbQosCMInfo=cbQosCMInfo, cbQosC3plAccountDropByteOverflow=cbQosC3plAccountDropByteOverflow, cbQosObjectsEntry=cbQosObjectsEntry, cbQosCMPrePolicyByte64=cbQosCMPrePolicyByte64, cbQosPoliceExceededPkt=cbQosPoliceExceededPkt, cbQosMeasureIPSLACfgGroupName=cbQosMeasureIPSLACfgGroupName, cbQosPoliceExdColorExdPkt64=cbQosPoliceExdColorExdPkt64, cbQosPoliceConformedByte=cbQosPoliceConformedByte, cbQosIPHCTcpSentPkt=cbQosIPHCTcpSentPkt, ciscocbQosMIBComplianceRev9=ciscocbQosMIBComplianceRev9, cbQosIPHCStatsEntry=cbQosIPHCStatsEntry, cbQosCMNoBufDropPkt=cbQosCMNoBufDropPkt, cbQosPolicyMapCfg=cbQosPolicyMapCfg, cbQosQueueingClassCfgTable=cbQosQueueingClassCfgTable, cbQosMatchStmtInfo=cbQosMatchStmtInfo, cbQosSetStats=cbQosSetStats, cbQosIPHCCfgOption=cbQosIPHCCfgOption, cbQosPoliceColorStats=cbQosPoliceColorStats, cbQosPoliceCfgConditional=cbQosPoliceCfgConditional, cbQosPoliceVltColorVltBitRate=cbQosPoliceVltColorVltBitRate, cbQosREDTransmitPkt64=cbQosREDTransmitPkt64, cbQosPoliceExceededPktOverflow=cbQosPoliceExceededPktOverflow, cbQosMatchPrePolicyBitRate=cbQosMatchPrePolicyBitRate, cbQosTableMapValueCfgTo=cbQosTableMapValueCfgTo, cbQosQueueingDynamicQNumberGroup=cbQosQueueingDynamicQNumberGroup)
