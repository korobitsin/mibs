#
# PySNMP MIB module CISCO-VTP-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/cisco/CISCO-VTP-MIB
# Produced by pysmi-0.0.6 at Mon Dec  7 15:54:24 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( ciscoMgmt, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
( Cisco2KVlanList, ) = mibBuilder.importSymbols("CISCO-TC", "Cisco2KVlanList")
( ifIndex, InterfaceIndexOrZero, InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndexOrZero", "InterfaceIndex")
( OwnerString, ) = mibBuilder.importSymbols("RMON-MIB", "OwnerString")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
( TextualConvention, DateAndTime, TruthValue, TimeStamp, TestAndIncr, RowStatus, DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "TruthValue", "TimeStamp", "TestAndIncr", "RowStatus", "DisplayString")
ciscoVtpMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 46)).setRevisions(("2010-05-12 00:00", "2009-12-03 00:00", "2008-03-07 00:00", "2007-10-04 00:00", "2006-02-17 00:00", "2004-02-11 00:00", "2003-11-21 00:00", "2003-08-08 00:00", "2003-07-11 00:00", "2003-04-16 00:00", "2002-04-10 00:00", "2002-02-28 00:00", "2001-08-03 00:00", "2001-02-26 00:00", "2001-02-12 00:00", "2000-09-19 00:00", "2000-04-10 00:00", "2000-01-06 00:00", "1999-02-25 11:30", "1999-01-05 11:30", "1998-05-19 11:30", "1997-08-08 11:38", "1997-05-09 11:30", "1997-02-24 11:15", "1997-01-27 17:30", "1996-09-16 12:30", "1996-07-17 12:30", "1996-01-18 18:20",))
vtpMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1))
class VlanIndex(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,4095)

class ManagementDomainIndex(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(1,255)

class VlanType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6,)
    namedValues = NamedValues(("ethernet", 1), ("fddi", 2), ("tokenRing", 3), ("fddiNet", 4), ("trNet", 5), ("deprecated", 6),)

class VlanTypeExt(Bits, TextualConvention):
    namedValues = NamedValues(("vtpmanageable", 0), ("internal", 1), ("reserved", 2), ("rspan", 3), ("dynamicGvrp", 4),)

vtpStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1))
vtpVersion = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("none", 3), ("three", 4),))).setMaxAccess("readonly")
vtpMaxVlanStorage = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1,1023))).setMaxAccess("readonly")
vtpNotificationsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 3), TruthValue()).setMaxAccess("readwrite")
vtpVlanCreatedNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
vtpVlanDeletedNotifEnabled = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
vlanManagementDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2))
managementDomainTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1), )
managementDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"))
managementDomainIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 1), ManagementDomainIndex())
managementDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0,32))).setMaxAccess("readcreate")
managementDomainLocalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("client", 1), ("server", 2), ("transparent", 3), ("off", 4),))).setMaxAccess("readcreate")
managementDomainConfigRevNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
managementDomainLastUpdater = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
managementDomainLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
managementDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
managementDomainTftpServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 8), IpAddress()).setMaxAccess("readcreate")
managementDomainTftpPathname = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 9), DisplayString()).setMaxAccess("readcreate")
managementDomainPruningState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2),))).setMaxAccess("readcreate")
managementDomainVersionInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("version1", 1), ("version2", 2), ("none", 3), ("version3", 4),))).setMaxAccess("readcreate")
managementDomainPruningStateOper = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2),))).setMaxAccess("readonly")
vlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3))
vtpVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1), )
vtpVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"), (0, "CISCO-VTP-MIB", "vtpVlanIndex"))
vtpVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 1), VlanIndex())
vtpVlanState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("operational", 1), ("suspended", 2), ("mtuTooBigForDevice", 3), ("mtuTooBigForTrunk", 4),))).setMaxAccess("readonly")
vtpVlanType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 3), VlanType()).setMaxAccess("readonly")
vtpVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1,32))).setMaxAccess("readonly")
vtpVlanMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500,18190))).setMaxAccess("readonly")
vtpVlanDot10Said = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4,4)).setFixedLength(4)).setMaxAccess("readonly")
vtpVlanRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readonly")
vtpVlanBridgeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,15))).setMaxAccess("readonly")
vtpVlanStpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("ieee", 1), ("ibm", 2), ("hybrid", 3),))).setMaxAccess("readonly")
vtpVlanParentVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 10), VlanIndex()).setMaxAccess("readonly")
vtpVlanTranslationalVlan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 11), VlanIndex()).setMaxAccess("readonly")
vtpVlanTranslationalVlan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 12), VlanIndex()).setMaxAccess("readonly")
vtpVlanBridgeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("srt", 1), ("srb", 2),))).setMaxAccess("readonly")
vtpVlanAreHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,13))).setMaxAccess("readonly")
vtpVlanSteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,13))).setMaxAccess("readonly")
vtpVlanIsCRFBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 16), TruthValue()).setMaxAccess("readonly")
vtpVlanTypeExt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 17), VlanTypeExt()).setMaxAccess("readonly")
vtpVlanIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 1, 1, 18), InterfaceIndexOrZero()).setMaxAccess("readonly")
internalVlanInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 2))
vtpInternalVlanAllocPolicy = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 2, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("ascending", 1), ("descending", 2),))).setMaxAccess("readwrite")
vtpInternalVlanTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 2, 2), )
vtpInternalVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 2, 2, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"), (0, "CISCO-VTP-MIB", "vtpVlanIndex"))
vtpInternalVlanOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 3, 2, 2, 1, 1), SnmpAdminString()).setMaxAccess("readonly")
vlanEdit = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4))
vtpEditControlTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1), )
vtpEditControlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1), )
managementDomainEntry.registerAugmentions(("CISCO-VTP-MIB", "vtpEditControlEntry"))
vtpEditControlEntry.setIndexNames(*managementDomainEntry.getIndexNames())
vtpVlanEditOperation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("none", 1), ("copy", 2), ("apply", 3), ("release", 4), ("restartTimer", 5),))).setMaxAccess("readcreate")
vtpVlanApplyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,)).clone(namedValues=NamedValues(("inProgress", 1), ("succeeded", 2), ("configNumberError", 3), ("inconsistentEdit", 4), ("tooBig", 5), ("localNVStoreFail", 6), ("remoteNVStoreFail", 7), ("editBufferEmpty", 8), ("someOtherError", 9), ("notPrimaryServer", 10),))).setMaxAccess("readonly")
vtpVlanEditBufferOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 3), OwnerString()).setMaxAccess("readcreate")
vtpVlanEditConfigRevNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 4), Gauge32()).setMaxAccess("readcreate")
vtpVlanEditModifiedVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 1, 1, 5), VlanIndex()).setMaxAccess("readonly")
vtpVlanEditTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2), )
vtpVlanEditEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"), (0, "CISCO-VTP-MIB", "vtpVlanEditIndex"))
vtpVlanEditIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 1), VlanIndex())
vtpVlanEditState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("operational", 1), ("suspended", 2),)).clone('operational')).setMaxAccess("readcreate")
vtpVlanEditType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 3), VlanType().clone('ethernet')).setMaxAccess("readcreate")
vtpVlanEditName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1,32))).setMaxAccess("readcreate")
vtpVlanEditMtu = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1500,18190)).clone(1500)).setMaxAccess("readcreate")
vtpVlanEditDot10Said = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4,4)).setFixedLength(4)).setMaxAccess("readcreate")
vtpVlanEditRingNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readcreate")
vtpVlanEditBridgeNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,15))).setMaxAccess("readcreate")
vtpVlanEditStpType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("ieee", 1), ("ibm", 2), ("auto", 3),))).setMaxAccess("readcreate")
vtpVlanEditParentVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 10), VlanIndex()).setMaxAccess("readcreate")
vtpVlanEditRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 11), RowStatus()).setMaxAccess("readcreate")
vtpVlanEditTranslationalVlan1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 12), VlanIndex()).setMaxAccess("readcreate")
vtpVlanEditTranslationalVlan2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 13), VlanIndex()).setMaxAccess("readcreate")
vtpVlanEditBridgeType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("srt", 1), ("srb", 2),))).setMaxAccess("readcreate")
vtpVlanEditAreHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,13))).setMaxAccess("readcreate")
vtpVlanEditSteHopCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,13))).setMaxAccess("readcreate")
vtpVlanEditIsCRFBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 17), TruthValue()).setMaxAccess("readcreate")
vtpVlanEditTypeExt = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 18), VlanTypeExt()).setMaxAccess("readonly")
vtpVlanEditTypeExt2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 4, 2, 1, 19), VlanTypeExt()).setMaxAccess("readcreate")
vtpStats = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5))
vtpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1), )
vtpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1), )
managementDomainEntry.registerAugmentions(("CISCO-VTP-MIB", "vtpStatsEntry"))
vtpStatsEntry.setIndexNames(*managementDomainEntry.getIndexNames())
vtpInSummaryAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 1), Counter32()).setMaxAccess("readonly")
vtpInSubsetAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
vtpInAdvertRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
vtpOutSummaryAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
vtpOutSubsetAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
vtpOutAdvertRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
vtpConfigRevNumberErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
vtpConfigDigestErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
vlanTrunkPorts = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6))
vlanTrunkPortTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1), )
vlanTrunkPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "vlanTrunkPortIfIndex"))
vlanTrunkPortIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 1), InterfaceIndex())
vlanTrunkPortManagementDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 2), ManagementDomainIndex()).setMaxAccess("readcreate")
vlanTrunkPortEncapsulationType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("isl", 1), ("dot10", 2), ("lane", 3), ("dot1Q", 4), ("negotiate", 5),))).setMaxAccess("readcreate")
vlanTrunkPortVlansEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128,128)).setFixedLength(128)).setMaxAccess("readcreate")
vlanTrunkPortNativeVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 5), VlanIndex()).setMaxAccess("readcreate")
vlanTrunkPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
vlanTrunkPortInJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
vlanTrunkPortOutJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
vlanTrunkPortOldAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
vlanTrunkPortVlansPruningEligible = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128,128)).setFixedLength(128)).setMaxAccess("readcreate")
vlanTrunkPortVlansXmitJoined = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128,128)).setFixedLength(128)).setMaxAccess("readonly")
vlanTrunkPortVlansRcvJoined = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128,128)).setFixedLength(128)).setMaxAccess("readonly")
vlanTrunkPortDynamicState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 13), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("desirable", 3), ("auto", 4), ("onNoNegotiate", 5),))).setMaxAccess("readcreate")
vlanTrunkPortDynamicStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("trunking", 1), ("notTrunking", 2),))).setMaxAccess("readonly")
vlanTrunkPortVtpEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 15), TruthValue()).setMaxAccess("readcreate")
vlanTrunkPortEncapsulationOperType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 16), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("isl", 1), ("dot10", 2), ("lane", 3), ("dot1Q", 4), ("negotiating", 5), ("notApplicable", 6),))).setMaxAccess("readonly")
vlanTrunkPortVlansEnabled2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vlanTrunkPortVlansEnabled3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vlanTrunkPortVlansEnabled4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 19), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vtpVlansPruningEligible2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vtpVlansPruningEligible3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vtpVlansPruningEligible4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 22), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readcreate")
vlanTrunkPortVlansXmitJoined2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 23), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortVlansXmitJoined3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 24), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortVlansXmitJoined4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortVlansRcvJoined2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 26), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortVlansRcvJoined3k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 27), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortVlansRcvJoined4k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 28), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,128))).setMaxAccess("readonly")
vlanTrunkPortDot1qTunnel = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 29), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("trunk", 1), ("access", 2), ("disabled", 3),)).clone('disabled')).setMaxAccess("readcreate")
vlanTrunkPortVlansActiveFirst2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 30), Cisco2KVlanList()).setMaxAccess("readonly")
vlanTrunkPortVlansActiveSecond2k = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 1, 1, 31), Cisco2KVlanList()).setMaxAccess("readonly")
vlanTrunkPortSetSerialNo = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 2), TestAndIncr()).setMaxAccess("readwrite")
vlanTrunkPortsDot1qTag = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 6, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
vtpDiscover = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7))
vtpDiscoverTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 1), )
vtpDiscoverEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"))
vtpDiscoverAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("discover", 1), ("noOperation", 2), ("purgeResult", 3),))).setMaxAccess("readwrite")
vtpDiscoverStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("inProgress", 1), ("succeeded", 2), ("resourceUnavailable", 3), ("someOtherError", 4),))).setMaxAccess("readonly")
vtpLastDiscoverTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
vtpDiscoverResultTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2), )
vtpDiscoverResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"), (0, "CISCO-VTP-MIB", "vtpDiscoverResultIndex"))
vtpDiscoverResultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
vtpDiscoverResultDatabaseName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDiscoverResultConflicting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 3), TruthValue()).setMaxAccess("readonly")
vtpDiscoverResultDeviceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDiscoverResultPrimaryServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 5), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDiscoverResultRevNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
vtpDiscoverResultSystemName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 7, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDatabase = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8))
vtpDatabaseTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1), )
vtpDatabaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"), (0, "CISCO-VTP-MIB", "vtpDatabaseIndex"))
vtpDatabaseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 1), Unsigned32())
vtpDatabaseName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 2), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDatabaseLocalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("client", 1), ("server", 2), ("transparent", 3), ("off", 4),))).setMaxAccess("readwrite")
vtpDatabaseRevNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 4), Gauge32()).setMaxAccess("readonly")
vtpDatabasePrimaryServer = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
vtpDatabasePrimaryServerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
vtpDatabaseTakeOverPrimary = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
vtpDatabaseTakeOverPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 8, 1, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readwrite")
vtpAuthentication = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9))
vtpAuthenticationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9, 1), )
vtpAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9, 1, 1), ).setIndexNames((0, "CISCO-VTP-MIB", "managementDomainIndex"))
vtpAuthPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readwrite")
vtpAuthPasswordType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("plaintext", 1), ("hidden", 2),))).setMaxAccess("readwrite")
vtpAuthSecretKey = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 9, 1, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0,0),ValueSizeConstraint(16,16),))).setMaxAccess("readwrite")
vlanStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 10))
vlanStatsVlans = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 10, 1), Unsigned32()).setMaxAccess("readonly")
vlanStatsExtendedVlans = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 10, 2), Unsigned32()).setMaxAccess("readonly")
vlanStatsInternalVlans = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 10, 3), Unsigned32()).setMaxAccess("readonly")
vlanStatsFreeVlans = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 1, 10, 4), Unsigned32()).setMaxAccess("readonly")
vtpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 2))
vtpNotificationsPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0))
vtpNotificationsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 1))
vtpConfigRevNumberError = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 1)).setObjects(*(("CISCO-VTP-MIB", "managementDomainConfigRevNumber"),))
vtpConfigDigestError = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 2)).setObjects(*(("CISCO-VTP-MIB", "managementDomainConfigRevNumber"),))
vtpServerDisabled = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 3)).setObjects(*(("CISCO-VTP-MIB", "managementDomainConfigRevNumber"), ("CISCO-VTP-MIB", "vtpMaxVlanStorage"),))
vtpMtuTooBig = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 4)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortManagementDomain"), ("CISCO-VTP-MIB", "vtpVlanState"),))
vtpVersionOneDeviceDetected = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 6)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortManagementDomain"),))
vlanTrunkPortDynamicStatusChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 7)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortDynamicStatus"),))
vtpLocalModeChanged = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 8)).setObjects(*(("CISCO-VTP-MIB", "managementDomainLocalMode"),))
vtpVersionInUseChanged = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 9)).setObjects(*(("CISCO-VTP-MIB", "managementDomainVersionInUse"),))
vtpVlanCreated = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 10)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanName"),))
vtpVlanDeleted = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 11)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanName"),))
vtpVlanRingNumberConflict = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 12)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanRingNumber"), ("CISCO-VTP-MIB", "ifIndex"), ("CISCO-VTP-MIB", "vtpVlanPortLocalSegment"),))
vtpPruningStateOperChange = NotificationType((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 0, 13)).setObjects(*(("CISCO-VTP-MIB", "managementDomainPruningStateOper"),))
vtpVlanPortLocalSegment = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 46, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("accessiblefornotify")
vtpMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 3))
vtpMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1))
vtpMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2))
vtpMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 1)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"),))
vtpMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 2)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroup"),))
vtpMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 3)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroup"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup"),))
vtpMIBCompliance4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 4)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroup"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"),))
vtpMIBCompliance5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 5)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroup"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"),))
vtpMIBCompliance6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 6)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"),))
vtpMIBCompliance7 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 7)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"),))
vtpMIBCompliance8 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 8)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpDot1qTunnelGroup2"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"),))
vtpMIBCompliance9 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 9)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"),))
vtpMIBCompliance10 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 10)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"),))
vtpMIBCompliance11 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 11)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroupRev1"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"),))
vtpMIBCompliance12 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 12)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroupRev1"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"), ("CISCO-VTP-MIB", "vtpInternalVlanGrp"),))
vtpMIBCompliance13 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 13)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroupRev1"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"), ("CISCO-VTP-MIB", "vtpInternalVlanGrp"), ("CISCO-VTP-MIB", "vlanStatsGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup6"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup7"),))
vtpMIBCompliance14 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 14)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroupRev1"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup2"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup2"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup3"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup2"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup3"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup4"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"), ("CISCO-VTP-MIB", "vtpInternalVlanGrp"), ("CISCO-VTP-MIB", "vlanStatsGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup6"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup7"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup3"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup8"),))
vtpMIBCompliance15 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 1, 15)).setObjects(*(("CISCO-VTP-MIB", "vtpBasicGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroupRev1"), ("CISCO-VTP-MIB", "vtpStatsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup"), ("CISCO-VTP-MIB", "vtpVersion2BasicGroup"), ("CISCO-VTP-MIB", "vtpNotificationObjectsGroup"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup2"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup2"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup"), ("CISCO-VTP-MIB", "vtpTrunkPortGroup3"), ("CISCO-VTP-MIB", "vtp4kVlanGroupRev1"), ("CISCO-VTP-MIB", "vtpVlanIfIndexGroup"), ("CISCO-VTP-MIB", "vtpVlanInfoEditGroup2"), ("CISCO-VTP-MIB", "vtpVlanNotifEnabledGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup2"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup3"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup4"), ("CISCO-VTP-MIB", "vtpDiscoverGroup"), ("CISCO-VTP-MIB", "vtpDatabaseGroup"), ("CISCO-VTP-MIB", "vtpAuthGroup"), ("CISCO-VTP-MIB", "vtpInternalVlanGrp"), ("CISCO-VTP-MIB", "vlanStatsGroup"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup6"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup7"), ("CISCO-VTP-MIB", "vtpTrunkPruningGroup3"), ("CISCO-VTP-MIB", "vtpConfigNotificationsGroup8"), ("CISCO-VTP-MIB", "vlanTrunkPortActiveVlansGroup"),))
vtpBasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 1)).setObjects(*(("CISCO-VTP-MIB", "vtpVersion"), ("CISCO-VTP-MIB", "vtpMaxVlanStorage"), ("CISCO-VTP-MIB", "vtpNotificationsEnabled"), ("CISCO-VTP-MIB", "managementDomainName"), ("CISCO-VTP-MIB", "managementDomainLocalMode"), ("CISCO-VTP-MIB", "managementDomainConfigRevNumber"), ("CISCO-VTP-MIB", "managementDomainLastUpdater"), ("CISCO-VTP-MIB", "managementDomainLastChange"), ("CISCO-VTP-MIB", "managementDomainTftpServer"), ("CISCO-VTP-MIB", "managementDomainTftpPathname"), ("CISCO-VTP-MIB", "managementDomainRowStatus"),))
vtpVlanInfoGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 13)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanState"), ("CISCO-VTP-MIB", "vtpVlanType"), ("CISCO-VTP-MIB", "vtpVlanName"), ("CISCO-VTP-MIB", "vtpVlanMtu"), ("CISCO-VTP-MIB", "vtpVlanDot10Said"), ("CISCO-VTP-MIB", "vtpVlanRingNumber"), ("CISCO-VTP-MIB", "vtpVlanBridgeNumber"), ("CISCO-VTP-MIB", "vtpVlanStpType"), ("CISCO-VTP-MIB", "vtpVlanParentVlan"), ("CISCO-VTP-MIB", "vtpVlanTranslationalVlan1"), ("CISCO-VTP-MIB", "vtpVlanTranslationalVlan2"), ("CISCO-VTP-MIB", "vtpVlanBridgeType"), ("CISCO-VTP-MIB", "vtpVlanAreHopCount"), ("CISCO-VTP-MIB", "vtpVlanSteHopCount"), ("CISCO-VTP-MIB", "vtpVlanIsCRFBackup"),))
vtpVlanInfoEditGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 14)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanEditOperation"), ("CISCO-VTP-MIB", "vtpVlanApplyStatus"), ("CISCO-VTP-MIB", "vtpVlanEditBufferOwner"), ("CISCO-VTP-MIB", "vtpVlanEditConfigRevNumber"), ("CISCO-VTP-MIB", "vtpVlanEditState"), ("CISCO-VTP-MIB", "vtpVlanEditType"), ("CISCO-VTP-MIB", "vtpVlanEditName"), ("CISCO-VTP-MIB", "vtpVlanEditMtu"), ("CISCO-VTP-MIB", "vtpVlanEditDot10Said"), ("CISCO-VTP-MIB", "vtpVlanEditRingNumber"), ("CISCO-VTP-MIB", "vtpVlanEditBridgeNumber"), ("CISCO-VTP-MIB", "vtpVlanEditStpType"), ("CISCO-VTP-MIB", "vtpVlanEditParentVlan"), ("CISCO-VTP-MIB", "vtpVlanEditRowStatus"), ("CISCO-VTP-MIB", "vtpVlanEditTranslationalVlan1"), ("CISCO-VTP-MIB", "vtpVlanEditTranslationalVlan2"), ("CISCO-VTP-MIB", "vtpVlanEditBridgeType"), ("CISCO-VTP-MIB", "vtpVlanEditAreHopCount"), ("CISCO-VTP-MIB", "vtpVlanEditSteHopCount"), ("CISCO-VTP-MIB", "vtpVlanEditIsCRFBackup"),))
vtpStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 4)).setObjects(*(("CISCO-VTP-MIB", "vtpInSummaryAdverts"), ("CISCO-VTP-MIB", "vtpInSubsetAdverts"), ("CISCO-VTP-MIB", "vtpInAdvertRequests"), ("CISCO-VTP-MIB", "vtpOutSummaryAdverts"), ("CISCO-VTP-MIB", "vtpOutSubsetAdverts"), ("CISCO-VTP-MIB", "vtpOutAdvertRequests"), ("CISCO-VTP-MIB", "vtpConfigRevNumberErrors"), ("CISCO-VTP-MIB", "vtpConfigDigestErrors"),))
vtpTrunkPortGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 5)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortManagementDomain"), ("CISCO-VTP-MIB", "vlanTrunkPortEncapsulationType"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled"), ("CISCO-VTP-MIB", "vlanTrunkPortNativeVlan"), ("CISCO-VTP-MIB", "vlanTrunkPortRowStatus"), ("CISCO-VTP-MIB", "vlanTrunkPortSetSerialNo"),))
vtpTrunkPortGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 11)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortDynamicState"), ("CISCO-VTP-MIB", "vlanTrunkPortDynamicStatus"), ("CISCO-VTP-MIB", "vlanTrunkPortVtpEnabled"),))
vtpTrunkPortGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 15)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortEncapsulationOperType"),))
vtpTrunkPruningGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 7)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortInJoins"), ("CISCO-VTP-MIB", "vlanTrunkPortOutJoins"), ("CISCO-VTP-MIB", "vlanTrunkPortOldAdverts"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansPruningEligible"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined"),))
vtpTrunkPruningGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 10)).setObjects(*(("CISCO-VTP-MIB", "managementDomainPruningState"),))
vtpVersion2BasicGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 12)).setObjects(*(("CISCO-VTP-MIB", "managementDomainVersionInUse"),))
vtpConfigNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 6)).setObjects(*(("CISCO-VTP-MIB", "vtpConfigDigestError"), ("CISCO-VTP-MIB", "vtpConfigRevNumberError"), ("CISCO-VTP-MIB", "vtpServerDisabled"), ("CISCO-VTP-MIB", "vtpMtuTooBig"), ("CISCO-VTP-MIB", "vtpVersionOneDeviceDetected"), ("CISCO-VTP-MIB", "vlanTrunkPortDynamicStatusChange"),))
vtp4kVlanGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 16)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanTypeExt"), ("CISCO-VTP-MIB", "vtpVlanEditTypeExt"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled4k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible2k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible3k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible4k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined4k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined4k"),))
vtpDot1qTunnelGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 17)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortsDot1qTag"), ("CISCO-VTP-MIB", "vlanTrunkPortDot1qTunnel"),))
vtpVlanIfIndexGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 18)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanIfIndex"),))
vtpVlanInfoEditGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 19)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanEditModifiedVlan"),))
vtp4kVlanGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 20)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanTypeExt"), ("CISCO-VTP-MIB", "vtpVlanEditTypeExt2"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansEnabled4k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible2k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible3k"), ("CISCO-VTP-MIB", "vtpVlansPruningEligible4k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansXmitJoined4k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined3k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansRcvJoined4k"),))
vtpNotificationObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 21)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanPortLocalSegment"),))
vtpDot1qTunnelGroup2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 22)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortsDot1qTag"),))
vtpConfigNotificationsGroup2 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 23)).setObjects(*(("CISCO-VTP-MIB", "vtpLocalModeChanged"), ("CISCO-VTP-MIB", "vtpVersionInUseChanged"),))
vtpVlanNotifEnabledGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 24)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanCreatedNotifEnabled"), ("CISCO-VTP-MIB", "vtpVlanDeletedNotifEnabled"),))
vtpConfigNotificationsGroup3 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 25)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanCreated"), ("CISCO-VTP-MIB", "vtpVlanDeleted"),))
vtpConfigNotificationsGroup4 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 26)).setObjects(*(("CISCO-VTP-MIB", "vtpVlanRingNumberConflict"),))
vtpDiscoverGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 27)).setObjects(*(("CISCO-VTP-MIB", "vtpDiscoverAction"), ("CISCO-VTP-MIB", "vtpDiscoverStatus"), ("CISCO-VTP-MIB", "vtpLastDiscoverTime"), ("CISCO-VTP-MIB", "vtpDiscoverResultIndex"), ("CISCO-VTP-MIB", "vtpDiscoverResultDatabaseName"), ("CISCO-VTP-MIB", "vtpDiscoverResultConflicting"), ("CISCO-VTP-MIB", "vtpDiscoverResultDeviceId"), ("CISCO-VTP-MIB", "vtpDiscoverResultPrimaryServer"), ("CISCO-VTP-MIB", "vtpDiscoverResultRevNumber"), ("CISCO-VTP-MIB", "vtpDiscoverResultSystemName"),))
vtpDatabaseGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 28)).setObjects(*(("CISCO-VTP-MIB", "vtpDatabaseName"), ("CISCO-VTP-MIB", "vtpDatabaseLocalMode"), ("CISCO-VTP-MIB", "vtpDatabaseRevNumber"), ("CISCO-VTP-MIB", "vtpDatabasePrimaryServer"), ("CISCO-VTP-MIB", "vtpDatabasePrimaryServerId"), ("CISCO-VTP-MIB", "vtpDatabaseTakeOverPrimary"), ("CISCO-VTP-MIB", "vtpDatabaseTakeOverPassword"),))
vtpAuthGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 29)).setObjects(*(("CISCO-VTP-MIB", "vtpAuthPassword"), ("CISCO-VTP-MIB", "vtpAuthPasswordType"), ("CISCO-VTP-MIB", "vtpAuthSecretKey"),))
vtpConfigNotificationsGroupRev1 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 30)).setObjects(*(("CISCO-VTP-MIB", "vtpConfigDigestError"), ("CISCO-VTP-MIB", "vtpConfigRevNumberError"), ("CISCO-VTP-MIB", "vtpVersionOneDeviceDetected"), ("CISCO-VTP-MIB", "vlanTrunkPortDynamicStatusChange"),))
vtpConfigNotificationsGroup5 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 31)).setObjects(*(("CISCO-VTP-MIB", "vtpServerDisabled"), ("CISCO-VTP-MIB", "vtpMtuTooBig"),))
vtpInternalVlanGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 32)).setObjects(*(("CISCO-VTP-MIB", "vtpInternalVlanAllocPolicy"), ("CISCO-VTP-MIB", "vtpInternalVlanOwner"),))
vlanStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 33)).setObjects(*(("CISCO-VTP-MIB", "vlanStatsVlans"), ("CISCO-VTP-MIB", "vlanStatsExtendedVlans"), ("CISCO-VTP-MIB", "vlanStatsInternalVlans"), ("CISCO-VTP-MIB", "vlanStatsFreeVlans"),))
vtpConfigNotificationsGroup6 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 34)).setObjects(*(("CISCO-VTP-MIB", "vtpServerDisabled"),))
vtpConfigNotificationsGroup7 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 35)).setObjects(*(("CISCO-VTP-MIB", "vtpMtuTooBig"),))
vtpTrunkPruningGroup3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 36)).setObjects(*(("CISCO-VTP-MIB", "managementDomainPruningStateOper"),))
vtpConfigNotificationsGroup8 = NotificationGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 37)).setObjects(*(("CISCO-VTP-MIB", "vtpPruningStateOperChange"),))
vlanTrunkPortActiveVlansGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 46, 3, 2, 38)).setObjects(*(("CISCO-VTP-MIB", "vlanTrunkPortVlansActiveFirst2k"), ("CISCO-VTP-MIB", "vlanTrunkPortVlansActiveSecond2k"),))
mibBuilder.exportSymbols("CISCO-VTP-MIB", managementDomainRowStatus=managementDomainRowStatus, vtpVlanParentVlan=vtpVlanParentVlan, vtpConfigDigestErrors=vtpConfigDigestErrors, vtpVlanBridgeType=vtpVlanBridgeType, vtpVlanIfIndexGroup=vtpVlanIfIndexGroup, vtpDiscoverResultDeviceId=vtpDiscoverResultDeviceId, vtpStatsGroup=vtpStatsGroup, vtpMtuTooBig=vtpMtuTooBig, vlanTrunkPortVlansRcvJoined4k=vlanTrunkPortVlansRcvJoined4k, vtpVlanDot10Said=vtpVlanDot10Said, vtpMIBCompliance14=vtpMIBCompliance14, vtpNotificationsPrefix=vtpNotificationsPrefix, vlanStatistics=vlanStatistics, vlanStatsInternalVlans=vlanStatsInternalVlans, vtpInternalVlanOwner=vtpInternalVlanOwner, vtpVlanEditBridgeType=vtpVlanEditBridgeType, vtpConfigNotificationsGroup5=vtpConfigNotificationsGroup5, vlanInfo=vlanInfo, vtpConfigNotificationsGroup3=vtpConfigNotificationsGroup3, vlanTrunkPortVlansRcvJoined3k=vlanTrunkPortVlansRcvJoined3k, vtpVlanEditSteHopCount=vtpVlanEditSteHopCount, vtpMIBCompliance6=vtpMIBCompliance6, managementDomainEntry=managementDomainEntry, vtpEditControlTable=vtpEditControlTable, vtpAuthSecretKey=vtpAuthSecretKey, vtp4kVlanGroup=vtp4kVlanGroup, VlanIndex=VlanIndex, vtpVlanSteHopCount=vtpVlanSteHopCount, vlanTrunkPortVlansXmitJoined2k=vlanTrunkPortVlansXmitJoined2k, vtpDatabaseLocalMode=vtpDatabaseLocalMode, vtpDatabaseTakeOverPrimary=vtpDatabaseTakeOverPrimary, vtpVlanEditOperation=vtpVlanEditOperation, vlanTrunkPortEntry=vlanTrunkPortEntry, vtpServerDisabled=vtpServerDisabled, internalVlanInfo=internalVlanInfo, vtpMIBCompliance9=vtpMIBCompliance9, vlanTrunkPortVlansXmitJoined3k=vlanTrunkPortVlansXmitJoined3k, vlanTrunkPortEncapsulationType=vlanTrunkPortEncapsulationType, vtpInternalVlanAllocPolicy=vtpInternalVlanAllocPolicy, vtpVlanTypeExt=vtpVlanTypeExt, vtpStats=vtpStats, vtpVlanEditTranslationalVlan2=vtpVlanEditTranslationalVlan2, vtpVlanCreatedNotifEnabled=vtpVlanCreatedNotifEnabled, vtpMIBCompliance13=vtpMIBCompliance13, managementDomainTftpPathname=managementDomainTftpPathname, vlanTrunkPortOldAdverts=vlanTrunkPortOldAdverts, vtpVlanEditIsCRFBackup=vtpVlanEditIsCRFBackup, vtpVlanIndex=vtpVlanIndex, vtpVlanBridgeNumber=vtpVlanBridgeNumber, vlanTrunkPortVtpEnabled=vlanTrunkPortVtpEnabled, vtpVlanTranslationalVlan2=vtpVlanTranslationalVlan2, vtpInternalVlanEntry=vtpInternalVlanEntry, vtpMIBCompliance7=vtpMIBCompliance7, vlanTrunkPortDynamicStatus=vlanTrunkPortDynamicStatus, vlanTrunkPortRowStatus=vlanTrunkPortRowStatus, vtpStatsEntry=vtpStatsEntry, vtpVlanEditType=vtpVlanEditType, vtpVlanEditParentVlan=vtpVlanEditParentVlan, vlanTrunkPortOutJoins=vlanTrunkPortOutJoins, vtpVlanDeleted=vtpVlanDeleted, vtpDatabaseEntry=vtpDatabaseEntry, vtpDiscoverEntry=vtpDiscoverEntry, vlanManagementDomains=vlanManagementDomains, vtpBasicGroup=vtpBasicGroup, vtpMIBCompliance2=vtpMIBCompliance2, managementDomainTable=managementDomainTable, vtpDatabaseGroup=vtpDatabaseGroup, vtpLocalModeChanged=vtpLocalModeChanged, vtpTrunkPortGroup3=vtpTrunkPortGroup3, vtpNotificationsEnabled=vtpNotificationsEnabled, vtpDatabaseIndex=vtpDatabaseIndex, vtpVlanEditModifiedVlan=vtpVlanEditModifiedVlan, vlanTrunkPortVlansEnabled=vlanTrunkPortVlansEnabled, vtpDiscoverTable=vtpDiscoverTable, vtpVlanName=vtpVlanName, vtpVlanEditTranslationalVlan1=vtpVlanEditTranslationalVlan1, vtpAuthentication=vtpAuthentication, vlanTrunkPortVlansEnabled4k=vlanTrunkPortVlansEnabled4k, vlanTrunkPortNativeVlan=vlanTrunkPortNativeVlan, vtpVlanEditRingNumber=vtpVlanEditRingNumber, vtpDiscoverGroup=vtpDiscoverGroup, vtpMIBObjects=vtpMIBObjects, vtpAuthEntry=vtpAuthEntry, managementDomainPruningState=managementDomainPruningState, vtpMIBCompliance8=vtpMIBCompliance8, vtpVlansPruningEligible2k=vtpVlansPruningEligible2k, vtpMIBCompliance15=vtpMIBCompliance15, vtpEditControlEntry=vtpEditControlEntry, vtpConfigNotificationsGroupRev1=vtpConfigNotificationsGroupRev1, vlanStatsVlans=vlanStatsVlans, vtpMIBCompliance=vtpMIBCompliance, ciscoVtpMIB=ciscoVtpMIB, vtpMIBCompliance10=vtpMIBCompliance10, vtpVlanEditTable=vtpVlanEditTable, vtpConfigDigestError=vtpConfigDigestError, vtpMIBCompliance4=vtpMIBCompliance4, vlanTrunkPortDynamicState=vlanTrunkPortDynamicState, vtpConfigNotificationsGroup4=vtpConfigNotificationsGroup4, vtpVlanEntry=vtpVlanEntry, vtpVersion=vtpVersion, vtpMIBCompliances=vtpMIBCompliances, vtpVlansPruningEligible4k=vtpVlansPruningEligible4k, vtpVlanEditName=vtpVlanEditName, vlanTrunkPortInJoins=vlanTrunkPortInJoins, vlanTrunkPortVlansRcvJoined2k=vlanTrunkPortVlansRcvJoined2k, vlanTrunkPortDynamicStatusChange=vlanTrunkPortDynamicStatusChange, vtpDiscoverResultSystemName=vtpDiscoverResultSystemName, PYSNMP_MODULE_ID=ciscoVtpMIB, vtpConfigNotificationsGroup8=vtpConfigNotificationsGroup8, vtpMIBCompliance3=vtpMIBCompliance3, vtpAuthPasswordType=vtpAuthPasswordType, managementDomainLocalMode=managementDomainLocalMode, vtpPruningStateOperChange=vtpPruningStateOperChange, managementDomainVersionInUse=managementDomainVersionInUse, vtpDatabaseTakeOverPassword=vtpDatabaseTakeOverPassword, vtpVlanMtu=vtpVlanMtu, vtpVlanTranslationalVlan1=vtpVlanTranslationalVlan1, vtpVlanEditIndex=vtpVlanEditIndex, vtpVlanEditBufferOwner=vtpVlanEditBufferOwner, vlanTrunkPortTable=vlanTrunkPortTable, vtpVlanEditEntry=vtpVlanEditEntry, vtpVlanApplyStatus=vtpVlanApplyStatus, vtpMIBCompliance5=vtpMIBCompliance5, vtpVersionInUseChanged=vtpVersionInUseChanged, vtpVlanEditTypeExt2=vtpVlanEditTypeExt2, vtpMIBGroups=vtpMIBGroups, vtpVlanStpType=vtpVlanStpType, vtpDot1qTunnelGroup=vtpDot1qTunnelGroup, managementDomainIndex=managementDomainIndex, vtpVlanType=vtpVlanType, vtpVlanInfoEditGroup=vtpVlanInfoEditGroup, vtpMIBCompliance11=vtpMIBCompliance11, vtpVlanIfIndex=vtpVlanIfIndex, vlanTrunkPorts=vlanTrunkPorts, vtpDot1qTunnelGroup2=vtpDot1qTunnelGroup2, vtpMIBCompliance12=vtpMIBCompliance12, vlanTrunkPortVlansRcvJoined=vlanTrunkPortVlansRcvJoined, vtpVlanInfoGroup=vtpVlanInfoGroup, vlanTrunkPortVlansActiveSecond2k=vlanTrunkPortVlansActiveSecond2k, vtpVlanEditDot10Said=vtpVlanEditDot10Said, vtpTrunkPruningGroup2=vtpTrunkPruningGroup2, vtpInternalVlanGrp=vtpInternalVlanGrp, vtpDiscoverResultIndex=vtpDiscoverResultIndex, vtpAuthenticationTable=vtpAuthenticationTable, vlanTrunkPortVlansXmitJoined=vlanTrunkPortVlansXmitJoined, vtpDiscoverAction=vtpDiscoverAction, vtpStatus=vtpStatus, vlanTrunkPortVlansEnabled2k=vlanTrunkPortVlansEnabled2k, vtpVlanEditAreHopCount=vtpVlanEditAreHopCount, vtpDatabasePrimaryServer=vtpDatabasePrimaryServer, managementDomainConfigRevNumber=managementDomainConfigRevNumber, vtpVlanCreated=vtpVlanCreated, vlanTrunkPortActiveVlansGroup=vlanTrunkPortActiveVlansGroup, vtpNotificationsObjects=vtpNotificationsObjects, vtpVlanEditRowStatus=vtpVlanEditRowStatus, vlanStatsFreeVlans=vlanStatsFreeVlans, vlanTrunkPortVlansEnabled3k=vlanTrunkPortVlansEnabled3k, vtpDatabaseTable=vtpDatabaseTable, vlanTrunkPortVlansPruningEligible=vlanTrunkPortVlansPruningEligible, vtpVlanNotifEnabledGroup=vtpVlanNotifEnabledGroup, vtpLastDiscoverTime=vtpLastDiscoverTime, vtpConfigRevNumberErrors=vtpConfigRevNumberErrors, VlanTypeExt=VlanTypeExt, vtp4kVlanGroupRev1=vtp4kVlanGroupRev1, managementDomainPruningStateOper=managementDomainPruningStateOper, vtpVersionOneDeviceDetected=vtpVersionOneDeviceDetected, vtpDiscover=vtpDiscover, vtpOutSubsetAdverts=vtpOutSubsetAdverts, vtpDiscoverResultRevNumber=vtpDiscoverResultRevNumber, vtpVlanRingNumberConflict=vtpVlanRingNumberConflict, vtpVlanInfoEditGroup2=vtpVlanInfoEditGroup2, vtpConfigNotificationsGroup=vtpConfigNotificationsGroup, vtpTrunkPruningGroup3=vtpTrunkPruningGroup3, vtpVlanDeletedNotifEnabled=vtpVlanDeletedNotifEnabled, vtpVlanEditState=vtpVlanEditState, vtpVlanAreHopCount=vtpVlanAreHopCount, vtpDiscoverResultConflicting=vtpDiscoverResultConflicting, vlanStatsExtendedVlans=vlanStatsExtendedVlans, vtpInAdvertRequests=vtpInAdvertRequests, vlanTrunkPortVlansActiveFirst2k=vlanTrunkPortVlansActiveFirst2k, vtpVlanEditTypeExt=vtpVlanEditTypeExt, vlanEdit=vlanEdit, vtpVersion2BasicGroup=vtpVersion2BasicGroup, vtpAuthGroup=vtpAuthGroup, vtpAuthPassword=vtpAuthPassword, vtpNotificationObjectsGroup=vtpNotificationObjectsGroup, vtpDiscoverResultDatabaseName=vtpDiscoverResultDatabaseName, vtpInternalVlanTable=vtpInternalVlanTable, vtpVlanIsCRFBackup=vtpVlanIsCRFBackup, vtpConfigRevNumberError=vtpConfigRevNumberError, VlanType=VlanType, vtpInSubsetAdverts=vtpInSubsetAdverts, vtpVlanEditMtu=vtpVlanEditMtu, vtpNotifications=vtpNotifications, vlanStatsGroup=vlanStatsGroup, managementDomainLastUpdater=managementDomainLastUpdater, vtpDiscoverStatus=vtpDiscoverStatus, vtpVlanRingNumber=vtpVlanRingNumber, vtpDiscoverResultPrimaryServer=vtpDiscoverResultPrimaryServer, vlanTrunkPortDot1qTunnel=vlanTrunkPortDot1qTunnel, vtpConfigNotificationsGroup7=vtpConfigNotificationsGroup7, vtpTrunkPortGroup2=vtpTrunkPortGroup2, vtpVlansPruningEligible3k=vtpVlansPruningEligible3k, vtpVlanTable=vtpVlanTable, vtpStatsTable=vtpStatsTable, vtpMaxVlanStorage=vtpMaxVlanStorage, vtpInSummaryAdverts=vtpInSummaryAdverts, vlanTrunkPortEncapsulationOperType=vlanTrunkPortEncapsulationOperType, vtpConfigNotificationsGroup2=vtpConfigNotificationsGroup2, vtpVlanEditStpType=vtpVlanEditStpType, vlanTrunkPortsDot1qTag=vlanTrunkPortsDot1qTag, managementDomainLastChange=managementDomainLastChange, vtpOutAdvertRequests=vtpOutAdvertRequests, vtpDatabaseName=vtpDatabaseName, vtpDatabasePrimaryServerId=vtpDatabasePrimaryServerId, vtpMIBConformance=vtpMIBConformance, vtpOutSummaryAdverts=vtpOutSummaryAdverts, vtpTrunkPortGroup=vtpTrunkPortGroup, managementDomainTftpServer=managementDomainTftpServer, vtpDiscoverResultEntry=vtpDiscoverResultEntry, ManagementDomainIndex=ManagementDomainIndex, vtpDatabaseRevNumber=vtpDatabaseRevNumber, vtpVlanEditConfigRevNumber=vtpVlanEditConfigRevNumber, vtpDiscoverResultTable=vtpDiscoverResultTable, vlanTrunkPortIfIndex=vlanTrunkPortIfIndex, managementDomainName=managementDomainName, vtpDatabase=vtpDatabase, vlanTrunkPortVlansXmitJoined4k=vlanTrunkPortVlansXmitJoined4k, vtpVlanPortLocalSegment=vtpVlanPortLocalSegment, vlanTrunkPortManagementDomain=vlanTrunkPortManagementDomain, vlanTrunkPortSetSerialNo=vlanTrunkPortSetSerialNo, vtpVlanEditBridgeNumber=vtpVlanEditBridgeNumber, vtpTrunkPruningGroup=vtpTrunkPruningGroup, vtpVlanState=vtpVlanState, vtpConfigNotificationsGroup6=vtpConfigNotificationsGroup6)
