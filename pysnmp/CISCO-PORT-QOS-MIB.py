#
# PySNMP MIB module CISCO-PORT-QOS-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/cisco/CISCO-PORT-QOS-MIB
# Produced by pysmi-0.0.6 at Mon Dec  7 15:54:24 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( QosLayer2Cos, Dscp, ) = mibBuilder.importSymbols("CISCO-QOS-PIB-MIB", "QosLayer2Cos", "Dscp")
( ciscoMgmt, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
( vtpVlanIndex, ) = mibBuilder.importSymbols("CISCO-VTP-MIB", "vtpVlanIndex")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, IpAddress, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, Bits, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "IpAddress", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "Bits", "Counter32")
( TruthValue, TimeStamp, DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TimeStamp", "DisplayString", "TextualConvention")
ciscoPortQosMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 189)).setRevisions(("2008-09-10 00:00", "2008-03-05 00:00", "2008-01-09 00:00", "2006-02-17 00:00", "2005-02-23 00:00", "2004-05-20 00:00", "2004-01-30 00:00", "2002-03-20 00:00", "2001-05-15 00:00", "2000-12-20 00:00",))
ciscoPortQosMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1))
cportQosRLConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1))
cportQosTSConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2))
cportQosStatistics = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3))
cportQosRLConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1), )
cportQosRLConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosRLConfigDirection"))
cportQosRLConfigDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("input", 1), ("output", 2),)))
cportQosRLConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
cportQosRLConfigRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32000,2147483647))).setUnits('bits per second').setMaxAccess("readwrite")
cportQosRLConfigBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,64000))).setUnits('bytes').setMaxAccess("readwrite")
cportQosTSConfigTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1), )
cportQosTSConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
cportQosTSConfigEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
cportQosTSConfigRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32000,2147483647))).setUnits('bits per second').setMaxAccess("readwrite")
cportQosTSConfigBurstSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,512000))).setUnits('bits').setMaxAccess("readwrite")
cportQosIndexType = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("none", 1), ("dscp", 2), ("ipPrecedence", 3), ("cos", 4),))).setMaxAccess("readonly")
cportQosStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2), )
cportQosStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosDirection"), (0, "CISCO-PORT-QOS-MIB", "cportQosIndex"))
cportQosDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("ingress", 1), ("egress", 2),)))
cportQosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 2), Unsigned32())
cportQosPrePolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosPrePolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosPostPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosPostPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 7), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 8), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosClassifiedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosClassifiedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosNoChangePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosNoChangeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 12), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosInProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosOutOfProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosInProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 15), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosOutOfProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 16), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosViolateProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosViolateProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 2, 1, 18), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosIndexTypeNew = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("none", 1), ("dscp", 2), ("ipPrecedence", 3), ("cos", 4), ("police", 5),))).setMaxAccess("readwrite")
cportQosInVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4), )
cportQosInVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-VTP-MIB", "vtpVlanIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosIndex"))
cportQosVlanInProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 1), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosVlanOutOfProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 2), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosVlanInProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 3), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosVlanOutOfProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosVlanViolateProfPolicyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
cportQosVlanViolateProfPolicyOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 4, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
cportQosEgressQueueStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5), )
cportQosEgressQueueStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosQueueId"), (0, "CISCO-PORT-QOS-MIB", "cportQosQueueThreshold"))
cportQosQueueId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,2147483647)))
cportQosQueueThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,2147483647)))
cportQosQueueEnqueuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 3), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosQueueDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 5, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosClassEgressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6), )
cportQosClassEgressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassId"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassThreshold"))
cportQosClassId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,2147483647)))
cportQosClassThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1,2147483647))).setUnits('Number of buffers')
cportQosClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
cportQosClassEnqueuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosClassDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosClassDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 6, 1, 6), TimeStamp()).setMaxAccess("readonly")
cportQosClassIngressStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7), )
cportQosClassIngressStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassIdLevel1"), (0, "CISCO-PORT-QOS-MIB", "cportQosClassIdLevel2"))
cportQosClassIdLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,2147483647)))
cportQosClassIdLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0,2147483647)))
cportQosClassNameLevel1 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 3), SnmpAdminString()).setMaxAccess("readonly")
cportQosClassNameLevel2 = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 4), SnmpAdminString()).setMaxAccess("readonly")
cportQosPoliceConformPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 5), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosPoliceConformOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 6), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosPoliceExceedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 7), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosPoliceExceedOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 8), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosPoliceViolatePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 9), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosPoliceViolateOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 10), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosPoliceConformRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 11), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cportQosPoliceExceedRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 12), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cportQosPoliceViolateRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 13), Gauge32()).setUnits('bits per second').setMaxAccess("readonly")
cportQosPoliceDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 7, 1, 14), TimeStamp()).setMaxAccess("readonly")
cportQosDscpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8), )
cportQosDscpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosDscpValue"))
cportQosDscpValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 1), Dscp())
cportQosDscpIngressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosDscpIngressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosDscpEgressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosDscpEgressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 8, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosCosStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9), )
cportQosCosStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-PORT-QOS-MIB", "cportQosCosValue"))
cportQosCosValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 1), QosLayer2Cos())
cportQosCosIngressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 2), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosCosIngressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 3), Counter64()).setUnits('Octets').setMaxAccess("readonly")
cportQosCosEgressPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 4), Counter64()).setUnits('Packets').setMaxAccess("readonly")
cportQosCosEgressOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 189, 1, 3, 9, 1, 5), Counter64()).setUnits('Octets').setMaxAccess("readonly")
ciscoPortQosMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 2))
ciscoPortQosMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3))
ciscoPortQosMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1))
ciscoPortQosMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2))
ciscoPortQosMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 1)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroup"),))
ciscoPortQosMIBComplianceRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 2)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev1"),))
ciscoPortQosMIBComplianceRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 3)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"),))
ciscoPortQosMIBComplianceRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 4)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"),))
ciscoPortQosMIBComplianceRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 5)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"),))
ciscoPortQosMIBComplianceRev5 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 6)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp3"),))
ciscoPortQosMIBComplianceRev6 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 1, 7)).setObjects(*(("CISCO-PORT-QOS-MIB", "ciscoPortQosMIBGroup"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp1"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp2"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp3"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp4"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp5"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp6"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp7"), ("CISCO-PORT-QOS-MIB", "ciscoPortQosStatsMIBGroupRev2Supp8"),))
ciscoPortQosMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 1)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosRLConfigEnable"), ("CISCO-PORT-QOS-MIB", "cportQosRLConfigRate"), ("CISCO-PORT-QOS-MIB", "cportQosRLConfigBurstSize"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigEnable"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigRate"), ("CISCO-PORT-QOS-MIB", "cportQosTSConfigBurstSize"),))
ciscoPortQosStatsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 2)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosIndexType"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"),))
ciscoPortQosStatsMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 3)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosIndexType"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangePkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangeOctets"),))
ciscoPortQosStatsMIBGroupRev2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 4)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosIndexTypeNew"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPrePolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPostPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDropOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosClassifiedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangePkts"), ("CISCO-PORT-QOS-MIB", "cportQosNoChangeOctets"), ("CISCO-PORT-QOS-MIB", "cportQosInProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosOutOfProfPolicyPkts"),))
ciscoPortQosStatsMIBGroupRev2Supp1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 5)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosVlanInProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosVlanOutOfProfPolicyPkts"),))
ciscoPortQosStatsMIBGroupRev2Supp2 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 6)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosInProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosOutOfProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosViolateProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosViolateProfPolicyOctets"),))
ciscoPortQosStatsMIBGroupRev2Supp3 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 7)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosVlanInProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosVlanOutOfProfPolicyOctets"), ("CISCO-PORT-QOS-MIB", "cportQosVlanViolateProfPolicyPkts"), ("CISCO-PORT-QOS-MIB", "cportQosVlanViolateProfPolicyOctets"),))
ciscoPortQosStatsMIBGroupRev2Supp4 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 8)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosQueueEnqueuePkts"), ("CISCO-PORT-QOS-MIB", "cportQosQueueDropPkts"),))
ciscoPortQosStatsMIBGroupRev2Supp5 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 9)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosClassName"), ("CISCO-PORT-QOS-MIB", "cportQosClassEnqueuePkts"), ("CISCO-PORT-QOS-MIB", "cportQosClassDropPkts"), ("CISCO-PORT-QOS-MIB", "cportQosClassDiscontinuityTime"),))
ciscoPortQosStatsMIBGroupRev2Supp6 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 10)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosClassNameLevel1"), ("CISCO-PORT-QOS-MIB", "cportQosClassNameLevel2"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedPkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolatePkts"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolateOctets"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceConformRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceExceedRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceViolateRate"), ("CISCO-PORT-QOS-MIB", "cportQosPoliceDiscontinuityTime"),))
ciscoPortQosStatsMIBGroupRev2Supp7 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 11)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosDscpIngressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDscpIngressOctets"), ("CISCO-PORT-QOS-MIB", "cportQosDscpEgressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosDscpEgressOctets"),))
ciscoPortQosStatsMIBGroupRev2Supp8 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 189, 3, 2, 12)).setObjects(*(("CISCO-PORT-QOS-MIB", "cportQosCosIngressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosCosIngressOctets"), ("CISCO-PORT-QOS-MIB", "cportQosCosEgressPkts"), ("CISCO-PORT-QOS-MIB", "cportQosCosEgressOctets"),))
mibBuilder.exportSymbols("CISCO-PORT-QOS-MIB", ciscoPortQosMIBComplianceRev3=ciscoPortQosMIBComplianceRev3, ciscoPortQosMIBGroup=ciscoPortQosMIBGroup, cportQosViolateProfPolicyPkts=cportQosViolateProfPolicyPkts, ciscoPortQosMIBObjects=ciscoPortQosMIBObjects, ciscoPortQosStatsMIBGroupRev2=ciscoPortQosStatsMIBGroupRev2, cportQosEgressQueueStatsEntry=cportQosEgressQueueStatsEntry, cportQosTSConfig=cportQosTSConfig, cportQosStatsEntry=cportQosStatsEntry, cportQosDscpEgressOctets=cportQosDscpEgressOctets, cportQosClassifiedOctets=cportQosClassifiedOctets, cportQosVlanOutOfProfPolicyPkts=cportQosVlanOutOfProfPolicyPkts, cportQosPoliceExceedOctets=cportQosPoliceExceedOctets, cportQosEgressQueueStatsTable=cportQosEgressQueueStatsTable, ciscoPortQosMIBComplianceRev5=ciscoPortQosMIBComplianceRev5, cportQosClassIngressStatsEntry=cportQosClassIngressStatsEntry, cportQosNoChangeOctets=cportQosNoChangeOctets, cportQosClassDropPkts=cportQosClassDropPkts, cportQosQueueDropPkts=cportQosQueueDropPkts, ciscoPortQosStatsMIBGroupRev2Supp6=ciscoPortQosStatsMIBGroupRev2Supp6, cportQosTSConfigEntry=cportQosTSConfigEntry, cportQosPostPolicyOctets=cportQosPostPolicyOctets, cportQosPoliceViolateOctets=cportQosPoliceViolateOctets, ciscoPortQosMIBConformance=ciscoPortQosMIBConformance, cportQosCosStatsEntry=cportQosCosStatsEntry, cportQosClassIdLevel2=cportQosClassIdLevel2, cportQosRLConfigTable=cportQosRLConfigTable, cportQosClassIngressStatsTable=cportQosClassIngressStatsTable, ciscoPortQosMIBComplianceRev1=ciscoPortQosMIBComplianceRev1, cportQosCosEgressPkts=cportQosCosEgressPkts, PYSNMP_MODULE_ID=ciscoPortQosMIB, ciscoPortQosMIBComplianceRev4=ciscoPortQosMIBComplianceRev4, cportQosVlanViolateProfPolicyOctets=cportQosVlanViolateProfPolicyOctets, ciscoPortQosStatsMIBGroupRev1=ciscoPortQosStatsMIBGroupRev1, cportQosQueueId=cportQosQueueId, ciscoPortQosStatsMIBGroupRev2Supp8=ciscoPortQosStatsMIBGroupRev2Supp8, cportQosViolateProfPolicyOctets=cportQosViolateProfPolicyOctets, cportQosCosIngressPkts=cportQosCosIngressPkts, ciscoPortQosMIBCompliance=ciscoPortQosMIBCompliance, ciscoPortQosMIBComplianceRev6=ciscoPortQosMIBComplianceRev6, cportQosVlanViolateProfPolicyPkts=cportQosVlanViolateProfPolicyPkts, cportQosRLConfig=cportQosRLConfig, cportQosClassEgressStatsTable=cportQosClassEgressStatsTable, cportQosPoliceConformPkts=cportQosPoliceConformPkts, cportQosRLConfigBurstSize=cportQosRLConfigBurstSize, cportQosTSConfigRate=cportQosTSConfigRate, cportQosPostPolicyPkts=cportQosPostPolicyPkts, cportQosDscpIngressPkts=cportQosDscpIngressPkts, cportQosPrePolicyPkts=cportQosPrePolicyPkts, cportQosRLConfigRate=cportQosRLConfigRate, cportQosClassDiscontinuityTime=cportQosClassDiscontinuityTime, cportQosDscpEgressPkts=cportQosDscpEgressPkts, cportQosDirection=cportQosDirection, cportQosCosEgressOctets=cportQosCosEgressOctets, ciscoPortQosMIBCompliances=ciscoPortQosMIBCompliances, cportQosClassNameLevel1=cportQosClassNameLevel1, cportQosDscpStatsTable=cportQosDscpStatsTable, cportQosDscpStatsEntry=cportQosDscpStatsEntry, cportQosPoliceViolateRate=cportQosPoliceViolateRate, cportQosVlanInProfPolicyOctets=cportQosVlanInProfPolicyOctets, cportQosTSConfigBurstSize=cportQosTSConfigBurstSize, cportQosPoliceConformRate=cportQosPoliceConformRate, cportQosTSConfigTable=cportQosTSConfigTable, cportQosPrePolicyOctets=cportQosPrePolicyOctets, cportQosClassEnqueuePkts=cportQosClassEnqueuePkts, ciscoPortQosStatsMIBGroupRev2Supp4=ciscoPortQosStatsMIBGroupRev2Supp4, cportQosIndex=cportQosIndex, cportQosCosIngressOctets=cportQosCosIngressOctets, cportQosPoliceViolatePkts=cportQosPoliceViolatePkts, cportQosQueueThreshold=cportQosQueueThreshold, ciscoPortQosMIBComplianceRev2=ciscoPortQosMIBComplianceRev2, ciscoPortQosStatsMIBGroupRev2Supp3=ciscoPortQosStatsMIBGroupRev2Supp3, cportQosClassifiedPkts=cportQosClassifiedPkts, cportQosVlanInProfPolicyPkts=cportQosVlanInProfPolicyPkts, cportQosPoliceExceedPkts=cportQosPoliceExceedPkts, cportQosCosStatsTable=cportQosCosStatsTable, cportQosRLConfigEnable=cportQosRLConfigEnable, cportQosInProfPolicyOctets=cportQosInProfPolicyOctets, ciscoPortQosStatsMIBGroupRev2Supp2=ciscoPortQosStatsMIBGroupRev2Supp2, ciscoPortQosMIBNotifications=ciscoPortQosMIBNotifications, cportQosClassThreshold=cportQosClassThreshold, cportQosVlanOutOfProfPolicyOctets=cportQosVlanOutOfProfPolicyOctets, cportQosStatistics=cportQosStatistics, cportQosClassIdLevel1=cportQosClassIdLevel1, ciscoPortQosStatsMIBGroupRev2Supp5=ciscoPortQosStatsMIBGroupRev2Supp5, cportQosPoliceExceedRate=cportQosPoliceExceedRate, cportQosCosValue=cportQosCosValue, cportQosStatsTable=cportQosStatsTable, ciscoPortQosMIBGroups=ciscoPortQosMIBGroups, cportQosIndexTypeNew=cportQosIndexTypeNew, ciscoPortQosStatsMIBGroupRev2Supp1=ciscoPortQosStatsMIBGroupRev2Supp1, cportQosInProfPolicyPkts=cportQosInProfPolicyPkts, cportQosDscpIngressOctets=cportQosDscpIngressOctets, cportQosPoliceDiscontinuityTime=cportQosPoliceDiscontinuityTime, cportQosInVlanStatsEntry=cportQosInVlanStatsEntry, cportQosInVlanStatsTable=cportQosInVlanStatsTable, cportQosRLConfigDirection=cportQosRLConfigDirection, ciscoPortQosStatsMIBGroupRev2Supp7=ciscoPortQosStatsMIBGroupRev2Supp7, cportQosClassEgressStatsEntry=cportQosClassEgressStatsEntry, cportQosClassNameLevel2=cportQosClassNameLevel2, cportQosDropOctets=cportQosDropOctets, cportQosDscpValue=cportQosDscpValue, cportQosNoChangePkts=cportQosNoChangePkts, cportQosIndexType=cportQosIndexType, cportQosTSConfigEnable=cportQosTSConfigEnable, cportQosClassName=cportQosClassName, cportQosOutOfProfPolicyOctets=cportQosOutOfProfPolicyOctets, cportQosOutOfProfPolicyPkts=cportQosOutOfProfPolicyPkts, cportQosPoliceConformOctets=cportQosPoliceConformOctets, cportQosDropPkts=cportQosDropPkts, cportQosRLConfigEntry=cportQosRLConfigEntry, ciscoPortQosMIB=ciscoPortQosMIB, ciscoPortQosStatsMIBGroup=ciscoPortQosStatsMIBGroup, cportQosQueueEnqueuePkts=cportQosQueueEnqueuePkts, cportQosClassId=cportQosClassId)
