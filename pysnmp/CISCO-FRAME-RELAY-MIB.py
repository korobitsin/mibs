#
# PySNMP MIB module CISCO-FRAME-RELAY-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/cisco/CISCO-FRAME-RELAY-MIB
# Produced by pysmi-0.0.6 at Mon Dec  7 15:53:32 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( ciscoMgmt, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoMgmt")
( ifIndex, InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex", "InterfaceIndex")
( frCircuitDlci, frCircuitEntry, frCircuitIfIndex, frDlcmiEntry, ) = mibBuilder.importSymbols("RFC1315-MIB", "frCircuitDlci", "frCircuitEntry", "frCircuitIfIndex", "frDlcmiEntry")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
( DisplayString, TruthValue, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TextualConvention")
ciscoFrameRelayMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 9, 49)).setRevisions(("2000-10-13 00:00", "2000-05-22 00:00", "2000-05-16 00:00", "2000-04-26 00:00", "1999-08-21 00:00", "1996-08-15 00:00",))
ciscoFrMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1))
cfrLmiObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1))
cfrCircuitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2))
cfrMapObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3))
cfrSvcObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4))
cfrElmiObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5))
cfrFragObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6))
cfrConnectionObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7))
class DlciNumber(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,1023)

class CfrMapProtocols(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 6, 7, 10, 11, 12, 13, 16, 18, 22, 25, 37, 38, 39, 40, 47, 48, 49, 53, 63, 74, 83, 999,)
    namedValues = NamedValues(("arp", 1), ("serialArp", 6), ("ip", 7), ("xns", 10), ("novell", 11), ("apollo", 12), ("vines", 13), ("appletalk", 16), ("ieeeSpanning", 18), ("decnet", 22), ("clns", 25), ("rsrb", 37), ("bridge", 38), ("stun", 39), ("frArp", 40), ("uncompressedTcp", 47), ("compressedTcp", 48), ("llc2", 49), ("frSwitch", 53), ("dlsw", 63), ("nhrp", 74), ("compressedRtp", 83), ("wildcard", 999),)

cfrLmiTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1), )
cfrLmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1), )
frDlcmiEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrLmiEntry"))
cfrLmiEntry.setIndexNames(*frDlcmiEntry.getIndexNames())
cfrLmiLinkstatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("up", 1), ("down", 2),))).setMaxAccess("readonly")
cfrLmiLinkType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("dte", 1), ("dce", 2), ("nni", 3),))).setMaxAccess("readonly")
cfrLmiEnquiryIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 3), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiEnquiryOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 4), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiStatusIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 5), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiStatusOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 6), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiUpdateStatusIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 7), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiUpdateStatusOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 8), Counter32()).setUnits('messages').setMaxAccess("readonly")
cfrLmiStatusTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 9), Counter32()).setUnits('times').setMaxAccess("readonly")
cfrLmiStatusEnqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 10), Counter32()).setUnits('times').setMaxAccess("readonly")
cfrLmiN392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,10))).setMaxAccess("readonly")
cfrLmiN393Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,10))).setMaxAccess("readonly")
cfrLmiT392Dce = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,30))).setUnits('seconds').setMaxAccess("readonly")
cfrCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1), )
cfrCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1), )
frCircuitEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrCircuitEntry"))
cfrCircuitEntry.setIndexNames(*frCircuitEntry.getIndexNames())
cfrCircuitDEins = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrCircuitDEouts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 2), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrCircuitDropPktsOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrCircuitType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("pvc", 1), ("svc", 2),))).setMaxAccess("readonly")
cfrExtCircuitTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2), )
cfrExtCircuitEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1), )
frCircuitEntry.registerAugmentions(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitEntry"))
cfrExtCircuitEntry.setIndexNames(*frCircuitEntry.getIndexNames())
cfrExtCircuitIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
cfrExtCircuitIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("mainInterface", 1), ("pointToPoint", 2), ("multipoint", 3),))).setMaxAccess("readonly")
cfrExtCircuitSubifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
cfrExtCircuitMapStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,2047))).setMaxAccess("readonly")
cfrExtCircuitCreateType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("dynamic", 1), ("static", 2),))).setMaxAccess("readonly")
cfrExtCircuitMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
cfrExtCircuitRoutedDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 7), DlciNumber()).setMaxAccess("readonly")
cfrExtCircuitRoutedIf = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
cfrExtCircuitUncompressIns = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitUncompressOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 10), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitFECNOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 11), Counter32()).setMaxAccess("readonly")
cfrExtCircuitBECNOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 12), Counter32()).setMaxAccess("readonly")
cfrExtCircuitMinThruputOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setUnits('bits per second').setMaxAccess("readonly")
cfrExtCircuitMinThruputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setUnits('bits per second').setMaxAccess("readonly")
cfrExtCircuitBcastPktOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 15), Counter32()).setMaxAccess("readonly")
cfrExtCircuitBcastByteOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 16), Counter32()).setMaxAccess("readonly")
cfrExtCircuitBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,16777215))).setUnits('bits per second').setMaxAccess("readonly")
cfrExtCircuitShapeByteLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(125,2147483647))).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitShapeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10,125))).setUnits('milliseconds').setMaxAccess("readonly")
cfrExtCircuitShapeByteIncrement = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(125,2147483647))).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitShapePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 21), Counter32()).setMaxAccess("readonly")
cfrExtCircuitShapeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 22), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitShapePktsDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 23), Counter32()).setMaxAccess("readonly")
cfrExtCircuitShapeBytesDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 24), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrExtCircuitShapeActive = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 25), TruthValue()).setMaxAccess("readonly")
cfrExtCircuitShapeAdapting = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 26), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("none", 1), ("becn", 2), ("foreSight", 3),))).setMaxAccess("readonly")
cfrExtCircuitTxDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,45000000))).setMaxAccess("readonly")
cfrExtCircuitTxPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,45000000))).setMaxAccess("readonly")
cfrExtCircuitRcvDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,45000000))).setMaxAccess("readonly")
cfrExtCircuitRcvPktRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 2, 2, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,45000000))).setMaxAccess("readonly")
cfrMapTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1), )
cfrMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"), (0, "CISCO-FRAME-RELAY-MIB", "cfrMapIndex"))
cfrMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,999))).setMaxAccess("readonly")
cfrMapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 2), CfrMapProtocols()).setMaxAccess("readonly")
cfrMapAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
cfrMapType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2), ("svc", 3),))).setMaxAccess("readonly")
cfrMapEncaps = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("ietf", 1), ("cisco", 2),))).setMaxAccess("readonly")
cfrMapBroadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
cfrMapPayloadCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 7), TruthValue()).setMaxAccess("readonly")
cfrMapTcpHdrCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("inapplicable", 1), ("passive", 2), ("active", 3),))).setMaxAccess("readonly")
cfrMapRtpHdrCompress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("inapplicable", 1), ("passive", 2), ("active", 3),))).setMaxAccess("readonly")
cfrMapPayloadCompressType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("inapplicable", 1), ("cisco", 2), ("frf9Software", 3), ("frf9Hardware", 4),))).setMaxAccess("readonly")
cfrSvcTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1), )
cfrSvcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
cfrSvcAddrLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
cfrSvcAddrRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0,64))).setMaxAccess("readonly")
cfrSvcThroughputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setUnits('bits per second').setMaxAccess("readonly")
cfrSvcMinThruputOut = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setUnits('bits per second').setMaxAccess("readonly")
cfrSvcMinThruputIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setUnits('bits per second').setMaxAccess("readonly")
cfrSvcCommitBurstIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,1544000))).setMaxAccess("readonly")
cfrSvcExcessBurstIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(9600,2440000))).setMaxAccess("readonly")
cfrSvcIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 4, 1, 1, 8), Integer32()).setUnits('seconds').setMaxAccess("readonly")
cfrElmiIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 1), IpAddress()).setMaxAccess("readonly")
cfrElmiTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2), )
cfrElmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
cfrElmiLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2),))).setMaxAccess("readonly")
cfrElmiArStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2),))).setMaxAccess("readonly")
cfrElmiRemoteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 2, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2),))).setMaxAccess("readonly")
cfrElmiNeighborTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3), )
cfrElmiNeighborEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
cfrElmiNeighborArStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 1), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("notsupported", 1), ("enabled", 2), ("disabled", 3),))).setMaxAccess("readonly")
cfrElmiNeighborIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
cfrElmiNeighborIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
cfrElmiNeighborVendorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
cfrElmiNeighborPlatformName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
cfrElmiNeighborDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 5, 3, 1, 6), DisplayString()).setMaxAccess("readonly")
cfrFragTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1), )
cfrFragEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
cfrFragSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16,1600))).setUnits('octets').setMaxAccess("readonly")
cfrFragType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
cfrFragInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 5), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragNotInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragNotOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragNotInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 9), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragNotOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 10), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragAssembledInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 11), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragAssembledInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 12), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragPreOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragPreOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 14), Counter32()).setUnits('octets').setMaxAccess("readonly")
cfrFragDroppedReAssembledInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 15), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragDroppedFragmentedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragTimeoutsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,1000))).setMaxAccess("readonly")
cfrFragOutOfSeqFragPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragUnexpectedBBitSetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 19), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragSeqMissedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrFragInterleavedOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 6, 1, 1, 21), Counter32()).setUnits('packets').setMaxAccess("readonly")
cfrConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1), )
cfrConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1), ).setIndexNames((0, "RFC1315-MIB", "frCircuitIfIndex"), (0, "RFC1315-MIB", "frCircuitDlci"))
cfrConnName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
cfrConnID = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,2000))).setMaxAccess("readonly")
cfrConnState = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
cfrConnSegment1Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
cfrConnSegment1VCGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
cfrConnSegment1Dlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 6), DlciNumber()).setMaxAccess("readonly")
cfrConnSegment2Name = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
cfrConnSegment2Vpi = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readonly")
cfrConnSegment2Vci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,4095))).setMaxAccess("readonly")
cfrConnServiceTranslation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("serviceTranslationEnabled", 1), ("serviceTranslationNotEnabled", 2),))).setMaxAccess("readonly")
cfrConnFrSscsDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 11), DlciNumber()).setMaxAccess("readonly")
cfrConnEfciBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("mapFecn", 1), ("notMapFecn", 2),))).setMaxAccess("readonly")
cfrConnDeBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 13), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("noMapClp", 1), ("mapClp", 2), ("setDe0", 3), ("setDe1", 4),))).setMaxAccess("readonly")
cfrConnClpBit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 9, 49, 1, 7, 1, 1, 14), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6,)).clone(namedValues=NamedValues(("setClpTo0AndCopyDeToFrsscsDe", 1), ("setClpTo1AndCopyDeToFrsscsDe", 2), ("copyDeToFrsscsDeAndClp", 3), ("copyDeToClp", 4), ("setClp1", 5), ("setClp0", 6),))).setMaxAccess("readonly")
ciscoFrMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3))
ciscoFrMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1))
ciscoFrMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2))
ciscoFrMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 1)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "ciscoFrMIBGroup"),))
ciscoFrMIBCompliancesRev1 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 2)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "ciscoFrMIBGroupRev1"),))
ciscoFrMIBCompliancesRev2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 3)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"),))
ciscoFrMIBCompliancesRev3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 4)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrElmiMIBGroup"),))
ciscoFrMIBCompliancesRev4 = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 1, 5)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "ciscoFrLmiMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrCircuitMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoExtCircuitMIBGroup1"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrTsMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrMapMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrSvcMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrElmiMIBGroup1"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrFragMIBGroup"), ("CISCO-FRAME-RELAY-MIB", "ciscoFrConnMIBGroup"),))
ciscoFrMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 1)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"),))
ciscoFrMIBGroupRev1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 2)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapRtpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompressType"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"),))
ciscoFrLmiMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 3)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkstatus"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiLinkType"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiEnquiryOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusIns"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiUpdateStatusOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiStatusEnqTimeouts"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN392Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiN393Dce"), ("CISCO-FRAME-RELAY-MIB", "cfrLmiT392Dce"),))
ciscoFrCircuitMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 4)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEins"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDEouts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitDropPktsOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrCircuitType"),))
ciscoExtCircuitMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 5)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitFECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastPktOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastByteOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBandwidth"),))
ciscoExtCircuitMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 13)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfName"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitIfType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitSubifIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMapStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitCreateType"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMulticast"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRoutedIf"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressIns"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitUncompressOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitFECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBECNOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputOut"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitMinThruputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastPktOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBcastByteOuts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitBandwidth"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitTxDataRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitTxPktRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRcvDataRate"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitRcvPktRate"),))
ciscoFrTsMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 6)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeByteLimit"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeInterval"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeByteIncrement"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapePkts"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeBytes"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapePktsDelay"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeBytesDelay"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeActive"), ("CISCO-FRAME-RELAY-MIB", "cfrExtCircuitShapeAdapting"),))
ciscoFrMapMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 7)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrMapIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrMapProtocol"), ("CISCO-FRAME-RELAY-MIB", "cfrMapAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapType"), ("CISCO-FRAME-RELAY-MIB", "cfrMapEncaps"), ("CISCO-FRAME-RELAY-MIB", "cfrMapBroadcast"), ("CISCO-FRAME-RELAY-MIB", "cfrMapTcpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapRtpHdrCompress"), ("CISCO-FRAME-RELAY-MIB", "cfrMapPayloadCompressType"),))
ciscoFrSvcMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 8)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrLocal"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcAddrRemote"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcThroughputIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcCommitBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcExcessBurstIn"), ("CISCO-FRAME-RELAY-MIB", "cfrSvcIdleTime"),))
ciscoFrElmiMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 9)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrElmiIpAddr"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiRemoteStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIpAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIfIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborVendorName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborPlatformName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborDeviceName"),))
ciscoFrElmiMIBGroup1 = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 10)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrElmiIpAddr"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiRemoteStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborArStatus"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIpAddress"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborIfIndex"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborVendorName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborPlatformName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiNeighborDeviceName"), ("CISCO-FRAME-RELAY-MIB", "cfrElmiLinkStatus"),))
ciscoFrFragMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 11)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrFragSize"), ("CISCO-FRAME-RELAY-MIB", "cfrFragType"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragNotOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragAssembledInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragAssembledInOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragPreOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragPreOutOctets"), ("CISCO-FRAME-RELAY-MIB", "cfrFragDroppedReAssembledInPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragDroppedFragmentedOutPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragTimeoutsIn"), ("CISCO-FRAME-RELAY-MIB", "cfrFragOutOfSeqFragPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragUnexpectedBBitSetPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragSeqMissedPkts"), ("CISCO-FRAME-RELAY-MIB", "cfrFragInterleavedOutPkts"),))
ciscoFrConnMIBGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 9, 49, 3, 2, 12)).setObjects(*(("CISCO-FRAME-RELAY-MIB", "cfrConnName"), ("CISCO-FRAME-RELAY-MIB", "cfrConnID"), ("CISCO-FRAME-RELAY-MIB", "cfrConnState"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1Name"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1VCGroup"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment1Dlci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Name"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Vpi"), ("CISCO-FRAME-RELAY-MIB", "cfrConnSegment2Vci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnServiceTranslation"), ("CISCO-FRAME-RELAY-MIB", "cfrConnFrSscsDlci"), ("CISCO-FRAME-RELAY-MIB", "cfrConnEfciBit"), ("CISCO-FRAME-RELAY-MIB", "cfrConnDeBit"), ("CISCO-FRAME-RELAY-MIB", "cfrConnClpBit"),))
mibBuilder.exportSymbols("CISCO-FRAME-RELAY-MIB", cfrFragNotOutOctets=cfrFragNotOutOctets, ciscoFrLmiMIBGroup=ciscoFrLmiMIBGroup, cfrLmiEnquiryOuts=cfrLmiEnquiryOuts, cfrMapEncaps=cfrMapEncaps, cfrLmiUpdateStatusIns=cfrLmiUpdateStatusIns, cfrConnFrSscsDlci=cfrConnFrSscsDlci, cfrLmiUpdateStatusOuts=cfrLmiUpdateStatusOuts, cfrMapTcpHdrCompress=cfrMapTcpHdrCompress, cfrConnEfciBit=cfrConnEfciBit, cfrLmiTable=cfrLmiTable, cfrExtCircuitTxDataRate=cfrExtCircuitTxDataRate, cfrExtCircuitTxPktRate=cfrExtCircuitTxPktRate, cfrExtCircuitRoutedIf=cfrExtCircuitRoutedIf, cfrSvcAddrLocal=cfrSvcAddrLocal, cfrExtCircuitCreateType=cfrExtCircuitCreateType, cfrExtCircuitBcastPktOuts=cfrExtCircuitBcastPktOuts, cfrCircuitDEouts=cfrCircuitDEouts, ciscoFrameRelayMIB=ciscoFrameRelayMIB, ciscoExtCircuitMIBGroup=ciscoExtCircuitMIBGroup, cfrLmiStatusIns=cfrLmiStatusIns, cfrMapObjs=cfrMapObjs, cfrFragOutOfSeqFragPkts=cfrFragOutOfSeqFragPkts, cfrExtCircuitIfName=cfrExtCircuitIfName, cfrExtCircuitMinThruputOut=cfrExtCircuitMinThruputOut, cfrExtCircuitBandwidth=cfrExtCircuitBandwidth, cfrSvcMinThruputIn=cfrSvcMinThruputIn, cfrElmiRemoteStatus=cfrElmiRemoteStatus, cfrFragAssembledInPkts=cfrFragAssembledInPkts, cfrConnSegment2Vci=cfrConnSegment2Vci, cfrExtCircuitMinThruputIn=cfrExtCircuitMinThruputIn, cfrFragPreOutOctets=cfrFragPreOutOctets, cfrSvcObjs=cfrSvcObjs, ciscoFrMIBCompliancesRev3=ciscoFrMIBCompliancesRev3, ciscoExtCircuitMIBGroup1=ciscoExtCircuitMIBGroup1, cfrLmiN393Dce=cfrLmiN393Dce, cfrExtCircuitEntry=cfrExtCircuitEntry, cfrFragOutPkts=cfrFragOutPkts, cfrSvcTable=cfrSvcTable, cfrFragPreOutPkts=cfrFragPreOutPkts, cfrExtCircuitMulticast=cfrExtCircuitMulticast, cfrMapPayloadCompressType=cfrMapPayloadCompressType, cfrExtCircuitTable=cfrExtCircuitTable, cfrExtCircuitRcvPktRate=cfrExtCircuitRcvPktRate, cfrExtCircuitFECNOuts=cfrExtCircuitFECNOuts, cfrElmiNeighborIpAddress=cfrElmiNeighborIpAddress, cfrExtCircuitShapeByteIncrement=cfrExtCircuitShapeByteIncrement, ciscoFrMIBGroups=ciscoFrMIBGroups, cfrExtCircuitUncompressIns=cfrExtCircuitUncompressIns, cfrSvcExcessBurstIn=cfrSvcExcessBurstIn, DlciNumber=DlciNumber, cfrMapPayloadCompress=cfrMapPayloadCompress, cfrSvcThroughputIn=cfrSvcThroughputIn, cfrMapProtocol=cfrMapProtocol, cfrConnState=cfrConnState, cfrExtCircuitRoutedDlci=cfrExtCircuitRoutedDlci, ciscoFrTsMIBGroup=ciscoFrTsMIBGroup, cfrElmiNeighborIfIndex=cfrElmiNeighborIfIndex, cfrElmiNeighborVendorName=cfrElmiNeighborVendorName, cfrFragSeqMissedPkts=cfrFragSeqMissedPkts, cfrConnectionEntry=cfrConnectionEntry, cfrLmiT392Dce=cfrLmiT392Dce, cfrLmiObjs=cfrLmiObjs, cfrConnClpBit=cfrConnClpBit, cfrExtCircuitMapStatus=cfrExtCircuitMapStatus, cfrExtCircuitRcvDataRate=cfrExtCircuitRcvDataRate, cfrSvcCommitBurstIn=cfrSvcCommitBurstIn, cfrElmiArStatus=cfrElmiArStatus, ciscoFrCircuitMIBGroup=ciscoFrCircuitMIBGroup, cfrConnDeBit=cfrConnDeBit, cfrCircuitDEins=cfrCircuitDEins, cfrConnSegment1Dlci=cfrConnSegment1Dlci, ciscoFrMIBCompliancesRev2=ciscoFrMIBCompliancesRev2, cfrExtCircuitShapeBytesDelay=cfrExtCircuitShapeBytesDelay, cfrLmiLinkType=cfrLmiLinkType, cfrFragAssembledInOctets=cfrFragAssembledInOctets, cfrFragEntry=cfrFragEntry, cfrElmiNeighborTable=cfrElmiNeighborTable, ciscoFrFragMIBGroup=ciscoFrFragMIBGroup, cfrConnectionObjs=cfrConnectionObjs, cfrMapType=cfrMapType, cfrLmiStatusEnqTimeouts=cfrLmiStatusEnqTimeouts, cfrExtCircuitSubifIndex=cfrExtCircuitSubifIndex, ciscoFrMIBConformance=ciscoFrMIBConformance, cfrElmiTable=cfrElmiTable, cfrSvcIdleTime=cfrSvcIdleTime, cfrFragSize=cfrFragSize, cfrExtCircuitShapeByteLimit=cfrExtCircuitShapeByteLimit, cfrCircuitDropPktsOuts=cfrCircuitDropPktsOuts, cfrMapEntry=cfrMapEntry, cfrLmiN392Dce=cfrLmiN392Dce, cfrLmiLinkstatus=cfrLmiLinkstatus, cfrSvcAddrRemote=cfrSvcAddrRemote, cfrLmiStatusTimeouts=cfrLmiStatusTimeouts, cfrFragObjs=cfrFragObjs, cfrConnSegment1VCGroup=cfrConnSegment1VCGroup, cfrLmiStatusOuts=cfrLmiStatusOuts, cfrElmiNeighborPlatformName=cfrElmiNeighborPlatformName, ciscoFrConnMIBGroup=ciscoFrConnMIBGroup, ciscoFrSvcMIBGroup=ciscoFrSvcMIBGroup, cfrSvcEntry=cfrSvcEntry, PYSNMP_MODULE_ID=ciscoFrameRelayMIB, ciscoFrMIBGroupRev1=ciscoFrMIBGroupRev1, cfrExtCircuitShapeActive=cfrExtCircuitShapeActive, ciscoFrMIBCompliancesRev4=ciscoFrMIBCompliancesRev4, cfrMapBroadcast=cfrMapBroadcast, cfrElmiObjs=cfrElmiObjs, cfrFragType=cfrFragType, cfrConnName=cfrConnName, cfrExtCircuitShapeBytes=cfrExtCircuitShapeBytes, cfrLmiEnquiryIns=cfrLmiEnquiryIns, ciscoFrMIBGroup=ciscoFrMIBGroup, cfrElmiNeighborArStatus=cfrElmiNeighborArStatus, cfrExtCircuitIfType=cfrExtCircuitIfType, cfrElmiLinkStatus=cfrElmiLinkStatus, cfrConnSegment2Name=cfrConnSegment2Name, cfrConnID=cfrConnID, cfrExtCircuitShapeInterval=cfrExtCircuitShapeInterval, cfrExtCircuitShapePkts=cfrExtCircuitShapePkts, cfrFragInPkts=cfrFragInPkts, cfrCircuitEntry=cfrCircuitEntry, cfrConnectionTable=cfrConnectionTable, ciscoFrElmiMIBGroup=ciscoFrElmiMIBGroup, cfrFragNotInPkts=cfrFragNotInPkts, cfrCircuitType=cfrCircuitType, cfrSvcMinThruputOut=cfrSvcMinThruputOut, cfrElmiIpAddr=cfrElmiIpAddr, cfrMapTable=cfrMapTable, cfrElmiEntry=cfrElmiEntry, cfrCircuitTable=cfrCircuitTable, cfrFragInterleavedOutPkts=cfrFragInterleavedOutPkts, cfrFragNotOutPkts=cfrFragNotOutPkts, cfrLmiEntry=cfrLmiEntry, cfrExtCircuitBECNOuts=cfrExtCircuitBECNOuts, CfrMapProtocols=CfrMapProtocols, cfrFragNotInOctets=cfrFragNotInOctets, ciscoFrMIBCompliances=ciscoFrMIBCompliances, cfrCircuitObjs=cfrCircuitObjs, cfrConnSegment1Name=cfrConnSegment1Name, cfrFragDroppedReAssembledInPkts=cfrFragDroppedReAssembledInPkts, cfrElmiNeighborEntry=cfrElmiNeighborEntry, cfrMapIndex=cfrMapIndex, cfrExtCircuitShapeAdapting=cfrExtCircuitShapeAdapting, ciscoFrMIBCompliance=ciscoFrMIBCompliance, cfrExtCircuitBcastByteOuts=cfrExtCircuitBcastByteOuts, cfrFragTimeoutsIn=cfrFragTimeoutsIn, cfrMapRtpHdrCompress=cfrMapRtpHdrCompress, cfrElmiNeighborDeviceName=cfrElmiNeighborDeviceName, ciscoFrMIBObjects=ciscoFrMIBObjects, cfrFragTable=cfrFragTable, cfrFragDroppedFragmentedOutPkts=cfrFragDroppedFragmentedOutPkts, cfrFragOutOctets=cfrFragOutOctets, cfrFragInOctets=cfrFragInOctets, cfrConnServiceTranslation=cfrConnServiceTranslation, cfrExtCircuitUncompressOuts=cfrExtCircuitUncompressOuts, cfrExtCircuitShapePktsDelay=cfrExtCircuitShapePktsDelay, cfrMapAddress=cfrMapAddress, ciscoFrMapMIBGroup=ciscoFrMapMIBGroup, ciscoFrElmiMIBGroup1=ciscoFrElmiMIBGroup1, ciscoFrMIBCompliancesRev1=ciscoFrMIBCompliancesRev1, cfrConnSegment2Vpi=cfrConnSegment2Vpi, cfrFragUnexpectedBBitSetPkts=cfrFragUnexpectedBBitSetPkts)
