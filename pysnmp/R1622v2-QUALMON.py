#
# PySNMP MIB module R1622v2-QUALMON (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/oneaccess/R1622v2-QUALMON
# Produced by pysmi-0.0.6 at Thu Dec 10 23:45:29 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( Ipv6AddressPrefix, Ipv6Address, ) = mibBuilder.importSymbols("IPV6-TC", "Ipv6AddressPrefix", "Ipv6Address")
( NotificationGroup, ModuleCompliance, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
( DisplayString, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
( LocalIndex, tlsTrapDescription, VariableLengthTableActions, GlobalIndex, tlsCntTreeGlobalIndex, tlsSeverityLevel, TableIndex, ObjectRevision, FixedLengthTableActions, telindus, ContainmentPath, tlsTrapSeverityLevel, ) = mibBuilder.importSymbols("TELINDUS-SMI", "LocalIndex", "tlsTrapDescription", "VariableLengthTableActions", "GlobalIndex", "tlsCntTreeGlobalIndex", "tlsSeverityLevel", "TableIndex", "ObjectRevision", "FixedLengthTableActions", "telindus", "ContainmentPath", "tlsTrapSeverityLevel")
r1622Rootv2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 776, 1119))
r1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093))
r1622v2PRoutMOProp = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 1))
r1622v2PRoutMOPropEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 1, 1))
r1622v2PRoutMOPropPath = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 1, 1, 3), ContainmentPath()).setMaxAccess("readonly")
r1622v2PRoutMOPropRev = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 1, 1, 4), ObjectRevision()).setMaxAccess("readonly")
er1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11))
er1622v2PRoutSendPortUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 31), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutSendAdminUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 56), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutSendHostUnreachable = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 36), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRipUpInt = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 35), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutRipNeighbors = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50))
er1622v2PRoutRipNeighborsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50, 1), )
er1622v2PRoutRipNeighborsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutRipNeighborsTableIx"))
er1622v2PRoutRipNeighborsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutRipNeighborsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50, 1, 1, 11), TableIndex())
er1622v2PRoutRipNeighborsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 50, 1, 1, 67108864), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutMulticastRouting = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 17), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutSysSecret = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 40), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutPppSecretTable = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41))
er1622v2PRoutPppSecretTableSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1), )
er1622v2PRoutPppSecretTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutPppSecretTableTableIx"))
er1622v2PRoutPppSecretTableActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutPppSecretTableTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1, 1, 11), TableIndex())
er1622v2PRoutPppSecretTableName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutPppSecretTableSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 41, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStat = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51))
er1622v2PRoutDhcpStatSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1), )
er1622v2PRoutDhcpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutDhcpStatTableIx"))
er1622v2PRoutDhcpStatActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 11), TableIndex())
er1622v2PRoutDhcpStatIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 50331648), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 268435456), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatDnsSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 285212672), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("configured", 0), ("learned", 1), ("relay", 2),))).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 67108864), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatNameServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 234881024), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatTftpServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 83886080), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatTftpServerOption = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 335544320), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 100663296), OctetString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatBootFile = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 117440512), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatBootFileOption = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 352321536), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 134217728), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 150994944), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatNetbiosNS = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 167772160), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatNetbiosNS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 251658240), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatNetbiosNT = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 1, 1, 184549376), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 4, 8,)).clone(namedValues=NamedValues(("nomnode", 0), ("bmnode", 1), ("pmnode", 2), ("mmnode", 4), ("hmnode", 8),))).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptions = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184), )
er1622v2PRoutDhcpStatOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutDhcpStatTableIx"), (0, "R1622v2-QUALMON", "er1622v2PRoutDhcpStatOptionsTableIx"))
er1622v2PRoutDhcpStatOptionsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptionsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 11), TableIndex())
er1622v2PRoutDhcpStatOptionsCode = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptionsValueAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 33619968), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptionsValueDecimal = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 33685504), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptionsValueHexData = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 33751040), OctetString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpStatOptionsValueIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 51, 402653184, 1, 33816576), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDyn = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52))
er1622v2PRoutDhcpDynSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1), )
er1622v2PRoutDhcpDynEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutDhcpDynTableIx"))
er1622v2PRoutDhcpDynActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 11), TableIndex())
er1622v2PRoutDhcpDynIpcpSubnet = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 301989888), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynIpStartAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynIpEndAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 50331648), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 67108864), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 268435456), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynDnsSetting = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 285212672), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("configured", 0), ("learned", 1), ("relay", 2),))).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynNameServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 83886080), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynNameServer2 = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 234881024), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynTftpServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 100663296), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynTftpServerOption = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 335544320), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 117440512), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynHoldTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 134217728), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynBootFile = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 150994944), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynBootFileOption = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 352321536), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 167772160), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 184549376), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynNetbiosNS = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 201326592), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynNetbiosNS2 = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 251658240), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynNetbiosNT = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 1, 1, 218103808), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 4, 8,)).clone(namedValues=NamedValues(("nomnode", 0), ("bmnode", 1), ("pmnode", 2), ("mmnode", 4), ("hmnode", 8),))).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptions = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184), )
er1622v2PRoutDhcpDynOptionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutDhcpDynTableIx"), (0, "R1622v2-QUALMON", "er1622v2PRoutDhcpDynOptionsTableIx"))
er1622v2PRoutDhcpDynOptionsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptionsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 11), TableIndex())
er1622v2PRoutDhcpDynOptionsCode = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptionsValueAscii = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 33619968), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptionsValueDecimal = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 33685504), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptionsValueHexData = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 33751040), OctetString()).setMaxAccess("readwrite")
er1622v2PRoutDhcpDynOptionsValueIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 52, 402653184, 1, 33816576), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDhcpCheckAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 53), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("arpOnly", 2),))).setMaxAccess("readwrite")
er1622v2PRoutDhcpCustomVendorId = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 81), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutQualMon = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77))
er1622v2PRoutQualMonSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 1))
er1622v2PRoutQualMonEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 1, 1))
er1622v2PRoutQualMonMonitor = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 1, 1, 33554432), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonType = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 1, 1, 16777216), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("sequential", 0), ("concurrent", 1),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinations = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648), )
er1622v2PRoutQualMonDestinationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutQualMonDestinationsTableIx"))
er1622v2PRoutQualMonDestinationsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 11), TableIndex())
er1622v2PRoutQualMonDestinationsName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 234881024), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 369098752), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3,)).clone(namedValues=NamedValues(("enabled", 1), ("onDemand", 2), ("disabled", 3),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsSource = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 184549376), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsTos = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 167772160), Integer32().subtype(subtypeSpec=SingleValueConstraint(32, 64, 96, 128, 160, 192, 224, 40, 48, 56, 72, 80, 88, 104, 112, 120, 136, 144, 152, 184,)).clone(namedValues=NamedValues(("cs1", 32), ("cs2", 64), ("cs3", 96), ("cs4", 128), ("cs5", 160), ("cs6", 192), ("cs7", 224), ("af11", 40), ("af12", 48), ("af13", 56), ("af21", 72), ("af22", 80), ("af23", 88), ("af31", 104), ("af32", 112), ("af33", 120), ("af41", 136), ("af42", 144), ("af43", 152), ("ef", 184),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 218103808), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("queue1", 0), ("queue2", 1), ("queue3", 2), ("queue4", 3), ("queue5", 4), ("lowDelayQueue", 5), ("lowDelay2Queue", 6), ("systemQueue", 7),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsProtocolIcmp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 50397184), OctetString()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsProtocolUdpEcho = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 50462720), OctetString()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsProtocolUdpServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 50528256), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsTxInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 402653184), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsTxGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 419430400), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 67108864), Integer32()).setUnits('100msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 150994944), Integer32()).setUnits('100msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLength = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 83886080), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsIdleSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 268435456), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 100728832), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 100794368), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 100859904), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 100925440), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 100990976), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 101056512), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 101122048), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmSamples = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117506048), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117571584), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117637120), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117702656), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117768192), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118095872), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118161408), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117833728), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117899264), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 117964800), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118030336), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118226944), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118292480), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118358016), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118423552), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118489088), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118554624), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118620160), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118685696), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118751232), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118816768), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118882304), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 118947840), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 119013376), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 119078912), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 119144448), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOff = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 119209984), Integer32()).setUnits('msec').setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsAlarmMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 251658240), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLogging = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 201326592), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 3, 5, 10, 15, 30, 60,)).clone(namedValues=NamedValues(("disabled", 0), ("s3min", 3), ("s5min", 5), ("s10min", 10), ("s15min", 15), ("s30min", 30), ("s60min", 60),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonDestinationsLoggingDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 50331648, 1, 503316480), Integer32().subtype(subtypeSpec=SingleValueConstraint(4, 8, 16, 32, 128, 512, 1024,)).clone(namedValues=NamedValues(("s4", 4), ("s8", 8), ("s16", 16), ("s32", 32), ("s128", 128), ("s512", 512), ("s1024", 1024),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonUdpServerPort = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864), )
er1622v2PRoutQualMonUdpServerPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutQualMonUdpServerPortTableIx"))
er1622v2PRoutQualMonUdpServerPortActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutQualMonUdpServerPortTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1, 11), TableIndex())
er1622v2PRoutQualMonUdpServerPortDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutQualMonUdpServerPortPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1, 218103808), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("queue1", 0), ("queue2", 1), ("queue3", 2), ("queue4", 3), ("queue5", 4), ("lowDelayQueue", 5), ("lowDelay2Queue", 6), ("systemQueue", 7),))).setMaxAccess("readwrite")
er1622v2PRoutQualMonUdpServerPortTos = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 77, 67108864, 1, 167772160), Integer32().subtype(subtypeSpec=SingleValueConstraint(-1, 32, 64, 96, 128, 160, 192, 224, 40, 48, 56, 72, 80, 88, 104, 112, 120, 136, 144, 152, 184,)).clone(namedValues=NamedValues(("keepTos", -1), ("cs1", 32), ("cs2", 64), ("cs3", 96), ("cs4", 128), ("cs5", 160), ("cs6", 192), ("cs7", 224), ("af11", 40), ("af12", 48), ("af13", 56), ("af21", 72), ("af22", 80), ("af23", 88), ("af31", 104), ("af32", 112), ("af33", 120), ("af41", 136), ("af42", 144), ("af43", 152), ("ef", 184),))).setMaxAccess("readwrite")
er1622v2PRoutHosts = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49))
er1622v2PRoutHostsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1), )
er1622v2PRoutHostsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutHostsTableIx"))
er1622v2PRoutHostsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutHostsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1, 1, 11), TableIndex())
er1622v2PRoutHostsHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutHostsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 49, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDefaultRoute = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13))
er1622v2PRoutDefaultRouteSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1))
er1622v2PRoutDefaultRouteEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1, 1))
er1622v2PRoutDefaultRouteGateway = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDefaultRouteInterface = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDefaultRoutePreference = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1, 1, 50331648), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDefaultRouteMetric = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 13, 1, 1, 67108864), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTable = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14))
er1622v2PRoutRoutingTableSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1), )
er1622v2PRoutRoutingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutRoutingTableTableIx"))
er1622v2PRoutRoutingTableActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 11), TableIndex())
er1622v2PRoutRoutingTableRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 117440512), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 50331648), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableIf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 67108864), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTablePref = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 83886080), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 100663296), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableProxyArp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 134217728), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRoutingTableTimeWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 14, 1, 1, 150994944), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutHelperProtocols = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15))
er1622v2PRoutHelperProtocolsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15, 1), )
er1622v2PRoutHelperProtocolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutHelperProtocolsTableIx"))
er1622v2PRoutHelperProtocolsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutHelperProtocolsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15, 1, 1, 11), TableIndex())
er1622v2PRoutHelperProtocolsType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 15, 1, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutSendTtlExceeded = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 30), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRoutingProtocol = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 34), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("none", 0), ("rip2", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRipHoldDownTime = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 78), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutAlarmMask = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 135), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutAlarmLev = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170))
er1622v2PRoutAlarmLevSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1))
er1622v2PRoutAlarmLevEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1, 1))
er1622v2PRoutAlarmLevPingActive = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutAlarmLevQMonLoss = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1, 1, 33554432), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutAlarmLevQMonDelay = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1, 1, 50331648), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutAlarmLevQMonJitter = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 170, 1, 1, 67108864), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutR2ScrtTbl = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42))
er1622v2PRoutR2ScrtTblSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1), )
er1622v2PRoutR2ScrtTblEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutR2ScrtTblTableIx"))
er1622v2PRoutR2ScrtTblActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutR2ScrtTblTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1, 11), TableIndex())
er1622v2PRoutR2ScrtTblKeyId = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutR2ScrtTblSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutR2ScrtTblIf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 42, 1, 1, 50331648), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutAlternativeRoutes = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 57), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("backup", 0), ("roundRobin", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59))
er1622v2PRoutRadiusSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1))
er1622v2PRoutRadiusEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1))
er1622v2PRoutRadiusAcctServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694564352), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctServerSource = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694760960), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctServerSecret = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694629888), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctServerEncModeSecret = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694892032), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 128,)).clone(namedValues=NamedValues(("none", 1), ("encrypt", 2), ("encType1", 3), ("invalid", 128),))).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctServerEncSecret = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694957568), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctServerTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 1694695424), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutRadiusRetries = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 16777216), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAcctUpdate = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 33554432), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutRadiusLogin = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 50331648), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("fallback", 2), ("reverseFallback", 3),))).setMaxAccess("readwrite")
er1622v2PRoutRadiusPpp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1, 1, 67108864), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServers = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600), )
er1622v2PRoutRadiusAuthServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutRadiusAuthServersTableIx"))
er1622v2PRoutRadiusAuthServersActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 11), TableIndex())
er1622v2PRoutRadiusAuthServersAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersSource = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 67108864), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersEncModeSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 100663296), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 128,)).clone(namedValues=NamedValues(("none", 1), ("encrypt", 2), ("encType1", 3), ("invalid", 128),))).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersEncSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 117440512), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutRadiusAuthServersTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 59, 1677721600, 1, 50331648), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutTacacs = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70))
er1622v2PRoutTacacsSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 1))
er1622v2PRoutTacacsEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 1, 1))
er1622v2PRoutTacacsLogin = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 1, 1, 83886080), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("fallback", 2), ("reverseFallback", 3),))).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServers = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216), )
er1622v2PRoutTacacsAuthServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutTacacsAuthServersTableIx"))
er1622v2PRoutTacacsAuthServersActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 11), TableIndex())
er1622v2PRoutTacacsAuthServersAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersSource = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 50331648), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersEncModeSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 134217728), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 128,)).clone(namedValues=NamedValues(("none", 1), ("encrypt", 2), ("encType1", 3), ("invalid", 128),))).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersEncSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 150994944), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutTacacsAuthServersTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 70, 16777216, 1, 67108864), TimeTicks()).setMaxAccess("readwrite")
er1622v2PRoutDns = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64))
er1622v2PRoutDnsSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1))
er1622v2PRoutDnsEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1))
er1622v2PRoutDnsPrimaryDns = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDnsSecondaryDns = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDnsDomainName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 50331648), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsIpV6Router = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 67108864), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsPreference = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 83886080), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutDnsProxy = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 100663296), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutDnsCacheSize = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 64, 1, 1, 117440512), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutLog = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 67))
er1622v2PRoutLogSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 67, 1))
er1622v2PRoutLogEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 67, 1, 1))
er1622v2PRoutLogMode = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 67, 1, 1, 16777216), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
er1622v2PRoutLogDhcpSyslogMask = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 67, 1, 1, 33554432), Integer32()).setMaxAccess("readwrite")
er1622v2PRoutAddrPools = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108))
er1622v2PRoutAddrPoolsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1), )
er1622v2PRoutAddrPoolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutAddrPoolsTableIx"))
er1622v2PRoutAddrPoolsActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1, 11), TableIndex())
er1622v2PRoutAddrPoolsName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolIntervalFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1, 33686016), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolIntervalTo = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 1, 1, 33686272), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolList = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968), )
er1622v2PRoutAddrPoolsPoolListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutAddrPoolsTableIx"), (0, "R1622v2-QUALMON", "er1622v2PRoutAddrPoolsPoolListTableIx"))
er1622v2PRoutAddrPoolsPoolListActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolListTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1, 11), TableIndex())
er1622v2PRoutAddrPoolsPoolListLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolListRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1, 50331648), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutAddrPoolsPoolListNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 108, 33619968, 1, 67108864), IpAddress()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCli = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80))
er1622v2PRoutDnsUpdCliSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1), )
er1622v2PRoutDnsUpdCliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "er1622v2PRoutDnsUpdCliTableIx"))
er1622v2PRoutDnsUpdCliActions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 2), VariableLengthTableActions()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 11), TableIndex())
er1622v2PRoutDnsUpdCliName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsMode = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33620224), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("disabled", 0), ("offline", 1), ("online", 2),))).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsSystem = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33620480), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("dynamic", 0), ("static", 1), ("custom", 2),))).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsHostNameFqdn = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33620736), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33620992), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33621248), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33621504), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsTcpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33621760), Integer32().subtype(subtypeSpec=SingleValueConstraint(80, 8245,)).clone(namedValues=NamedValues(("http", 80), ("httpProxyBypass", 8245),))).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsMxName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33622017), DisplayString()).setMaxAccess("readwrite")
er1622v2PRoutDnsUpdCliDnsProvDynDnsMxBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 11, 80, 1, 1, 33622018), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("no", 0), ("yes", 1),))).setMaxAccess("readwrite")
sr1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14))
sr1622v2PRoutDhcpBinding = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54))
sr1622v2PRoutDhcpBindingSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1), )
sr1622v2PRoutDhcpBindingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDhcpBindingTableIx"))
sr1622v2PRoutDhcpBindingTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 11), TableIndex())
sr1622v2PRoutDhcpBindingIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 33554432), OctetString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 50331648), TimeTicks()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 67108864), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 100663296), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingState = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 83886080), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("onHold", 0), ("leased", 1), ("reserved", 2),))).setMaxAccess("readonly")
sr1622v2PRoutDhcpBindingCheckAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 54, 1, 1, 117440512), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4,)).clone(namedValues=NamedValues(("idle", 0), ("pending", 1), ("validated", 2), ("rejected", 3), ("skipped", 4),))).setMaxAccess("readonly")
sr1622v2PRoutDhcpStat = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55))
sr1622v2PRoutDhcpStatSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1), )
sr1622v2PRoutDhcpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDhcpStatTableIx"))
sr1622v2PRoutDhcpStatTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 11), TableIndex())
sr1622v2PRoutDhcpStatStartRange = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpStatEndRange = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 33554432), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpStatInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 100663296), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpStatFree = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 50331648), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutDhcpStatLeased = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 67108864), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutDhcpStatHold = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 55, 1, 1, 83886080), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelay = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71))
sr1622v2PRoutDhcpRelaySSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1), )
sr1622v2PRoutDhcpRelayEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDhcpRelayTableIx"))
sr1622v2PRoutDhcpRelayTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 11), TableIndex())
sr1622v2PRoutDhcpRelaySourceIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelayMac = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 33554432), OctetString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelayAssignedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 50331648), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelayServerIp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 67108864), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelayDhcpStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 83886080), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9,)).clone(namedValues=NamedValues(("discover", 1), ("offer", 2), ("request", 3), ("decline", 4), ("ack", 5), ("nak", 6), ("release", 7), ("inform", 8), ("idle", 9),))).setMaxAccess("readonly")
sr1622v2PRoutDhcpRelayLeaseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 71, 1, 1, 117440512), TimeTicks()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBlacklist = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75))
sr1622v2PRoutDhcpBlacklistSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1), )
sr1622v2PRoutDhcpBlacklistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDhcpBlacklistTableIx"))
sr1622v2PRoutDhcpBlacklistTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1, 1, 11), TableIndex())
sr1622v2PRoutDhcpBlacklistIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBlacklistMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1, 1, 33554432), OctetString()).setMaxAccess("readonly")
sr1622v2PRoutDhcpBlacklistReason = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 75, 1, 1, 50331648), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("none", 0), ("arp", 1), ("alienAck", 2), ("declined", 3), ("ping", 4), ("networkOrBroadcast", 5),))).setMaxAccess("readonly")
sr1622v2PRoutIgmpTable = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58))
sr1622v2PRoutIgmpTableSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1), )
sr1622v2PRoutIgmpTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutIgmpTableTableIx"))
sr1622v2PRoutIgmpTableTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1, 1, 11), TableIndex())
sr1622v2PRoutIgmpTableMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutIgmpTableMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1, 1, 50331648), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutIgmpTableIf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 58, 1, 1, 33554432), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutInterfaces = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199))
sr1622v2PRoutInterfacesSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1), )
sr1622v2PRoutInterfacesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutInterfacesTableIx"))
sr1622v2PRoutInterfacesTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 11), TableIndex())
sr1622v2PRoutInterfacesIfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 1694498816), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutInterfacesIfType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 1711276032), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255,), SingleValueConstraint(256, 257,))).clone(namedValues=NamedValues(("other", 1), ("regular1822", 2), ("hdh1822", 3), ("ddnmx25", 4), ("rfc877mx25", 5), ("ethernetmcsmacd", 6), ("iso88023mcsmacd", 7), ("iso88024mtokenBus", 8), ("iso88025mtokenRing", 9), ("is088026mman", 10), ("starlan", 11), ("proteonm10Mbit", 12), ("proteonm80Mbit", 13), ("hyperChannel", 14), ("fddi", 15), ("lapb", 16), ("sdlc", 17), ("ds1", 18), ("e1", 19), ("basicISDN", 20), ("primaryISDN", 21), ("propPointToPointSerial", 22), ("ppp", 23), ("softwareLoopback", 24), ("eon", 25), ("ethernetm3Mbit", 26), ("nsip", 27), ("slip", 28), ("ultra", 29), ("ds3", 30), ("sip", 31), ("framemrelay", 32), ("rs232", 33), ("para", 34), ("arcnet", 35), ("arcnetPlus", 36), ("atm", 37), ("miox25", 38), ("sonet", 39), ("x25ple", 40), ("iso88022llc", 41), ("localTalk", 42), ("smdsDxi", 43), ("frameRelayService", 44), ("v35", 45), ("hssi", 46), ("hippi", 47), ("modem", 48), ("aal5", 49), ("sonetPath", 50), ("sonetVT", 51), ("smdsIcip", 52), ("propVirtual", 53), ("propMultiplexor", 54), ("ieee80212", 55), ("fibreChannel", 56), ("hippiInterface", 57), ("frameRelayInterconnect", 58), ("aflane8023", 59), ("aflane8025", 60), ("cctEmul", 61), ("fastEther", 62), ("isdn", 63), ("v11", 64), ("v36", 65), ("g703at64k", 66), ("g703at2mb", 67), ("qllc", 68), ("fastEtherFX", 69), ("channel", 70), ("ieee80211", 71), ("ibm370parChan", 72), ("escon", 73), ("dlsw", 74), ("isdns", 75), ("isdnu", 76), ("lapd", 77), ("ipSwitch", 78), ("rsrb", 79), ("atmmlogical", 80), ("ds0", 81), ("ds0Bundle", 82), ("bsc", 83), ("async", 84), ("cnr", 85), ("iso88025Dtr", 86), ("eplrs", 87), ("arap", 88), ("propCnls", 89), ("hostPad", 90), ("termPad", 91), ("frameRelayMPI", 92), ("x213", 93), ("adsl", 94), ("radsl", 95), ("sdsl", 96), ("vdsl", 97), ("iso88025CRFPInt", 98), ("myrinet", 99), ("voiceEM", 100), ("voiceFXO", 101), ("voiceFXS", 102), ("voiceEncap", 103), ("voiceOverIp", 104), ("atmDxi", 105), ("atmFuni", 106), ("atmIma", 107), ("pppMultilinkBundle", 108), ("ipOverCdlc", 109), ("ipOverClaw", 110), ("stackToStack", 111), ("virtualIpAddress", 112), ("mpc", 113), ("ipOverAtm", 114), ("iso88025Fiber", 115), ("tdlc", 116), ("gigabitEthernet", 117), ("hdlc", 118), ("lapf", 119), ("v37", 120), ("x25mlp", 121), ("x25huntGroup", 122), ("trasnpHdlc", 123), ("interleave", 124), ("fast", 125), ("ip", 126), ("docsCableMaclayer", 127), ("docsCableDownstream", 128), ("docsCableUpstream", 129), ("a12MppSwitch", 130), ("tunnel", 131), ("coffee", 132), ("ces", 133), ("atmSubInterface", 134), ("l2vlan", 135), ("l3ipvlan", 136), ("l3ipxvlan", 137), ("digitalPowerline", 138), ("mediaMailOverIp", 139), ("dtm", 140), ("dcn", 141), ("ipForward", 142), ("msdsl", 143), ("ieee1394", 144), ("ifmgsn", 145), ("dvbRccMacLayer", 146), ("dvbRccDownstream", 147), ("dvbRccUpstream", 148), ("atmVirtual", 149), ("mplsTunnel", 150), ("srp", 151), ("voiceOverAtm", 152), ("voiceOverFrameRelay", 153), ("idsl", 154), ("compositeLink", 155), ("ss7SigLink", 156), ("propWirelessP2P", 157), ("frForward", 158), ("rfc1483", 159), ("usb", 160), ("ieee8023adLag", 161), ("bgppolicyaccounting", 162), ("frf16MfrBundle", 163), ("h323Gatekeeper", 164), ("h323Proxy", 165), ("mpls", 166), ("mfSigLink", 167), ("hdsl2", 168), ("shdsl", 169), ("ds1FDL", 170), ("pos", 171), ("dvbAsiIn", 172), ("dvbAsiOut", 173), ("plc", 174), ("nfas", 175), ("tr008", 176), ("gr303RDT", 177), ("gr303IDT", 178), ("isup", 179), ("propDocsWirelessMaclayer", 180), ("propDocsWirelessDownstream", 181), ("propDocsWirelessUpstream", 182), ("hiperlan2", 183), ("propBWAp2Mp", 184), ("sonetOverheadChannel", 185), ("digitalWrapperOverheadChannel", 186), ("aal2", 187), ("radioMAC", 188), ("atmRadio", 189), ("imt", 190), ("mvl", 191), ("reachDSL", 192), ("frDlciEndPt", 193), ("atmVciEndPt", 194), ("opticalChannel", 195), ("opticalTransport", 196), ("propAtm", 197), ("voiceOverCable", 198), ("infiniband", 199), ("teLink", 200), ("q2931", 201), ("virtualTg", 202), ("sipTg", 203), ("sipSig", 204), ("docsCableUpstreamChannel", 205), ("econet", 206), ("pon155", 207), ("pon622", 208), ("bridge", 209), ("linegroup", 210), ("voiceEMFGD", 211), ("voiceFGDEANA", 212), ("voiceDID", 213), ("mpegTransport", 214), ("sixToFour", 215), ("gtp", 216), ("pdnEtherLoop1", 217), ("pdnEtherLoop2", 218), ("opticalChannelGroup", 219), ("homepna", 220), ("gfp", 221), ("ciscoISLvlan", 222), ("actelisMetaLOOP", 223), ("fcipLink", 224), ("rpr", 225), ("qam", 226), ("lmp", 227), ("cblVectaStar", 228), ("docsCableMCmtsDownstream", 229), ("adsl2", 230), ("macSecControlledIF", 231), ("macSecUncontrolledIF", 232), ("aviciOpticalEther", 233), ("atmbond", 234), ("voiceFGDOS", 235), ("mocaVersion1", 236), ("ieee80216WMAN", 237), ("adsl2plus", 238), ("dvbRcsMacLayer", 239), ("dvbTdm", 240), ("dvbRcsTdma", 241), ("x86Laps", 242), ("wwanPP", 243), ("wwanPP2", 244), ("voiceEBS", 245), ("ifPwType", 246), ("ilan", 247), ("pip", 248), ("aluELP", 249), ("gpon", 250), ("vdsl2", 251), ("capwapDot11Profile", 252), ("capwapDot11Bss", 253), ("capwapWtpVirtualRadio", 254), ("bits", 255),) + NamedValues(("docsCableUpstreamRfPort", 256), ("cableDownstreamRfPort", 257),))).setMaxAccess("readonly")
sr1622v2PRoutInterfacesIfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 1795162112), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6, 7,)).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7),))).setMaxAccess("readonly")
sr1622v2PRoutInterfacesIfLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 1811939328), TimeTicks()).setMaxAccess("readonly")
sr1622v2PRoutInterfacesAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 2030043136), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutInterfacesMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 1, 1, 2063597568), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutInterfacesSecondaryIp = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 385875968), )
sr1622v2PRoutInterfacesSecondaryIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 385875968, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutInterfacesTableIx"), (0, "R1622v2-QUALMON", "sr1622v2PRoutInterfacesSecondaryIpTableIx"))
sr1622v2PRoutInterfacesSecondaryIpTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 385875968, 1, 11), TableIndex())
sr1622v2PRoutInterfacesSecondaryIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 385875968, 1, 2030043136), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutInterfacesSecondaryIpNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 199, 385875968, 1, 2063597568), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTable = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32))
sr1622v2PRoutRoutingTableSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1), )
sr1622v2PRoutRoutingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutRoutingTableTableIx"))
sr1622v2PRoutRoutingTableTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 11), TableIndex())
sr1622v2PRoutRoutingTableNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 33554432), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 50331648), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableIf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 67108864), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 83886080), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,)).clone(namedValues=NamedValues(("none", 0), ("framemrelay", 1), ("ppp", 2), ("ethernet", 3), ("x25", 4), ("atm", 5), ("policysdependent", 6), ("pppoA", 7), ("pppoE", 8), ("sasdependent", 9), ("gre", 10),))).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 100663296), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5,)).clone(namedValues=NamedValues(("down", 0), ("up", 1), ("discard", 2), ("spoofing", 3), ("holdDown", 4), ("closed", 5),))).setMaxAccess("readonly")
sr1622v2PRoutRoutingTablePref = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 117440512), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 134217728), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,)).clone(namedValues=NamedValues(("internal", 0), ("local", 1), ("host", 2), ("static", 3), ("rip", 4), ("ospf", 5), ("bgp", 6), ("float", 7), ("dial", 8), ("policy", 9), ("nat", 10), ("radius", 11), ("orchid", 12), ("reject", 13), ("ipsec", 14), ("floatIpsec", 15), ("mgmtProxy", 16), ("ipV6natpt", 17), ("pim", 18), ("none", 19), ("fixedDial", 20), ("fixedOutPolicy", 21), ("fixedInterface", 22), ("fixedIpsec", 23), ("staticTimed", 24), ("everyCat", 25),))).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 150994944), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutRoutingTableTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 32, 1, 1, 167772160), TimeTicks()).setMaxAccess("readonly")
sr1622v2PRoutRadius = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61))
sr1622v2PRoutRadiusSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61, 1))
sr1622v2PRoutRadiusEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61, 1, 1))
sr1622v2PRoutRadiusAuthServer = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRadiusAcctServer = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61, 1, 1, 50331648), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutRadiusPendingRequests = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 61, 1, 1, 33554432), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutDnsCache = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65))
sr1622v2PRoutDnsCacheSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1), )
sr1622v2PRoutDnsCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDnsCacheTableIx"))
sr1622v2PRoutDnsCacheTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 11), TableIndex())
sr1622v2PRoutDnsCacheIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDnsCacheIpV6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 83886080), Ipv6Address()).setMaxAccess("readonly")
sr1622v2PRoutDnsCacheHostname = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 33554432), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsCacheTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 50331648), TimeTicks()).setMaxAccess("readonly")
sr1622v2PRoutDnsCacheInfiniteTimeOut = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 67108864), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1), ("static", 2),))).setMaxAccess("readonly")
sr1622v2PRoutDnsCacheMatches = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 65, 1, 1, 100663296), Counter32()).setMaxAccess("readonly")
sr1622v2PRoutDnsServers = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66))
sr1622v2PRoutDnsServersSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1), )
sr1622v2PRoutDnsServersEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDnsServersTableIx"))
sr1622v2PRoutDnsServersTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 11), TableIndex())
sr1622v2PRoutDnsServersPrimaryDns = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDnsServersSecondaryDns = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 33554432), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDnsServersType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 50331648), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("static", 0), ("dhcp", 1), ("ppp", 2),))).setMaxAccess("readonly")
sr1622v2PRoutDnsServersRcvdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 67108864), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsServersPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 83886080), Integer32()).setMaxAccess("readonly")
sr1622v2PRoutDnsServersStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 66, 1, 1, 100663296), Integer32().subtype(subtypeSpec=SingleValueConstraint(2, 3, 5, 6,)).clone(namedValues=NamedValues(("primActive", 2), ("secActive", 3), ("inactive", 5), ("failed", 6),))).setMaxAccess("readonly")
sr1622v2PRoutDnsDomains = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72))
sr1622v2PRoutDnsDomainsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1), )
sr1622v2PRoutDnsDomainsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDnsDomainsTableIx"))
sr1622v2PRoutDnsDomainsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1, 1, 11), TableIndex())
sr1622v2PRoutDnsDomainsName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsDomainsType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1, 1, 33554432), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("static", 0), ("dhcp", 1), ("ppp", 2),))).setMaxAccess("readonly")
sr1622v2PRoutDnsDomainsRcvdInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 72, 1, 1, 50331648), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutAddrPools = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109))
sr1622v2PRoutAddrPoolsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1), )
sr1622v2PRoutAddrPoolsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutAddrPoolsTableIx"))
sr1622v2PRoutAddrPoolsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1, 11), TableIndex())
sr1622v2PRoutAddrPoolsName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutAddrPoolsType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1, 33554432), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("list", 1), ("interval", 2),))).setMaxAccess("readonly")
sr1622v2PRoutAddrPoolsNrOfAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1, 50331648), Counter32()).setMaxAccess("readonly")
sr1622v2PRoutAddrPoolsAvailAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 109, 1, 1, 67108864), Counter32()).setMaxAccess("readonly")
sr1622v2PRoutPoolReservations = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103))
sr1622v2PRoutPoolReservationsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1), )
sr1622v2PRoutPoolReservationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutPoolReservationsTableIx"))
sr1622v2PRoutPoolReservationsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 11), TableIndex())
sr1622v2PRoutPoolReservationsName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutPoolReservationsType = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 33554432), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("list", 1), ("interval", 2),))).setMaxAccess("readonly")
sr1622v2PRoutPoolReservationsLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 50331648), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutPoolReservationsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 67108864), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutPoolReservationsNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 83886080), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutPoolReservationsInterface = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 103, 1, 1, 100663296), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCli = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82))
sr1622v2PRoutDnsUpdCliSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1), )
sr1622v2PRoutDnsUpdCliEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "sr1622v2PRoutDnsUpdCliTableIx"))
sr1622v2PRoutDnsUpdCliTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 11), TableIndex())
sr1622v2PRoutDnsUpdCliName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsState = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33620224), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4,)).clone(namedValues=NamedValues(("disabled", 0), ("enabledIdle", 1), ("updating", 2), ("stopped", 3), ("unbound", 4),))).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsTcpSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33620480), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,)).clone(namedValues=NamedValues(("closed", 0), ("listen", 1), ("synSent", 2), ("synReceived", 3), ("established", 4), ("finWait1", 5), ("finWait2", 6), ("closing", 7), ("timeWait", 8), ("closeWait", 9), ("lastAck", 10), ("notFound", 11), ("dnsReqSent", 12),))).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateReturnCode = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33620736), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33620992), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33621248), DisplayString()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33621504), IpAddress()).setMaxAccess("readonly")
sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateTimePassed = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 14, 82, 1, 1, 33621760), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12))
pr1622v2PRoutQualMon = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79))
pr1622v2PRoutQualMonSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1), )
pr1622v2PRoutQualMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutQualMonTableIx"))
pr1622v2PRoutQualMonTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 11), TableIndex())
pr1622v2PRoutQualMonName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 301989888), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutQualMonStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 369098752), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 3, 2, 6, 8, 9,)).clone(namedValues=NamedValues(("run", 1), ("runOnDemand", 3), ("halted", 2), ("cleared", 6), ("disabled", 8), ("runIdle", 9),))).setMaxAccess("readonly")
pr1622v2PRoutQualMonIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutQualMonHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 33554432), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutQualMonSourceIp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 83886080), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutQualMonSourceId = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 352321536), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonNbrTxPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 50331648), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonNbrRxPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 67108864), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonError = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 285212672), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 201326592), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 218103808), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 100663296), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLossDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 268435456), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 184549376), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonDelayAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 117440512), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 134217728), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonJitterNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 234881024), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonJitterAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 150994944), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonJitterPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 167772160), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 504627200), Integer32().subtype(subtypeSpec=SingleValueConstraint(3, 1, 2, 4,)).clone(namedValues=NamedValues(("notInUse", 3), ("onlyJitter", 1), ("jitterAndLoss", 2), ("all", 4),))).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownLossUp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503971840), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownLossDelayUp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 504037376), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayUpMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505282560), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayUpAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505348096), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayUpMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505413632), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterUp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503775232), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterUpNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503382016), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterUpAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503447552), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterUpPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503513088), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownLossDown = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 504102912), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownLossDelayDown = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 504168448), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayDownMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505610240), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayDownAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505675776), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownDelayDownMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 505741312), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterDown = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503840768), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterDownNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503578624), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterDownAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503644160), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonUpDownJitterDownPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 503709696), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 251658240), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 1, 1, 318767104), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLogging = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320), )
pr1622v2PRoutQualMonLoggingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutQualMonTableIx"), (0, "R1622v2-QUALMON", "pr1622v2PRoutQualMonLoggingTableIx"))
pr1622v2PRoutQualMonLoggingTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 11), TableIndex())
pr1622v2PRoutQualMonLoggingSysUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 16777216), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingNbrTxPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 50331648), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingNbrRxPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 67108864), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingError = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 285212672), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 100663296), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingLossDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 268435456), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingDelayMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 184549376), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingDelayAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 117440512), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingDelayMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 134217728), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingJitterNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 234881024), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingJitterAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 150994944), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingJitterPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 167772160), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 504627200), Integer32().subtype(subtypeSpec=SingleValueConstraint(3, 1, 2, 4,)).clone(namedValues=NamedValues(("notInUse", 3), ("onlyJitter", 1), ("jitterAndLoss", 2), ("all", 4),))).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownLossUp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503971840), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownLossDelayUp = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 504037376), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayUpMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505282560), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayUpAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505348096), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayUpMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505413632), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterUpNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503382016), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterUpAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503447552), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterUpPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503513088), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownLossDown = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 504102912), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownLossDelayDown = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 504168448), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayDownMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505610240), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayDownAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505675776), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownDelayDownMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 505741312), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterDownNegMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503578624), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterDownAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503644160), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingUpDownJitterDownPosMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 503709696), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutQualMonLoggingDate = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 79, 335544320, 1, 520093696), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutUdpServer = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16))
pr1622v2PRoutUdpServerSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1), )
pr1622v2PRoutUdpServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutUdpServerTableIx"))
pr1622v2PRoutUdpServerTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1, 1, 11), TableIndex())
pr1622v2PRoutUdpServerDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1, 1, 16777216), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1, 1, 33554432), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerNbrPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 1, 1, 50331648), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerSessions = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864), )
pr1622v2PRoutUdpServerSessionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutUdpServerTableIx"), (0, "R1622v2-QUALMON", "pr1622v2PRoutUdpServerSessionsTableIx"))
pr1622v2PRoutUdpServerSessionsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 11), TableIndex())
pr1622v2PRoutUdpServerSessionsSourceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 16777216), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerSessionsSourcePort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 33554432), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerSessionsNbrPckt = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 50331648), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerSessionsFirstActivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 67108864), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutUdpServerSessionsLastActivityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 16, 67108864, 1, 83886080), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutIgmpProxy = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69))
pr1622v2PRoutIgmpProxySSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1))
pr1622v2PRoutIgmpProxyEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1, 1))
pr1622v2PRoutIgmpProxyInIgmp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1, 1, 16777216), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutIgmpProxyOutIgmp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1, 1, 33554432), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutIgmpProxyInData = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1, 1, 50331648), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutIgmpProxyInDiscards = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 69, 1, 1, 67108864), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutIpFragments = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87))
pr1622v2PRoutIpFragmentsSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1))
pr1622v2PRoutIpFragmentsEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1))
pr1622v2PRoutIpFragmentsReceivedFrames = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 16777216), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutIpFragmentsReassembledFrames = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 33554432), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutIpFragmentsExpiredFrames = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 50331648), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutIpFragmentsPendingFrames = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 67108864), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutIpFragmentsReceivedPackets = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 83886080), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutIpFragmentsExcessivelyFragPackets = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 87, 1, 1, 100663296), Counter64()).setMaxAccess("readonly")
pr1622v2PRoutTracertResults = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153))
pr1622v2PRoutTracertResultsSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1), )
pr1622v2PRoutTracertResultsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutTracertResultsTableIx"))
pr1622v2PRoutTracertResultsTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 11), TableIndex())
pr1622v2PRoutTracertResultsTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 16777216), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 33554432), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 50331648), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsNrTx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 67108864), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsNrRx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 83886080), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsRepTimMin = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 100663296), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsRepTimMax = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 117440512), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsRepTimAvrg = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 134217728), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutTracertResultsSr = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 150994944), Integer32()).setUnits('%').setMaxAccess("readonly")
pr1622v2PRoutTracertResultsComment = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 153, 1, 1, 167772160), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTable = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33))
pr1622v2PRoutRoutingTableSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1), )
pr1622v2PRoutRoutingTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutRoutingTableTableIx"))
pr1622v2PRoutRoutingTableTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 11), TableIndex())
pr1622v2PRoutRoutingTableNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTableMask = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 33554432), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTableGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 50331648), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTableIf = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 67108864), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTableUses = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 83886080), Gauge32()).setMaxAccess("readonly")
pr1622v2PRoutRoutingTableOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 33, 1, 1, 100663296), Gauge32()).setMaxAccess("readonly")
pr1622v2PRoutPingResults = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46))
pr1622v2PRoutPingResultsSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1))
pr1622v2PRoutPingResultsEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1))
pr1622v2PRoutPingResultsIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsNbrTxPckt = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 33554432), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsNbrRxPckt = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 50331648), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsRepTimMin = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 67108864), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsRepTimMax = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 83886080), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsRepTimAvrg = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 100663296), TimeTicks()).setMaxAccess("readonly")
pr1622v2PRoutPingResultsLastError = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 46, 1, 1, 117440512), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63))
pr1622v2PRoutRadiusAuthSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1), )
pr1622v2PRoutRadiusAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutRadiusAuthTableIx"))
pr1622v2PRoutRadiusAuthTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 11), TableIndex())
pr1622v2PRoutRadiusAuthServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 1677721600), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthVrfRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 134217728), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 16777216), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 33554432), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 50331648), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthChallenges = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 67108864), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthBadAuth = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 83886080), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthTimeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 100663296), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAuthDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 63, 1, 1, 117440512), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcct = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62))
pr1622v2PRoutRadiusAcctSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1))
pr1622v2PRoutRadiusAcctEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1))
pr1622v2PRoutRadiusAcctServer = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 1677721600), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctVrfRouter = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 16777216), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctRequests = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 134217728), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctResponses = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 150994944), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctBadAuth = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 83886080), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctTimeOuts = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 100663296), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutRadiusAcctDroppedPackets = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 62, 1, 1, 117440512), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuth = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68))
pr1622v2PRoutTacacsAuthSSCTable = MibTable((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1), )
pr1622v2PRoutTacacsAuthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1), ).setIndexNames((0, "R1622v2-QUALMON", "pr1622v2PRoutTacacsAuthTableIx"))
pr1622v2PRoutTacacsAuthTableIx = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 11), TableIndex())
pr1622v2PRoutTacacsAuthServer = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 16777216), IpAddress()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthPort = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 33554432), Integer32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthVrfRouter = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 184549376), DisplayString()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 50331648), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 67108864), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthFails = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 83886080), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthTimeOuts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 100663296), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAuthenticationStartPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 117506048), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAuthenticationContinuePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 117571584), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAuthenticationReplyPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 117637120), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAuthorizationRequestPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 134283264), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthAuthorizationResponsePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 134348800), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthDrops = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 150994944), Counter32()).setMaxAccess("readonly")
pr1622v2PRoutTacacsAuthErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 12, 68, 1, 1, 167772160), Counter32()).setMaxAccess("readonly")
ar1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16))
ar1622v2PRoutSendIgmpLeave = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 114), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutIgmpDataLeave = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 115))
ar1622v2PRoutIgmpDataLeaveSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 115, 1))
ar1622v2PRoutIgmpDataLeaveEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 115, 1, 1))
ar1622v2PRoutIgmpDataLeaveInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 115, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutIgmpDataLeaveIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 115, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutSendIgmpRep = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 112), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutIgmpDataRep = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 113))
ar1622v2PRoutIgmpDataRepSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 113, 1))
ar1622v2PRoutIgmpDataRepEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 113, 1, 1))
ar1622v2PRoutIgmpDataRepInterfaces = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 113, 1, 1, 16777216), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutIgmpDataRepIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 113, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutQmOnDemand = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8043), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutAction = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8044))
ar1622v2PRoutActionSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8044, 1))
ar1622v2PRoutActionEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8044, 1, 1))
ar1622v2PRoutActionAction = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8044, 1, 1, 16777216), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4,)).clone(namedValues=NamedValues(("restart", 1), ("restartLossWindow", 2), ("stop", 3), ("stopAndClear", 4),))).setMaxAccess("readwrite")
ar1622v2PRoutActionName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 8044, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutClearTracert = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 154), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutStopTracert = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 152), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutStartTracert = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 150), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutTracertData = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151))
ar1622v2PRoutTracertDataSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1))
ar1622v2PRoutTracertDataEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1))
ar1622v2PRoutTracertDataIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataHostName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataSourceIp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 50331648), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataStartTtl = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 67108864), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataMaxHops = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 83886080), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataQueriesPerHop = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 100663296), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataResolveHosts = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 117440512), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1),))).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataDnsTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 134217728), TimeTicks()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataIcmpTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 150994944), TimeTicks()).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataTos = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 167772160), Integer32().subtype(subtypeSpec=SingleValueConstraint(32, 64, 96, 128, 160, 192, 224, 40, 48, 56, 72, 80, 88, 104, 112, 120, 136, 144, 152, 184,)).clone(namedValues=NamedValues(("cs1", 32), ("cs2", 64), ("cs3", 96), ("cs4", 128), ("cs5", 160), ("cs6", 192), ("cs7", 224), ("af11", 40), ("af12", 48), ("af13", 56), ("af21", 72), ("af22", 80), ("af23", 88), ("af31", 104), ("af32", 112), ("af33", 120), ("af41", 136), ("af42", 144), ("af43", 152), ("ef", 184),))).setMaxAccess("readwrite")
ar1622v2PRoutTracertDataDataLength = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 151, 1, 1, 184549376), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutUnBlacklist = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 47), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutUnBlacklistData = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48))
ar1622v2PRoutUnBlacklistDataSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48, 1))
ar1622v2PRoutUnBlacklistDataEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48, 1, 1))
ar1622v2PRoutUnBlacklistDataStartIp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutUnBlacklistDataStopIp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48, 1, 1, 33554432), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutUnBlacklistDataMac = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 48, 1, 1, 50331648), OctetString()).setMaxAccess("readwrite")
ar1622v2PRoutStopPing = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 45), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutStartPing = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 43), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutPingData = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44))
ar1622v2PRoutPingDataSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1))
ar1622v2PRoutPingDataEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1))
ar1622v2PRoutPingDataIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataHostName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 100663296), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataSourceIp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 117440512), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataTos = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 134217728), Integer32().subtype(subtypeSpec=SingleValueConstraint(32, 64, 96, 128, 160, 192, 224, 40, 48, 56, 72, 80, 88, 104, 112, 120, 136, 144, 152, 184,)).clone(namedValues=NamedValues(("cs1", 32), ("cs2", 64), ("cs3", 96), ("cs4", 128), ("cs5", 160), ("cs6", 192), ("cs7", 224), ("af11", 40), ("af12", 48), ("af13", 56), ("af21", 72), ("af22", 80), ("af23", 88), ("af31", 104), ("af32", 112), ("af33", 120), ("af41", 136), ("af42", 144), ("af43", 152), ("ef", 184),))).setMaxAccess("readwrite")
ar1622v2PRoutPingDataFragment = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 150994944), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("yes", 1), ("no", 2),))).setMaxAccess("readwrite")
ar1622v2PRoutPingDataTtl = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 167772160), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataIterations = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 33554432), Integer32().subtype(subtypeSpec=SingleValueConstraint(0,)).clone(namedValues=NamedValues(("unlimited", 0),))).setMaxAccess("readwrite")
ar1622v2PRoutPingDataInterval = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 50331648), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataDataLength = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 67108864), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutPingDataTimeOut = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 44, 1, 1, 83886080), TimeTicks()).setMaxAccess("readwrite")
ar1622v2PRoutRestartDhcpClient = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 88), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutInterfaceName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 89), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutSendRipReqAction = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 301), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutRequestArguments = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 302))
ar1622v2PRoutRequestArgumentsSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 302, 1))
ar1622v2PRoutRequestArgumentsEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 302, 1, 1))
ar1622v2PRoutRequestArgumentsRouterIp = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 302, 1, 1, 16777216), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutRequestArgumentsOutIf = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 302, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutClearCounters = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 263), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutClearDnsCache = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 155), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutFreeIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 106), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutAddr = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 107), IpAddress()).setMaxAccess("readwrite")
ar1622v2PRoutTakeIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 104), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutPool = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 105))
ar1622v2PRoutPoolSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 105, 1))
ar1622v2PRoutPoolEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 105, 1, 1))
ar1622v2PRoutPoolPoolType = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 105, 1, 1, 16777216), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("list", 1), ("interval", 2),))).setMaxAccess("readwrite")
ar1622v2PRoutPoolPoolName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 105, 1, 1, 33554432), DisplayString()).setMaxAccess("readwrite")
ar1622v2PRoutForceDnsUpdate = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 84), Integer32()).setMaxAccess("readwrite")
ar1622v2PRoutDnsUpdateName = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 16, 85), DisplayString()).setMaxAccess("readwrite")
fr1622v2PRout = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13))
fr1622v2PRoutAlarm = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202))
fr1622v2PRoutAlarmSSC = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1))
fr1622v2PRoutAlarmEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1))
fr1622v2PRoutAlarmDiscriminator = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 16777216), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmCurrent = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 33554432), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmPrevious = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 50331648), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmMask = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 67108864), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmLevPingActive = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 83951616), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmLevQMonLoss = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 84017152), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmLevQMonDelay = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 84082688), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmLevQMonJitter = MibScalar((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 1, 1, 84148224), Integer32()).setMaxAccess("readonly")
fr1622v2PRoutAlarmE2 = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2))
fr1622v2PRoutAlarmE2Entry = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1))
fr1622v2PRoutAlarmE2PingActive = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 10))
fr1622v2PRoutAlarmE2PingActivePfx = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 10, 0))
fr1622v2PRoutAlarmE2PingActiveOff = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 10, 0, 1)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2PingActiveOn = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 10, 0, 2)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonLoss = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 11))
fr1622v2PRoutAlarmE2QMonLossPfx = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 11, 0))
fr1622v2PRoutAlarmE2QMonLossOff = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 11, 0, 1)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonLossOn = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 11, 0, 2)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonDelay = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 12))
fr1622v2PRoutAlarmE2QMonDelayPfx = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 12, 0))
fr1622v2PRoutAlarmE2QMonDelayOff = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 12, 0, 1)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonDelayOn = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 12, 0, 2)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonJitter = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 13))
fr1622v2PRoutAlarmE2QMonJitterPfx = MibIdentifier((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 13, 0))
fr1622v2PRoutAlarmE2QMonJitterOff = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 13, 0, 1)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
fr1622v2PRoutAlarmE2QMonJitterOn = NotificationType((1, 3, 6, 1, 4, 1, 776, 1119, 2093, 13, 202, 2, 1, 13, 0, 2)).setObjects(*(("R1622v2-QUALMON", "ifIndex"), ("R1622v2-QUALMON", "tlsCntTreeGlobalIndex"), ("R1622v2-QUALMON", "tlsTrapDescription"), ("R1622v2-QUALMON", "tlsSeverityLevel"), ("R1622v2-QUALMON", "tlsTrapSeverityLevel"),))
mibBuilder.exportSymbols("R1622v2-QUALMON", er1622v2PRoutLogMode=er1622v2PRoutLogMode, er1622v2PRoutAddrPoolsEntry=er1622v2PRoutAddrPoolsEntry, r1622v2PRoutMOPropPath=r1622v2PRoutMOPropPath, sr1622v2PRoutDnsDomainsType=sr1622v2PRoutDnsDomainsType, pr1622v2PRoutQualMonUpDownStatus=pr1622v2PRoutQualMonUpDownStatus, pr1622v2PRoutIgmpProxyInDiscards=pr1622v2PRoutIgmpProxyInDiscards, er1622v2PRoutHostsTableIx=er1622v2PRoutHostsTableIx, pr1622v2PRoutQualMonLoggingJitterNegMax=pr1622v2PRoutQualMonLoggingJitterNegMax, sr1622v2PRoutInterfacesTableIx=sr1622v2PRoutInterfacesTableIx, er1622v2PRoutTacacsAuthServersActions=er1622v2PRoutTacacsAuthServersActions, pr1622v2PRoutQualMonLoggingLossDelay=pr1622v2PRoutQualMonLoggingLossDelay, er1622v2PRoutQualMonDestinationsIpAddress=er1622v2PRoutQualMonDestinationsIpAddress, er1622v2PRoutQualMonUdpServerPortTableIx=er1622v2PRoutQualMonUdpServerPortTableIx, sr1622v2PRoutIgmpTableMulticast=sr1622v2PRoutIgmpTableMulticast, pr1622v2PRoutQualMonLoss=pr1622v2PRoutQualMonLoss, pr1622v2PRoutQualMonLoggingDelayMin=pr1622v2PRoutQualMonLoggingDelayMin, sr1622v2PRoutAddrPoolsSSCTable=sr1622v2PRoutAddrPoolsSSCTable, pr1622v2PRoutRoutingTableMask=pr1622v2PRoutRoutingTableMask, ar1622v2PRoutPoolPoolType=ar1622v2PRoutPoolPoolType, pr1622v2PRoutQualMonStatus=pr1622v2PRoutQualMonStatus, ar1622v2PRoutIgmpDataRepEntry=ar1622v2PRoutIgmpDataRepEntry, sr1622v2PRoutDhcpBlacklistEntry=sr1622v2PRoutDhcpBlacklistEntry, er1622v2PRoutR2ScrtTblKeyId=er1622v2PRoutR2ScrtTblKeyId, ar1622v2PRoutPingDataSSC=ar1622v2PRoutPingDataSSC, er1622v2PRoutDhcpStatDomainName=er1622v2PRoutDhcpStatDomainName, er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOn, er1622v2PRoutDhcpStatOptionsTableIx=er1622v2PRoutDhcpStatOptionsTableIx, ar1622v2PRoutSendIgmpRep=ar1622v2PRoutSendIgmpRep, er1622v2PRoutDhcpStatEntry=er1622v2PRoutDhcpStatEntry, er1622v2PRoutRoutingTableSSCTable=er1622v2PRoutRoutingTableSSCTable, sr1622v2PRoutInterfacesIfType=sr1622v2PRoutInterfacesIfType, er1622v2PRoutDefaultRoute=er1622v2PRoutDefaultRoute, er1622v2PRoutAlternativeRoutes=er1622v2PRoutAlternativeRoutes, pr1622v2PRout=pr1622v2PRout, ar1622v2PRoutUnBlacklistDataStartIp=ar1622v2PRoutUnBlacklistDataStartIp, sr1622v2PRoutDnsDomainsSSCTable=sr1622v2PRoutDnsDomainsSSCTable, pr1622v2PRoutRadiusAuthChallenges=pr1622v2PRoutRadiusAuthChallenges, er1622v2PRoutAlarmLevPingActive=er1622v2PRoutAlarmLevPingActive, pr1622v2PRoutQualMonUpDownJitterDown=pr1622v2PRoutQualMonUpDownJitterDown, sr1622v2PRoutDnsServersEntry=sr1622v2PRoutDnsServersEntry, sr1622v2PRoutRoutingTableEntry=sr1622v2PRoutRoutingTableEntry, pr1622v2PRoutTracertResultsTtl=pr1622v2PRoutTracertResultsTtl, pr1622v2PRoutQualMonSourceId=pr1622v2PRoutQualMonSourceId, sr1622v2PRoutDnsCacheIpAddress=sr1622v2PRoutDnsCacheIpAddress, fr1622v2PRoutAlarmPrevious=fr1622v2PRoutAlarmPrevious, pr1622v2PRoutQualMonJitterAvrg=pr1622v2PRoutQualMonJitterAvrg, ar1622v2PRoutActionSSC=ar1622v2PRoutActionSSC, er1622v2PRoutTacacsAuthServersSource=er1622v2PRoutTacacsAuthServersSource, pr1622v2PRoutQualMonLossDelay=pr1622v2PRoutQualMonLossDelay, er1622v2PRoutDhcpStatNetbiosNS=er1622v2PRoutDhcpStatNetbiosNS, pr1622v2PRoutQualMonLoggingSysUpTime=pr1622v2PRoutQualMonLoggingSysUpTime, pr1622v2PRoutQualMonDelayAvrg=pr1622v2PRoutQualMonDelayAvrg, er1622v2PRoutDhcpStat=er1622v2PRoutDhcpStat, er1622v2PRoutHelperProtocolsType=er1622v2PRoutHelperProtocolsType, er1622v2PRoutSendAdminUnreachable=er1622v2PRoutSendAdminUnreachable, er1622v2PRoutRipNeighborsEntry=er1622v2PRoutRipNeighborsEntry, sr1622v2PRoutDnsUpdCliName=sr1622v2PRoutDnsUpdCliName, er1622v2PRoutPppSecretTableEntry=er1622v2PRoutPppSecretTableEntry, er1622v2PRoutAlarmLev=er1622v2PRoutAlarmLev, pr1622v2PRoutIgmpProxyOutIgmp=pr1622v2PRoutIgmpProxyOutIgmp, er1622v2PRoutDhcpDynNetbiosNT=er1622v2PRoutDhcpDynNetbiosNT, sr1622v2PRoutInterfacesIfLastChange=sr1622v2PRoutInterfacesIfLastChange, er1622v2PRoutRadiusAuthServersEncModeSecret=er1622v2PRoutRadiusAuthServersEncModeSecret, pr1622v2PRoutQualMonUpDownDelayUpAvrg=pr1622v2PRoutQualMonUpDownDelayUpAvrg, fr1622v2PRoutAlarmE2QMonDelay=fr1622v2PRoutAlarmE2QMonDelay, er1622v2PRoutPppSecretTableTableIx=er1622v2PRoutPppSecretTableTableIx, pr1622v2PRoutPingResultsRepTimMax=pr1622v2PRoutPingResultsRepTimMax, ar1622v2PRoutTracertDataDnsTimeOut=ar1622v2PRoutTracertDataDnsTimeOut, sr1622v2PRoutInterfacesEntry=sr1622v2PRoutInterfacesEntry, er1622v2PRoutDhcpStatGateway=er1622v2PRoutDhcpStatGateway, er1622v2PRoutRoutingTableNetwork=er1622v2PRoutRoutingTableNetwork, er1622v2PRoutAddrPoolsPoolIntervalTo=er1622v2PRoutAddrPoolsPoolIntervalTo, er1622v2PRoutAddrPoolsName=er1622v2PRoutAddrPoolsName, pr1622v2PRoutQualMonTableIx=pr1622v2PRoutQualMonTableIx, er1622v2PRoutSendHostUnreachable=er1622v2PRoutSendHostUnreachable, pr1622v2PRoutQualMonLoggingUpDownJitterDownNegMax=pr1622v2PRoutQualMonLoggingUpDownJitterDownNegMax, sr1622v2PRoutDnsServersType=sr1622v2PRoutDnsServersType, pr1622v2PRoutTacacsAuthTableIx=pr1622v2PRoutTacacsAuthTableIx, pr1622v2PRoutRoutingTableOctets=pr1622v2PRoutRoutingTableOctets, r1622v2PRout=r1622v2PRout, fr1622v2PRoutAlarmE2PingActivePfx=fr1622v2PRoutAlarmE2PingActivePfx, er1622v2PRoutHosts=er1622v2PRoutHosts, ar1622v2PRoutTracertDataDataLength=ar1622v2PRoutTracertDataDataLength, pr1622v2PRoutRadiusAuthTimeOuts=pr1622v2PRoutRadiusAuthTimeOuts, sr1622v2PRoutDhcpRelay=sr1622v2PRoutDhcpRelay, fr1622v2PRoutAlarmE2QMonJitter=fr1622v2PRoutAlarmE2QMonJitter, er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOn=er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOn, er1622v2PRoutHelperProtocolsSSCTable=er1622v2PRoutHelperProtocolsSSCTable, pr1622v2PRoutQualMonLoggingUpDownLossDown=pr1622v2PRoutQualMonLoggingUpDownLossDown, pr1622v2PRoutTacacsAuthServer=pr1622v2PRoutTacacsAuthServer, pr1622v2PRoutIgmpProxySSC=pr1622v2PRoutIgmpProxySSC, ar1622v2PRoutPingDataInterval=ar1622v2PRoutPingDataInterval, sr1622v2PRoutInterfacesSecondaryIpAddress=sr1622v2PRoutInterfacesSecondaryIpAddress, sr1622v2PRoutPoolReservationsEntry=sr1622v2PRoutPoolReservationsEntry, er1622v2PRoutDhcpStatNetbiosNT=er1622v2PRoutDhcpStatNetbiosNT, sr1622v2PRoutDnsCacheInfiniteTimeOut=sr1622v2PRoutDnsCacheInfiniteTimeOut, ar1622v2PRoutUnBlacklistDataSSC=ar1622v2PRoutUnBlacklistDataSSC, er1622v2PRoutRoutingTableRemark=er1622v2PRoutRoutingTableRemark, sr1622v2PRoutDhcpBlacklistIpAddress=sr1622v2PRoutDhcpBlacklistIpAddress, er1622v2PRoutRipNeighborsIpAddress=er1622v2PRoutRipNeighborsIpAddress, sr1622v2PRoutDhcpStatLeased=sr1622v2PRoutDhcpStatLeased, sr1622v2PRoutDhcpStatSSCTable=sr1622v2PRoutDhcpStatSSCTable, pr1622v2PRoutRadiusAuthSSCTable=pr1622v2PRoutRadiusAuthSSCTable, pr1622v2PRoutQualMonUpDownJitterDownPosMax=pr1622v2PRoutQualMonUpDownJitterDownPosMax, er1622v2PRoutQualMonUdpServerPort=er1622v2PRoutQualMonUdpServerPort, sr1622v2PRoutDnsUpdCliDnsProvDynDnsTcpSocket=sr1622v2PRoutDnsUpdCliDnsProvDynDnsTcpSocket, pr1622v2PRoutQualMonUpDownLossUp=pr1622v2PRoutQualMonUpDownLossUp, pr1622v2PRoutUdpServerSessionsTableIx=pr1622v2PRoutUdpServerSessionsTableIx, er1622v2PRoutDhcpDynLeaseTime=er1622v2PRoutDhcpDynLeaseTime, er1622v2PRoutRipHoldDownTime=er1622v2PRoutRipHoldDownTime, sr1622v2PRoutDnsUpdCliSSCTable=sr1622v2PRoutDnsUpdCliSSCTable, pr1622v2PRoutRoutingTableTableIx=pr1622v2PRoutRoutingTableTableIx, er1622v2PRoutHelperProtocolsEntry=er1622v2PRoutHelperProtocolsEntry, sr1622v2PRoutRoutingTableTableIx=sr1622v2PRoutRoutingTableTableIx, er1622v2PRoutAlarmLevEntry=er1622v2PRoutAlarmLevEntry, sr1622v2PRoutPoolReservationsInterface=sr1622v2PRoutPoolReservationsInterface, sr1622v2PRoutDhcpRelayAssignedIp=sr1622v2PRoutDhcpRelayAssignedIp, ar1622v2PRoutUnBlacklistDataEntry=ar1622v2PRoutUnBlacklistDataEntry, fr1622v2PRoutAlarmE2QMonDelayOn=fr1622v2PRoutAlarmE2QMonDelayOn, er1622v2PRoutTacacsAuthServersSecret=er1622v2PRoutTacacsAuthServersSecret, ar1622v2PRoutTracertDataQueriesPerHop=ar1622v2PRoutTracertDataQueriesPerHop, er1622v2PRoutDnsSecondaryDns=er1622v2PRoutDnsSecondaryDns, pr1622v2PRoutRadiusAcctTimeOuts=pr1622v2PRoutRadiusAcctTimeOuts, sr1622v2PRoutDhcpRelayEntry=sr1622v2PRoutDhcpRelayEntry, er1622v2PRoutRoutingTable=er1622v2PRoutRoutingTable, er1622v2PRoutDefaultRouteMetric=er1622v2PRoutDefaultRouteMetric, er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOn, ar1622v2PRoutIgmpDataRepSSC=ar1622v2PRoutIgmpDataRepSSC, fr1622v2PRoutAlarmE2Entry=fr1622v2PRoutAlarmE2Entry, er1622v2PRoutR2ScrtTblTableIx=er1622v2PRoutR2ScrtTblTableIx, er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOff, sr1622v2PRoutDhcpBlacklistReason=sr1622v2PRoutDhcpBlacklistReason, r1622v2PRoutMOPropRev=r1622v2PRoutMOPropRev, pr1622v2PRoutQualMonLoggingNbrTxPckt=pr1622v2PRoutQualMonLoggingNbrTxPckt, fr1622v2PRoutAlarmE2PingActiveOn=fr1622v2PRoutAlarmE2PingActiveOn, er1622v2PRoutDhcpDynHoldTime=er1622v2PRoutDhcpDynHoldTime, er1622v2PRoutTacacsSSC=er1622v2PRoutTacacsSSC, er1622v2PRoutRadiusPpp=er1622v2PRoutRadiusPpp, er1622v2PRoutAddrPoolsPoolListNetMask=er1622v2PRoutAddrPoolsPoolListNetMask, er1622v2PRoutR2ScrtTblEntry=er1622v2PRoutR2ScrtTblEntry, er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOn, er1622v2PRoutRadiusAuthServers=er1622v2PRoutRadiusAuthServers, sr1622v2PRoutDnsServersSSCTable=sr1622v2PRoutDnsServersSSCTable, sr1622v2PRoutDhcpBlacklist=sr1622v2PRoutDhcpBlacklist, ar1622v2PRoutFreeIpAddress=ar1622v2PRoutFreeIpAddress, er1622v2PRoutTacacsAuthServersTableIx=er1622v2PRoutTacacsAuthServersTableIx, sr1622v2PRoutInterfacesSecondaryIpNetMask=sr1622v2PRoutInterfacesSecondaryIpNetMask, er1622v2PRoutSendTtlExceeded=er1622v2PRoutSendTtlExceeded, pr1622v2PRoutIpFragmentsReceivedPackets=pr1622v2PRoutIpFragmentsReceivedPackets, pr1622v2PRoutQualMonLoggingUpDownLossDelayDown=pr1622v2PRoutQualMonLoggingUpDownLossDelayDown, ar1622v2PRoutStopPing=ar1622v2PRoutStopPing, ar1622v2PRoutPingDataSourceIp=ar1622v2PRoutPingDataSourceIp, er1622v2PRoutHostsEntry=er1622v2PRoutHostsEntry, sr1622v2PRoutDnsDomainsEntry=sr1622v2PRoutDnsDomainsEntry, pr1622v2PRoutQualMonError=pr1622v2PRoutQualMonError, fr1622v2PRoutAlarmE2PingActive=fr1622v2PRoutAlarmE2PingActive, pr1622v2PRoutQualMonLoggingDate=pr1622v2PRoutQualMonLoggingDate, fr1622v2PRoutAlarmE2QMonJitterPfx=fr1622v2PRoutAlarmE2QMonJitterPfx, r1622v2PRoutMOPropEntry=r1622v2PRoutMOPropEntry, ar1622v2PRoutTracertDataResolveHosts=ar1622v2PRoutTracertDataResolveHosts, pr1622v2PRoutRadiusAuthRejects=pr1622v2PRoutRadiusAuthRejects, er1622v2PRoutRadiusAuthServersActions=er1622v2PRoutRadiusAuthServersActions, fr1622v2PRoutAlarmLevQMonDelay=fr1622v2PRoutAlarmLevQMonDelay, pr1622v2PRoutQualMonUpDownJitterUpNegMax=pr1622v2PRoutQualMonUpDownJitterUpNegMax, pr1622v2PRoutIpFragmentsExcessivelyFragPackets=pr1622v2PRoutIpFragmentsExcessivelyFragPackets, er1622v2PRoutDnsIpV6Router=er1622v2PRoutDnsIpV6Router, sr1622v2PRoutIgmpTableTableIx=sr1622v2PRoutIgmpTableTableIx, ar1622v2PRoutTracertDataIpAddress=ar1622v2PRoutTracertDataIpAddress, er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOff, pr1622v2PRoutQualMonLoggingUpDownJitterUpNegMax=pr1622v2PRoutQualMonLoggingUpDownJitterUpNegMax, pr1622v2PRoutQualMonLoggingTableIx=pr1622v2PRoutQualMonLoggingTableIx, pr1622v2PRoutRadiusAuthRequests=pr1622v2PRoutRadiusAuthRequests, er1622v2PRoutTacacsLogin=er1622v2PRoutTacacsLogin, ar1622v2PRoutPingDataIterations=ar1622v2PRoutPingDataIterations, er1622v2PRoutDhcpStatOptionsValueAscii=er1622v2PRoutDhcpStatOptionsValueAscii, sr1622v2PRoutDnsCacheHostname=sr1622v2PRoutDnsCacheHostname, sr1622v2PRoutDhcpBindingMacAddress=sr1622v2PRoutDhcpBindingMacAddress, pr1622v2PRoutQualMonLoggingUpDownDelayDownMax=pr1622v2PRoutQualMonLoggingUpDownDelayDownMax, er1622v2PRoutQualMonUdpServerPortActions=er1622v2PRoutQualMonUdpServerPortActions, pr1622v2PRoutQualMonLoggingJitterAvrg=pr1622v2PRoutQualMonLoggingJitterAvrg, er1622v2PRoutQualMonDestinationsProtocolIcmp=er1622v2PRoutQualMonDestinationsProtocolIcmp, pr1622v2PRoutQualMonLogging=pr1622v2PRoutQualMonLogging, sr1622v2PRoutAddrPoolsName=sr1622v2PRoutAddrPoolsName, er1622v2PRoutPppSecretTable=er1622v2PRoutPppSecretTable, pr1622v2PRoutRoutingTableSSCTable=pr1622v2PRoutRoutingTableSSCTable, sr1622v2PRoutDnsDomainsRcvdInterface=sr1622v2PRoutDnsDomainsRcvdInterface, ar1622v2PRoutPingDataFragment=ar1622v2PRoutPingDataFragment, er1622v2PRoutHostsIpAddress=er1622v2PRoutHostsIpAddress, er1622v2PRoutAlarmMask=er1622v2PRoutAlarmMask, er1622v2PRout=er1622v2PRout, pr1622v2PRoutQualMonUpDownLossDelayUp=pr1622v2PRoutQualMonUpDownLossDelayUp, pr1622v2PRoutRadiusAcctServer=pr1622v2PRoutRadiusAcctServer, er1622v2PRoutDnsPreference=er1622v2PRoutDnsPreference, sr1622v2PRoutDhcpBindingCheckAddress=sr1622v2PRoutDhcpBindingCheckAddress, pr1622v2PRoutQualMonLoggingUpDownJitterDownPosMax=pr1622v2PRoutQualMonLoggingUpDownJitterDownPosMax, sr1622v2PRoutDhcpRelayLeaseTime=sr1622v2PRoutDhcpRelayLeaseTime, ar1622v2PRoutTracertDataMaxHops=ar1622v2PRoutTracertDataMaxHops, pr1622v2PRoutTracertResultsHostName=pr1622v2PRoutTracertResultsHostName, sr1622v2PRoutInterfacesSecondaryIpTableIx=sr1622v2PRoutInterfacesSecondaryIpTableIx, sr1622v2PRoutRoutingTableEncap=sr1622v2PRoutRoutingTableEncap, er1622v2PRoutQualMonUdpServerPortEntry=er1622v2PRoutQualMonUdpServerPortEntry, er1622v2PRoutDhcpDynBootFile=er1622v2PRoutDhcpDynBootFile, pr1622v2PRoutQualMonLoggingUpDownJitterUpAvrg=pr1622v2PRoutQualMonLoggingUpDownJitterUpAvrg, sr1622v2PRoutDhcpBindingState=sr1622v2PRoutDhcpBindingState, pr1622v2PRoutIgmpProxyEntry=pr1622v2PRoutIgmpProxyEntry, sr1622v2PRoutDhcpRelaySSCTable=sr1622v2PRoutDhcpRelaySSCTable, fr1622v2PRoutAlarmE2QMonLossPfx=fr1622v2PRoutAlarmE2QMonLossPfx, er1622v2PRoutPppSecretTableActions=er1622v2PRoutPppSecretTableActions, pr1622v2PRoutTracertResultsRepTimAvrg=pr1622v2PRoutTracertResultsRepTimAvrg, sr1622v2PRoutDhcpStatEndRange=sr1622v2PRoutDhcpStatEndRange, er1622v2PRoutDhcpStatNameServer2=er1622v2PRoutDhcpStatNameServer2, pr1622v2PRoutTracertResultsSSCTable=pr1622v2PRoutTracertResultsSSCTable, pr1622v2PRoutTracertResultsNrTx=pr1622v2PRoutTracertResultsNrTx, er1622v2PRoutDnsUpdCliDnsProvDynDnsPassword=er1622v2PRoutDnsUpdCliDnsProvDynDnsPassword, er1622v2PRoutDhcpStatOptionsCode=er1622v2PRoutDhcpStatOptionsCode, sr1622v2PRoutInterfacesSecondaryIpEntry=sr1622v2PRoutInterfacesSecondaryIpEntry, er1622v2PRoutQualMonDestinationsTxGateway=er1622v2PRoutQualMonDestinationsTxGateway, sr1622v2PRoutPoolReservationsLocal=sr1622v2PRoutPoolReservationsLocal, er1622v2PRoutQualMonDestinationsHostName=er1622v2PRoutQualMonDestinationsHostName, er1622v2PRoutRadiusAuthServersEntry=er1622v2PRoutRadiusAuthServersEntry, sr1622v2PRoutDnsDomainsName=sr1622v2PRoutDnsDomainsName, er1622v2PRoutDnsUpdCliDnsProvDynDnsMxName=er1622v2PRoutDnsUpdCliDnsProvDynDnsMxName, er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOn, pr1622v2PRoutQualMonUpDownDelayUpMin=pr1622v2PRoutQualMonUpDownDelayUpMin, er1622v2PRoutLogDhcpSyslogMask=er1622v2PRoutLogDhcpSyslogMask, er1622v2PRoutDnsUpdCliActions=er1622v2PRoutDnsUpdCliActions, pr1622v2PRoutQualMonSourceIp=pr1622v2PRoutQualMonSourceIp, er1622v2PRoutDhcpDynBootFileOption=er1622v2PRoutDhcpDynBootFileOption, pr1622v2PRoutQualMonJitterPosMax=pr1622v2PRoutQualMonJitterPosMax, sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateReturnCode=sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateReturnCode, er1622v2PRoutTacacsAuthServers=er1622v2PRoutTacacsAuthServers, er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOn, er1622v2PRoutQualMonDestinationsActions=er1622v2PRoutQualMonDestinationsActions, ar1622v2PRoutPoolPoolName=ar1622v2PRoutPoolPoolName, pr1622v2PRoutQualMonNbrTxPckt=pr1622v2PRoutQualMonNbrTxPckt, er1622v2PRoutQualMonType=er1622v2PRoutQualMonType, er1622v2PRoutRadiusAcctServerSource=er1622v2PRoutRadiusAcctServerSource, pr1622v2PRoutRadiusAuthVrfRouter=pr1622v2PRoutRadiusAuthVrfRouter, er1622v2PRoutDhcpDynHostName=er1622v2PRoutDhcpDynHostName, ar1622v2PRoutIgmpDataRep=ar1622v2PRoutIgmpDataRep, pr1622v2PRoutTacacsAuthTimeOuts=pr1622v2PRoutTacacsAuthTimeOuts, pr1622v2PRoutQualMonUpDownJitterDownNegMax=pr1622v2PRoutQualMonUpDownJitterDownNegMax, ar1622v2PRoutStartTracert=ar1622v2PRoutStartTracert, sr1622v2PRoutDnsUpdCliDnsProvDynDnsHostName=sr1622v2PRoutDnsUpdCliDnsProvDynDnsHostName, ar1622v2PRoutStartPing=ar1622v2PRoutStartPing, er1622v2PRoutDhcpCheckAddress=er1622v2PRoutDhcpCheckAddress, er1622v2PRoutDefaultRouteInterface=er1622v2PRoutDefaultRouteInterface, pr1622v2PRoutUdpServerTableIx=pr1622v2PRoutUdpServerTableIx, ar1622v2PRoutTracertDataSSC=ar1622v2PRoutTracertDataSSC, sr1622v2PRoutDnsCacheSSCTable=sr1622v2PRoutDnsCacheSSCTable, sr1622v2PRoutDnsServersPrimaryDns=sr1622v2PRoutDnsServersPrimaryDns, pr1622v2PRoutTracertResultsNrRx=pr1622v2PRoutTracertResultsNrRx, pr1622v2PRoutPingResultsRepTimMin=pr1622v2PRoutPingResultsRepTimMin, sr1622v2PRoutDhcpStatEntry=sr1622v2PRoutDhcpStatEntry)
mibBuilder.exportSymbols("R1622v2-QUALMON", ar1622v2PRoutRequestArgumentsRouterIp=ar1622v2PRoutRequestArgumentsRouterIp, er1622v2PRoutDnsEntry=er1622v2PRoutDnsEntry, pr1622v2PRoutQualMonUpDownJitterUpPosMax=pr1622v2PRoutQualMonUpDownJitterUpPosMax, sr1622v2PRoutDhcpBindingIpAddress=sr1622v2PRoutDhcpBindingIpAddress, pr1622v2PRoutUdpServer=pr1622v2PRoutUdpServer, sr1622v2PRoutIgmpTable=sr1622v2PRoutIgmpTable, pr1622v2PRoutUdpServerSessionsSourceIpAddress=pr1622v2PRoutUdpServerSessionsSourceIpAddress, er1622v2PRoutDnsUpdCli=er1622v2PRoutDnsUpdCli, er1622v2PRoutDhcpStatOptionsValueDecimal=er1622v2PRoutDhcpStatOptionsValueDecimal, er1622v2PRoutDhcpDynEntry=er1622v2PRoutDhcpDynEntry, sr1622v2PRoutIgmpTableMembers=sr1622v2PRoutIgmpTableMembers, sr1622v2PRoutRoutingTableTimeOut=sr1622v2PRoutRoutingTableTimeOut, er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOff=er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOff, pr1622v2PRoutTracertResultsSr=pr1622v2PRoutTracertResultsSr, ar1622v2PRoutClearTracert=ar1622v2PRoutClearTracert, er1622v2PRoutDhcpStatNetbiosNS2=er1622v2PRoutDhcpStatNetbiosNS2, pr1622v2PRoutRadiusAcct=pr1622v2PRoutRadiusAcct, sr1622v2PRoutDhcpBindingInterface=sr1622v2PRoutDhcpBindingInterface, ar1622v2PRoutTracertDataIcmpTimeOut=ar1622v2PRoutTracertDataIcmpTimeOut, fr1622v2PRoutAlarmE2QMonJitterOn=fr1622v2PRoutAlarmE2QMonJitterOn, ar1622v2PRoutUnBlacklistDataMac=ar1622v2PRoutUnBlacklistDataMac, pr1622v2PRoutRadiusAcctVrfRouter=pr1622v2PRoutRadiusAcctVrfRouter, er1622v2PRoutQualMonDestinationsIdleSamples=er1622v2PRoutQualMonDestinationsIdleSamples, er1622v2PRoutDnsUpdCliName=er1622v2PRoutDnsUpdCliName, sr1622v2PRoutInterfacesMask=sr1622v2PRoutInterfacesMask, ar1622v2PRoutIgmpDataLeave=ar1622v2PRoutIgmpDataLeave, ar1622v2PRoutIgmpDataRepInterfaces=ar1622v2PRoutIgmpDataRepInterfaces, er1622v2PRoutDhcpDynTftpServerOption=er1622v2PRoutDhcpDynTftpServerOption, sr1622v2PRoutRoutingTableMetric=sr1622v2PRoutRoutingTableMetric, sr1622v2PRoutInterfacesSSCTable=sr1622v2PRoutInterfacesSSCTable, er1622v2PRoutDhcpDynTftpServer=er1622v2PRoutDhcpDynTftpServer, er1622v2PRoutDhcpStatBootFile=er1622v2PRoutDhcpStatBootFile, er1622v2PRoutMulticastRouting=er1622v2PRoutMulticastRouting, er1622v2PRoutRoutingTableActions=er1622v2PRoutRoutingTableActions, er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOff, er1622v2PRoutDhcpDynSSCTable=er1622v2PRoutDhcpDynSSCTable, er1622v2PRoutQualMonDestinationsDelayAlarmSamples=er1622v2PRoutQualMonDestinationsDelayAlarmSamples, er1622v2PRoutQualMonDestinationsPriority=er1622v2PRoutQualMonDestinationsPriority, er1622v2PRoutRoutingTableProxyArp=er1622v2PRoutRoutingTableProxyArp, er1622v2PRoutDhcpStatTftpServer=er1622v2PRoutDhcpStatTftpServer, er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayAvrgOn, er1622v2PRoutDnsUpdCliSSCTable=er1622v2PRoutDnsUpdCliSSCTable, ar1622v2PRoutAddr=ar1622v2PRoutAddr, sr1622v2PRoutPoolReservationsTableIx=sr1622v2PRoutPoolReservationsTableIx, pr1622v2PRoutQualMonUpDownJitterUp=pr1622v2PRoutQualMonUpDownJitterUp, pr1622v2PRoutQualMonLoggingUpDownDelayDownMin=pr1622v2PRoutQualMonLoggingUpDownDelayDownMin, er1622v2PRoutSendPortUnreachable=er1622v2PRoutSendPortUnreachable, pr1622v2PRoutQualMonLoggingUpDownLossDelayUp=pr1622v2PRoutQualMonLoggingUpDownLossDelayUp, sr1622v2PRoutDhcpBlacklistSSCTable=sr1622v2PRoutDhcpBlacklistSSCTable, pr1622v2PRoutQualMonLoggingDelayMax=pr1622v2PRoutQualMonLoggingDelayMax, sr1622v2PRoutRoutingTableStatus=sr1622v2PRoutRoutingTableStatus, er1622v2PRoutRadiusAcctServerAddress=er1622v2PRoutRadiusAcctServerAddress, er1622v2PRoutDnsUpdCliEntry=er1622v2PRoutDnsUpdCliEntry, sr1622v2PRoutInterfacesAddress=sr1622v2PRoutInterfacesAddress, pr1622v2PRoutTacacsAuthAccepts=pr1622v2PRoutTacacsAuthAccepts, PYSNMP_MODULE_ID=r1622Rootv2, er1622v2PRoutRadiusSSC=er1622v2PRoutRadiusSSC, er1622v2PRoutDhcpDynOptionsValueAscii=er1622v2PRoutDhcpDynOptionsValueAscii, pr1622v2PRoutUdpServerSessionsLastActivityTime=pr1622v2PRoutUdpServerSessionsLastActivityTime, er1622v2PRoutTacacsAuthServersEncSecret=er1622v2PRoutTacacsAuthServersEncSecret, ar1622v2PRoutPingDataEntry=ar1622v2PRoutPingDataEntry, er1622v2PRoutTacacsAuthServersAddress=er1622v2PRoutTacacsAuthServersAddress, er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOff=er1622v2PRoutQualMonDestinationsLossAlarmAlarmUpOff, pr1622v2PRoutQualMonUpDownLossDelayDown=pr1622v2PRoutQualMonUpDownLossDelayDown, er1622v2PRoutRadiusAuthServersSource=er1622v2PRoutRadiusAuthServersSource, er1622v2PRoutDhcpDynNameServer2=er1622v2PRoutDhcpDynNameServer2, ar1622v2PRoutPingDataHostName=ar1622v2PRoutPingDataHostName, er1622v2PRoutHostsSSCTable=er1622v2PRoutHostsSSCTable, er1622v2PRoutAlarmLevSSC=er1622v2PRoutAlarmLevSSC, sr1622v2PRoutDhcpStatInterface=sr1622v2PRoutDhcpStatInterface, er1622v2PRoutDhcpStatActions=er1622v2PRoutDhcpStatActions, pr1622v2PRoutQualMonDelayMin=pr1622v2PRoutQualMonDelayMin, er1622v2PRoutAddrPoolsActions=er1622v2PRoutAddrPoolsActions, er1622v2PRoutRadiusEntry=er1622v2PRoutRadiusEntry, sr1622v2PRoutDnsServers=sr1622v2PRoutDnsServers, er1622v2PRoutPppSecretTableSecret=er1622v2PRoutPppSecretTableSecret, ar1622v2PRoutInterfaceName=ar1622v2PRoutInterfaceName, sr1622v2PRoutDhcpRelayMac=sr1622v2PRoutDhcpRelayMac, pr1622v2PRoutQualMonLoggingUpDownDelayUpAvrg=pr1622v2PRoutQualMonLoggingUpDownDelayUpAvrg, pr1622v2PRoutTacacsAuthFails=pr1622v2PRoutTacacsAuthFails, sr1622v2PRoutDhcpBindingSSCTable=sr1622v2PRoutDhcpBindingSSCTable, er1622v2PRoutQualMonDestinationsProtocolUdpEcho=er1622v2PRoutQualMonDestinationsProtocolUdpEcho, sr1622v2PRoutRoutingTableType=sr1622v2PRoutRoutingTableType, er1622v2PRoutDnsPrimaryDns=er1622v2PRoutDnsPrimaryDns, er1622v2PRoutQualMonDestinationsInterval=er1622v2PRoutQualMonDestinationsInterval, er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOn=er1622v2PRoutQualMonDestinationsLossAlarmAlarmDownOn, er1622v2PRoutHostsHostname=er1622v2PRoutHostsHostname, er1622v2PRoutDhcpDynNetbiosNS=er1622v2PRoutDhcpDynNetbiosNS, er1622v2PRoutAddrPoolsPoolIntervalFrom=er1622v2PRoutAddrPoolsPoolIntervalFrom, er1622v2PRoutDnsUpdCliDnsProvDynDnsMode=er1622v2PRoutDnsUpdCliDnsProvDynDnsMode, ar1622v2PRoutIgmpDataLeaveEntry=ar1622v2PRoutIgmpDataLeaveEntry, pr1622v2PRoutPingResults=pr1622v2PRoutPingResults, pr1622v2PRoutQualMonUpDownDelayDownMin=pr1622v2PRoutQualMonUpDownDelayDownMin, er1622v2PRoutRadiusRetries=er1622v2PRoutRadiusRetries, sr1622v2PRoutRoutingTable=sr1622v2PRoutRoutingTable, pr1622v2PRoutQualMon=pr1622v2PRoutQualMon, r1622v2PRoutMOProp=r1622v2PRoutMOProp, fr1622v2PRoutAlarmE2QMonLossOff=fr1622v2PRoutAlarmE2QMonLossOff, pr1622v2PRoutQualMonLastError=pr1622v2PRoutQualMonLastError, er1622v2PRoutRoutingTableEntry=er1622v2PRoutRoutingTableEntry, er1622v2PRoutDnsUpdCliDnsProvDynDnsTcpPort=er1622v2PRoutDnsUpdCliDnsProvDynDnsTcpPort, er1622v2PRoutQualMonMonitor=er1622v2PRoutQualMonMonitor, fr1622v2PRoutAlarmLevPingActive=fr1622v2PRoutAlarmLevPingActive, sr1622v2PRoutDnsUpdCliEntry=sr1622v2PRoutDnsUpdCliEntry, er1622v2PRoutQualMonDestinationsTimeOut=er1622v2PRoutQualMonDestinationsTimeOut, er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOff, er1622v2PRoutRadiusAuthServersSecret=er1622v2PRoutRadiusAuthServersSecret, pr1622v2PRoutQualMonJitterNegMax=pr1622v2PRoutQualMonJitterNegMax, fr1622v2PRoutAlarmE2QMonDelayPfx=fr1622v2PRoutAlarmE2QMonDelayPfx, ar1622v2PRoutUnBlacklist=ar1622v2PRoutUnBlacklist, fr1622v2PRoutAlarm=fr1622v2PRoutAlarm, er1622v2PRoutRoutingTableMask=er1622v2PRoutRoutingTableMask, er1622v2PRoutDhcpDyn=er1622v2PRoutDhcpDyn, sr1622v2PRoutRoutingTableSSCTable=sr1622v2PRoutRoutingTableSSCTable, er1622v2PRoutDhcpDynOptionsEntry=er1622v2PRoutDhcpDynOptionsEntry, pr1622v2PRoutPingResultsLastError=pr1622v2PRoutPingResultsLastError, sr1622v2PRoutDnsCacheEntry=sr1622v2PRoutDnsCacheEntry, er1622v2PRoutDefaultRouteSSC=er1622v2PRoutDefaultRouteSSC, ar1622v2PRoutPingDataTos=ar1622v2PRoutPingDataTos, er1622v2PRoutRadius=er1622v2PRoutRadius, pr1622v2PRoutPingResultsRepTimAvrg=pr1622v2PRoutPingResultsRepTimAvrg, er1622v2PRoutDhcpStatInterface=er1622v2PRoutDhcpStatInterface, er1622v2PRoutRadiusAcctServerEncModeSecret=er1622v2PRoutRadiusAcctServerEncModeSecret, fr1622v2PRoutAlarmSSC=fr1622v2PRoutAlarmSSC, er1622v2PRoutTacacs=er1622v2PRoutTacacs, er1622v2PRoutQualMonDestinationsLossAlarmAlarmOff=er1622v2PRoutQualMonDestinationsLossAlarmAlarmOff, ar1622v2PRout=ar1622v2PRout, fr1622v2PRoutAlarmCurrent=fr1622v2PRoutAlarmCurrent, fr1622v2PRoutAlarmMask=fr1622v2PRoutAlarmMask, fr1622v2PRoutAlarmE2QMonDelayOff=fr1622v2PRoutAlarmE2QMonDelayOff, er1622v2PRoutTacacsAuthServersTimeOut=er1622v2PRoutTacacsAuthServersTimeOut, sr1622v2PRoutPoolReservationsNetMask=sr1622v2PRoutPoolReservationsNetMask, er1622v2PRoutDhcpStatSSCTable=er1622v2PRoutDhcpStatSSCTable, pr1622v2PRoutQualMonLoggingUpDownJitterUpPosMax=pr1622v2PRoutQualMonLoggingUpDownJitterUpPosMax, sr1622v2PRoutDnsCacheTableIx=sr1622v2PRoutDnsCacheTableIx, pr1622v2PRoutQualMonAlarm=pr1622v2PRoutQualMonAlarm, ar1622v2PRoutClearCounters=ar1622v2PRoutClearCounters, pr1622v2PRoutTacacsAuthRequests=pr1622v2PRoutTacacsAuthRequests, er1622v2PRoutDhcpDynActions=er1622v2PRoutDhcpDynActions, sr1622v2PRoutPoolReservationsType=sr1622v2PRoutPoolReservationsType, er1622v2PRoutDhcpDynDomainName=er1622v2PRoutDhcpDynDomainName, er1622v2PRoutDnsUpdCliTableIx=er1622v2PRoutDnsUpdCliTableIx, pr1622v2PRoutPingResultsNbrRxPckt=pr1622v2PRoutPingResultsNbrRxPckt, er1622v2PRoutQualMonUdpServerPortTos=er1622v2PRoutQualMonUdpServerPortTos, pr1622v2PRoutUdpServerSSCTable=pr1622v2PRoutUdpServerSSCTable, pr1622v2PRoutPingResultsEntry=pr1622v2PRoutPingResultsEntry, er1622v2PRoutQualMonDestinationsTableIx=er1622v2PRoutQualMonDestinationsTableIx, er1622v2PRoutAlarmLevQMonJitter=er1622v2PRoutAlarmLevQMonJitter, er1622v2PRoutDhcpDynOptionsActions=er1622v2PRoutDhcpDynOptionsActions, pr1622v2PRoutIgmpProxyInIgmp=pr1622v2PRoutIgmpProxyInIgmp, ar1622v2PRoutRequestArgumentsEntry=ar1622v2PRoutRequestArgumentsEntry, pr1622v2PRoutIpFragmentsReassembledFrames=pr1622v2PRoutIpFragmentsReassembledFrames, pr1622v2PRoutIpFragmentsReceivedFrames=pr1622v2PRoutIpFragmentsReceivedFrames, ar1622v2PRoutTracertData=ar1622v2PRoutTracertData, er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOff, pr1622v2PRoutIpFragmentsEntry=pr1622v2PRoutIpFragmentsEntry, er1622v2PRoutDhcpDynNetbiosNS2=er1622v2PRoutDhcpDynNetbiosNS2, pr1622v2PRoutRadiusAuthTableIx=pr1622v2PRoutRadiusAuthTableIx, er1622v2PRoutDhcpStatIpAddress=er1622v2PRoutDhcpStatIpAddress, er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOn, sr1622v2PRoutPoolReservations=sr1622v2PRoutPoolReservations, er1622v2PRoutQualMonDestinationsLength=er1622v2PRoutQualMonDestinationsLength, er1622v2PRoutDnsUpdCliDnsProvDynDnsSystem=er1622v2PRoutDnsUpdCliDnsProvDynDnsSystem, pr1622v2PRoutRoutingTableEntry=pr1622v2PRoutRoutingTableEntry, sr1622v2PRoutDhcpStatStartRange=sr1622v2PRoutDhcpStatStartRange, ar1622v2PRoutTracertDataTos=ar1622v2PRoutTracertDataTos, sr1622v2PRoutDhcpRelayTableIx=sr1622v2PRoutDhcpRelayTableIx, pr1622v2PRoutRadiusAcctSSC=pr1622v2PRoutRadiusAcctSSC, pr1622v2PRoutTracertResultsComment=pr1622v2PRoutTracertResultsComment, sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateServer=sr1622v2PRoutDnsUpdCliDnsProvDynDnsUpdateServer, er1622v2PRoutAddrPoolsPoolListTableIx=er1622v2PRoutAddrPoolsPoolListTableIx, ar1622v2PRoutClearDnsCache=ar1622v2PRoutClearDnsCache, er1622v2PRoutTacacsAuthServersEncModeSecret=er1622v2PRoutTacacsAuthServersEncModeSecret, ar1622v2PRoutPingDataTimeOut=ar1622v2PRoutPingDataTimeOut, er1622v2PRoutDhcpDynIpcpSubnet=er1622v2PRoutDhcpDynIpcpSubnet, sr1622v2PRoutRadiusEntry=sr1622v2PRoutRadiusEntry, fr1622v2PRoutAlarmE2=fr1622v2PRoutAlarmE2, ar1622v2PRoutTracertDataStartTtl=ar1622v2PRoutTracertDataStartTtl, er1622v2PRoutDhcpDynInterface=er1622v2PRoutDhcpDynInterface, er1622v2PRoutDhcpCustomVendorId=er1622v2PRoutDhcpCustomVendorId, fr1622v2PRoutAlarmLevQMonJitter=fr1622v2PRoutAlarmLevQMonJitter, er1622v2PRoutDns=er1622v2PRoutDns, pr1622v2PRoutTacacsAuth=pr1622v2PRoutTacacsAuth, er1622v2PRoutDhcpStatDnsSetting=er1622v2PRoutDhcpStatDnsSetting, ar1622v2PRoutRequestArgumentsOutIf=ar1622v2PRoutRequestArgumentsOutIf, ar1622v2PRoutUnBlacklistData=ar1622v2PRoutUnBlacklistData, er1622v2PRoutRadiusAcctServerSecret=er1622v2PRoutRadiusAcctServerSecret, pr1622v2PRoutUdpServerSessionsSourcePort=pr1622v2PRoutUdpServerSessionsSourcePort, pr1622v2PRoutUdpServerDestinationPort=pr1622v2PRoutUdpServerDestinationPort, pr1622v2PRoutRoutingTableNetwork=pr1622v2PRoutRoutingTableNetwork, er1622v2PRoutPppSecretTableName=er1622v2PRoutPppSecretTableName, pr1622v2PRoutQualMonLoggingUpDownJitterDownAvrg=pr1622v2PRoutQualMonLoggingUpDownJitterDownAvrg, pr1622v2PRoutQualMonLoggingEntry=pr1622v2PRoutQualMonLoggingEntry, pr1622v2PRoutUdpServerSessions=pr1622v2PRoutUdpServerSessions, er1622v2PRoutHelperProtocolsActions=er1622v2PRoutHelperProtocolsActions, pr1622v2PRoutQualMonLoggingLoss=pr1622v2PRoutQualMonLoggingLoss, sr1622v2PRoutRadiusAuthServer=sr1622v2PRoutRadiusAuthServer, pr1622v2PRoutTracertResultsRepTimMin=pr1622v2PRoutTracertResultsRepTimMin, er1622v2PRoutR2ScrtTbl=er1622v2PRoutR2ScrtTbl, fr1622v2PRoutAlarmE2PingActiveOff=fr1622v2PRoutAlarmE2PingActiveOff, pr1622v2PRoutRadiusAcctDroppedPackets=pr1622v2PRoutRadiusAcctDroppedPackets, sr1622v2PRoutRoutingTableNetwork=sr1622v2PRoutRoutingTableNetwork, pr1622v2PRoutQualMonLoggingDelayAvrg=pr1622v2PRoutQualMonLoggingDelayAvrg, er1622v2PRoutRoutingTablePref=er1622v2PRoutRoutingTablePref, er1622v2PRoutQualMonDestinationsName=er1622v2PRoutQualMonDestinationsName, er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpMaxOff, er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownAvrgOn, sr1622v2PRoutDhcpRelayServerIp=sr1622v2PRoutDhcpRelayServerIp, pr1622v2PRoutTacacsAuthAuthenticationReplyPkts=pr1622v2PRoutTacacsAuthAuthenticationReplyPkts, er1622v2PRoutQualMonEntry=er1622v2PRoutQualMonEntry, er1622v2PRoutRoutingTableIf=er1622v2PRoutRoutingTableIf, er1622v2PRoutDhcpStatTftpServerOption=er1622v2PRoutDhcpStatTftpServerOption, pr1622v2PRoutQualMonLoggingUpDownDelayUpMin=pr1622v2PRoutQualMonLoggingUpDownDelayUpMin, sr1622v2PRoutDhcpRelayDhcpStatus=sr1622v2PRoutDhcpRelayDhcpStatus, sr1622v2PRoutIgmpTableIf=sr1622v2PRoutIgmpTableIf, er1622v2PRoutR2ScrtTblActions=er1622v2PRoutR2ScrtTblActions, er1622v2PRoutRipNeighborsSSCTable=er1622v2PRoutRipNeighborsSSCTable, sr1622v2PRoutDhcpBindingHostName=sr1622v2PRoutDhcpBindingHostName, er1622v2PRoutDhcpDynOptionsValueIpAddress=er1622v2PRoutDhcpDynOptionsValueIpAddress, er1622v2PRoutAddrPoolsSSCTable=er1622v2PRoutAddrPoolsSSCTable, pr1622v2PRoutTracertResults=pr1622v2PRoutTracertResults, er1622v2PRoutSysSecret=er1622v2PRoutSysSecret, pr1622v2PRoutQualMonLoggingUpDownDelayUpMax=pr1622v2PRoutQualMonLoggingUpDownDelayUpMax, ar1622v2PRoutTakeIpAddress=ar1622v2PRoutTakeIpAddress, er1622v2PRoutQualMonUdpServerPortPriority=er1622v2PRoutQualMonUdpServerPortPriority, ar1622v2PRoutIgmpDataLeaveInterfaces=ar1622v2PRoutIgmpDataLeaveInterfaces, pr1622v2PRoutQualMonUpDownDelayUpMax=pr1622v2PRoutQualMonUpDownDelayUpMax, pr1622v2PRoutQualMonDelay=pr1622v2PRoutQualMonDelay, ar1622v2PRoutPoolEntry=ar1622v2PRoutPoolEntry, er1622v2PRoutDnsUpdCliDnsProvDynDnsHostNameFqdn=er1622v2PRoutDnsUpdCliDnsProvDynDnsHostNameFqdn, pr1622v2PRoutTracertResultsIpAddress=pr1622v2PRoutTracertResultsIpAddress, ar1622v2PRoutSendIgmpLeave=ar1622v2PRoutSendIgmpLeave, sr1622v2PRoutDnsCacheTtl=sr1622v2PRoutDnsCacheTtl, er1622v2PRoutAddrPoolsPoolListRemote=er1622v2PRoutAddrPoolsPoolListRemote, pr1622v2PRoutTacacsAuthAuthenticationStartPkts=pr1622v2PRoutTacacsAuthAuthenticationStartPkts, er1622v2PRoutR2ScrtTblSSCTable=er1622v2PRoutR2ScrtTblSSCTable, er1622v2PRoutDnsUpdCliDnsProvDynDnsMxBackup=er1622v2PRoutDnsUpdCliDnsProvDynDnsMxBackup, sr1622v2PRoutAddrPoolsAvailAddresses=sr1622v2PRoutAddrPoolsAvailAddresses, sr1622v2PRoutRoutingTablePref=sr1622v2PRoutRoutingTablePref, pr1622v2PRoutRadiusAuthBadAuth=pr1622v2PRoutRadiusAuthBadAuth, er1622v2PRoutDnsUpdCliDnsProvDynDnsInterface=er1622v2PRoutDnsUpdCliDnsProvDynDnsInterface, er1622v2PRoutQualMonDestinationsSource=er1622v2PRoutQualMonDestinationsSource, er1622v2PRoutQualMonDestinationsLoggingDepth=er1622v2PRoutQualMonDestinationsLoggingDepth, pr1622v2PRoutUdpServerSessionsFirstActivityTime=pr1622v2PRoutUdpServerSessionsFirstActivityTime, sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateIpAddress=sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateIpAddress, pr1622v2PRoutRadiusAuthEntry=pr1622v2PRoutRadiusAuthEntry, ar1622v2PRoutQmOnDemand=ar1622v2PRoutQmOnDemand, ar1622v2PRoutUnBlacklistDataStopIp=ar1622v2PRoutUnBlacklistDataStopIp, sr1622v2PRoutDnsServersPreference=sr1622v2PRoutDnsServersPreference, fr1622v2PRoutAlarmE2QMonLossOn=fr1622v2PRoutAlarmE2QMonLossOn, pr1622v2PRoutUdpServerActiveSessions=pr1622v2PRoutUdpServerActiveSessions, pr1622v2PRoutQualMonUpDownDelayDownMax=pr1622v2PRoutQualMonUpDownDelayDownMax, ar1622v2PRoutActionName=ar1622v2PRoutActionName, ar1622v2PRoutForceDnsUpdate=ar1622v2PRoutForceDnsUpdate)
mibBuilder.exportSymbols("R1622v2-QUALMON", pr1622v2PRoutIgmpProxyInData=pr1622v2PRoutIgmpProxyInData, pr1622v2PRoutUdpServerSessionsEntry=pr1622v2PRoutUdpServerSessionsEntry, sr1622v2PRout=sr1622v2PRout, pr1622v2PRoutQualMonUpDownJitterDownAvrg=pr1622v2PRoutQualMonUpDownJitterDownAvrg, pr1622v2PRoutRoutingTable=pr1622v2PRoutRoutingTable, er1622v2PRoutQualMonDestinationsLossAlarmAlarmOn=er1622v2PRoutQualMonDestinationsLossAlarmAlarmOn, sr1622v2PRoutInterfacesIfDescr=sr1622v2PRoutInterfacesIfDescr, sr1622v2PRoutRoutingTableGateway=sr1622v2PRoutRoutingTableGateway, er1622v2PRoutLogEntry=er1622v2PRoutLogEntry, pr1622v2PRoutTracertResultsTableIx=pr1622v2PRoutTracertResultsTableIx, pr1622v2PRoutPingResultsSSC=pr1622v2PRoutPingResultsSSC, ar1622v2PRoutPool=ar1622v2PRoutPool, er1622v2PRoutHelperProtocols=er1622v2PRoutHelperProtocols, er1622v2PRoutDnsCacheSize=er1622v2PRoutDnsCacheSize, ar1622v2PRoutDnsUpdateName=ar1622v2PRoutDnsUpdateName, pr1622v2PRoutTacacsAuthDrops=pr1622v2PRoutTacacsAuthDrops, sr1622v2PRoutDnsUpdCliTableIx=sr1622v2PRoutDnsUpdCliTableIx, pr1622v2PRoutQualMonDelayMax=pr1622v2PRoutQualMonDelayMax, er1622v2PRoutDhcpStatOptions=er1622v2PRoutDhcpStatOptions, er1622v2PRoutDhcpStatBootFileOption=er1622v2PRoutDhcpStatBootFileOption, sr1622v2PRoutIgmpTableEntry=sr1622v2PRoutIgmpTableEntry, er1622v2PRoutRoutingTableGateway=er1622v2PRoutRoutingTableGateway, er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayMaxOff, pr1622v2PRoutQualMonLoggingNbrRxPckt=pr1622v2PRoutQualMonLoggingNbrRxPckt, pr1622v2PRoutQualMonUpDownLossDown=pr1622v2PRoutQualMonUpDownLossDown, ar1622v2PRoutPingDataDataLength=ar1622v2PRoutPingDataDataLength, er1622v2PRoutDnsSSC=er1622v2PRoutDnsSSC, er1622v2PRoutAddrPoolsTableIx=er1622v2PRoutAddrPoolsTableIx, pr1622v2PRoutUdpServerSessionsNbrPckt=pr1622v2PRoutUdpServerSessionsNbrPckt, er1622v2PRoutQualMonDestinationsTos=er1622v2PRoutQualMonDestinationsTos, er1622v2PRoutQualMonDestinationsEntry=er1622v2PRoutQualMonDestinationsEntry, er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterDownMaxOn, pr1622v2PRoutIpFragmentsPendingFrames=pr1622v2PRoutIpFragmentsPendingFrames, er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownMaxOff, er1622v2PRoutAlarmLevQMonLoss=er1622v2PRoutAlarmLevQMonLoss, sr1622v2PRoutInterfacesIfOperStatus=sr1622v2PRoutInterfacesIfOperStatus, ar1622v2PRoutRequestArguments=ar1622v2PRoutRequestArguments, er1622v2PRoutTacacsEntry=er1622v2PRoutTacacsEntry, sr1622v2PRoutAddrPoolsTableIx=sr1622v2PRoutAddrPoolsTableIx, er1622v2PRoutQualMonDestinationsAdminStatus=er1622v2PRoutQualMonDestinationsAdminStatus, er1622v2PRoutDhcpDynGateway=er1622v2PRoutDhcpDynGateway, fr1622v2PRoutAlarmEntry=fr1622v2PRoutAlarmEntry, sr1622v2PRoutDhcpBlacklistTableIx=sr1622v2PRoutDhcpBlacklistTableIx, ar1622v2PRoutActionEntry=ar1622v2PRoutActionEntry, er1622v2PRoutDefaultRouteGateway=er1622v2PRoutDefaultRouteGateway, pr1622v2PRoutTacacsAuthEntry=pr1622v2PRoutTacacsAuthEntry, pr1622v2PRoutRoutingTableGateway=pr1622v2PRoutRoutingTableGateway, pr1622v2PRoutUdpServerNbrPckt=pr1622v2PRoutUdpServerNbrPckt, ar1622v2PRoutAction=ar1622v2PRoutAction, sr1622v2PRoutDhcpBindingTableIx=sr1622v2PRoutDhcpBindingTableIx, sr1622v2PRoutDnsDomainsTableIx=sr1622v2PRoutDnsDomainsTableIx, pr1622v2PRoutTacacsAuthAuthorizationResponsePkts=pr1622v2PRoutTacacsAuthAuthorizationResponsePkts, er1622v2PRoutRipNeighbors=er1622v2PRoutRipNeighbors, ar1622v2PRoutRequestArgumentsSSC=ar1622v2PRoutRequestArgumentsSSC, er1622v2PRoutDhcpDynOptionsValueDecimal=er1622v2PRoutDhcpDynOptionsValueDecimal, ar1622v2PRoutSendRipReqAction=ar1622v2PRoutSendRipReqAction, er1622v2PRoutAddrPoolsPoolList=er1622v2PRoutAddrPoolsPoolList, er1622v2PRoutLog=er1622v2PRoutLog, sr1622v2PRoutRadiusPendingRequests=sr1622v2PRoutRadiusPendingRequests, pr1622v2PRoutQualMonJitter=pr1622v2PRoutQualMonJitter, pr1622v2PRoutIpFragmentsExpiredFrames=pr1622v2PRoutIpFragmentsExpiredFrames, er1622v2PRoutDhcpDynDnsSetting=er1622v2PRoutDhcpDynDnsSetting, er1622v2PRoutQualMonSSC=er1622v2PRoutQualMonSSC, er1622v2PRoutDhcpDynTableIx=er1622v2PRoutDhcpDynTableIx, pr1622v2PRoutRadiusAuthServer=pr1622v2PRoutRadiusAuthServer, sr1622v2PRoutDhcpBlacklistMacAddress=sr1622v2PRoutDhcpBlacklistMacAddress, pr1622v2PRoutRadiusAuthDroppedPackets=pr1622v2PRoutRadiusAuthDroppedPackets, sr1622v2PRoutDnsCacheMatches=sr1622v2PRoutDnsCacheMatches, er1622v2PRoutQualMonDestinationsProtocolUdpServerPort=er1622v2PRoutQualMonDestinationsProtocolUdpServerPort, pr1622v2PRoutQualMonSSCTable=pr1622v2PRoutQualMonSSCTable, sr1622v2PRoutRoutingTableIf=sr1622v2PRoutRoutingTableIf, pr1622v2PRoutRadiusAcctEntry=pr1622v2PRoutRadiusAcctEntry, er1622v2PRoutQualMonDestinationsAlarmMask=er1622v2PRoutQualMonDestinationsAlarmMask, pr1622v2PRoutQualMonLoggingError=pr1622v2PRoutQualMonLoggingError, er1622v2PRoutQualMonDestinationsLogging=er1622v2PRoutQualMonDestinationsLogging, er1622v2PRoutHostsActions=er1622v2PRoutHostsActions, er1622v2PRoutQualMonDestinationsLossAlarmSamples=er1622v2PRoutQualMonDestinationsLossAlarmSamples, er1622v2PRoutDhcpDynOptionsCode=er1622v2PRoutDhcpDynOptionsCode, sr1622v2PRoutPoolReservationsName=sr1622v2PRoutPoolReservationsName, er1622v2PRoutRadiusAcctUpdate=er1622v2PRoutRadiusAcctUpdate, sr1622v2PRoutDhcpStat=sr1622v2PRoutDhcpStat, r1622Rootv2=r1622Rootv2, sr1622v2PRoutPoolReservationsSSCTable=sr1622v2PRoutPoolReservationsSSCTable, sr1622v2PRoutAddrPoolsType=sr1622v2PRoutAddrPoolsType, er1622v2PRoutDefaultRouteEntry=er1622v2PRoutDefaultRouteEntry, er1622v2PRoutR2ScrtTblSecret=er1622v2PRoutR2ScrtTblSecret, er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpMaxOff, sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateTimePassed=sr1622v2PRoutDnsUpdCliDnsProvDynDnsLastUpdateTimePassed, pr1622v2PRoutQualMonLoggingUpDownLossUp=pr1622v2PRoutQualMonLoggingUpDownLossUp, pr1622v2PRoutPingResultsIpAddr=pr1622v2PRoutPingResultsIpAddr, pr1622v2PRoutQualMonHostName=pr1622v2PRoutQualMonHostName, er1622v2PRoutRadiusAuthServersEncSecret=er1622v2PRoutRadiusAuthServersEncSecret, er1622v2PRoutDhcpStatTableIx=er1622v2PRoutDhcpStatTableIx, pr1622v2PRoutRadiusAuth=pr1622v2PRoutRadiusAuth, er1622v2PRoutDhcpDynOptions=er1622v2PRoutDhcpDynOptions, er1622v2PRoutDhcpStatMacAddress=er1622v2PRoutDhcpStatMacAddress, sr1622v2PRoutDnsServersRcvdInterface=sr1622v2PRoutDnsServersRcvdInterface, er1622v2PRoutRoutingTableMetric=er1622v2PRoutRoutingTableMetric, er1622v2PRoutRipNeighborsTableIx=er1622v2PRoutRipNeighborsTableIx, sr1622v2PRoutRadiusSSC=sr1622v2PRoutRadiusSSC, pr1622v2PRoutTacacsAuthAuthenticationContinuePkts=pr1622v2PRoutTacacsAuthAuthenticationContinuePkts, sr1622v2PRoutIgmpTableSSCTable=sr1622v2PRoutIgmpTableSSCTable, ar1622v2PRoutIgmpDataRepIpAddress=ar1622v2PRoutIgmpDataRepIpAddress, er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterMaxOn, ar1622v2PRoutStopTracert=ar1622v2PRoutStopTracert, sr1622v2PRoutInterfaces=sr1622v2PRoutInterfaces, pr1622v2PRoutUdpServerEntry=pr1622v2PRoutUdpServerEntry, ar1622v2PRoutPingDataIpAddress=ar1622v2PRoutPingDataIpAddress, ar1622v2PRoutTracertDataSourceIp=ar1622v2PRoutTracertDataSourceIp, pr1622v2PRoutTacacsAuthPort=pr1622v2PRoutTacacsAuthPort, er1622v2PRoutAddrPoolsPoolListActions=er1622v2PRoutAddrPoolsPoolListActions, pr1622v2PRoutRoutingTableUses=pr1622v2PRoutRoutingTableUses, er1622v2PRoutRoutingProtocol=er1622v2PRoutRoutingProtocol, sr1622v2PRoutRadius=sr1622v2PRoutRadius, pr1622v2PRoutRoutingTableIf=pr1622v2PRoutRoutingTableIf, pr1622v2PRoutQualMonIpAddress=pr1622v2PRoutQualMonIpAddress, er1622v2PRoutRadiusLogin=er1622v2PRoutRadiusLogin, ar1622v2PRoutPingDataTtl=ar1622v2PRoutPingDataTtl, er1622v2PRoutRipUpInt=er1622v2PRoutRipUpInt, sr1622v2PRoutInterfacesSecondaryIp=sr1622v2PRoutInterfacesSecondaryIp, er1622v2PRoutRadiusAuthServersAddress=er1622v2PRoutRadiusAuthServersAddress, er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayDownAvrgOff, er1622v2PRoutDhcpStatOptionsValueIpAddress=er1622v2PRoutDhcpStatOptionsValueIpAddress, pr1622v2PRoutPingResultsNbrTxPckt=pr1622v2PRoutPingResultsNbrTxPckt, pr1622v2PRoutTacacsAuthAuthorizationRequestPkts=pr1622v2PRoutTacacsAuthAuthorizationRequestPkts, ar1622v2PRoutPoolSSC=ar1622v2PRoutPoolSSC, sr1622v2PRoutDhcpRelaySourceIntf=sr1622v2PRoutDhcpRelaySourceIntf, er1622v2PRoutDhcpStatHostName=er1622v2PRoutDhcpStatHostName, er1622v2PRoutQualMonDestinationsTxInterface=er1622v2PRoutQualMonDestinationsTxInterface, pr1622v2PRoutRadiusAcctResponses=pr1622v2PRoutRadiusAcctResponses, ar1622v2PRoutPingData=ar1622v2PRoutPingData, sr1622v2PRoutAddrPoolsEntry=sr1622v2PRoutAddrPoolsEntry, pr1622v2PRoutTacacsAuthVrfRouter=pr1622v2PRoutTacacsAuthVrfRouter, fr1622v2PRoutAlarmLevQMonLoss=fr1622v2PRoutAlarmLevQMonLoss, ar1622v2PRoutRestartDhcpClient=ar1622v2PRoutRestartDhcpClient, pr1622v2PRoutIpFragments=pr1622v2PRoutIpFragments, sr1622v2PRoutDhcpStatTableIx=sr1622v2PRoutDhcpStatTableIx, pr1622v2PRoutQualMonUpDownJitterUpAvrg=pr1622v2PRoutQualMonUpDownJitterUpAvrg, pr1622v2PRoutQualMonLoggingJitterPosMax=pr1622v2PRoutQualMonLoggingJitterPosMax, pr1622v2PRoutTracertResultsEntry=pr1622v2PRoutTracertResultsEntry, er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayMinMaxOff, pr1622v2PRoutRadiusAcctRequests=pr1622v2PRoutRadiusAcctRequests, pr1622v2PRoutTracertResultsRepTimMax=pr1622v2PRoutTracertResultsRepTimMax, er1622v2PRoutRoutingTableTimeWindow=er1622v2PRoutRoutingTableTimeWindow, er1622v2PRoutDhcpDynMask=er1622v2PRoutDhcpDynMask, sr1622v2PRoutDhcpBindingLeaseTime=sr1622v2PRoutDhcpBindingLeaseTime, er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOn, sr1622v2PRoutPoolReservationsRemote=sr1622v2PRoutPoolReservationsRemote, er1622v2PRoutDnsDomainName=er1622v2PRoutDnsDomainName, er1622v2PRoutAddrPoolsPoolListLocal=er1622v2PRoutAddrPoolsPoolListLocal, er1622v2PRoutDnsProxy=er1622v2PRoutDnsProxy, ar1622v2PRoutIgmpDataLeaveSSC=ar1622v2PRoutIgmpDataLeaveSSC, sr1622v2PRoutDhcpBinding=sr1622v2PRoutDhcpBinding, er1622v2PRoutDnsUpdCliDnsProvDynDnsUserName=er1622v2PRoutDnsUpdCliDnsProvDynDnsUserName, sr1622v2PRoutDnsCacheIpV6Address=sr1622v2PRoutDnsCacheIpV6Address, pr1622v2PRoutQualMonLoggingUpDownDelayDownAvrg=pr1622v2PRoutQualMonLoggingUpDownDelayDownAvrg, er1622v2PRoutDhcpDynIpEndAddress=er1622v2PRoutDhcpDynIpEndAddress, er1622v2PRoutTacacsAuthServersEntry=er1622v2PRoutTacacsAuthServersEntry, er1622v2PRoutRadiusAuthServersTimeOut=er1622v2PRoutRadiusAuthServersTimeOut, er1622v2PRoutAlarmLevQMonDelay=er1622v2PRoutAlarmLevQMonDelay, er1622v2PRoutDhcpStatNameServer=er1622v2PRoutDhcpStatNameServer, er1622v2PRoutR2ScrtTblIf=er1622v2PRoutR2ScrtTblIf, er1622v2PRoutDhcpDynNameServer=er1622v2PRoutDhcpDynNameServer, er1622v2PRoutQualMonUdpServerPortDestinationPort=er1622v2PRoutQualMonUdpServerPortDestinationPort, sr1622v2PRoutDnsServersSecondaryDns=sr1622v2PRoutDnsServersSecondaryDns, er1622v2PRoutAddrPoolsPoolListEntry=er1622v2PRoutAddrPoolsPoolListEntry, sr1622v2PRoutDnsUpdCliDnsProvDynDnsState=sr1622v2PRoutDnsUpdCliDnsProvDynDnsState, er1622v2PRoutAddrPools=er1622v2PRoutAddrPools, er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOff, sr1622v2PRoutDnsServersStatus=sr1622v2PRoutDnsServersStatus, ar1622v2PRoutIgmpDataLeaveIpAddress=ar1622v2PRoutIgmpDataLeaveIpAddress, er1622v2PRoutDefaultRoutePreference=er1622v2PRoutDefaultRoutePreference, sr1622v2PRoutDhcpStatFree=sr1622v2PRoutDhcpStatFree, er1622v2PRoutDhcpStatOptionsValueHexData=er1622v2PRoutDhcpStatOptionsValueHexData, pr1622v2PRoutQualMonUpDownDelayDownAvrg=pr1622v2PRoutQualMonUpDownDelayDownAvrg, sr1622v2PRoutRoutingTableMask=sr1622v2PRoutRoutingTableMask, pr1622v2PRoutIpFragmentsSSC=pr1622v2PRoutIpFragmentsSSC, er1622v2PRoutDhcpStatOptionsActions=er1622v2PRoutDhcpStatOptionsActions, sr1622v2PRoutRadiusAcctServer=sr1622v2PRoutRadiusAcctServer, er1622v2PRoutRoutingTableTableIx=er1622v2PRoutRoutingTableTableIx, pr1622v2PRoutQualMonNbrRxPckt=pr1622v2PRoutQualMonNbrRxPckt, pr1622v2PRoutTacacsAuthErrors=pr1622v2PRoutTacacsAuthErrors, pr1622v2PRoutRadiusAcctBadAuth=pr1622v2PRoutRadiusAcctBadAuth, fr1622v2PRout=fr1622v2PRout, er1622v2PRoutDhcpDynOptionsTableIx=er1622v2PRoutDhcpDynOptionsTableIx, sr1622v2PRoutDhcpBindingEntry=sr1622v2PRoutDhcpBindingEntry, er1622v2PRoutDhcpStatOptionsEntry=er1622v2PRoutDhcpStatOptionsEntry, er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOff=er1622v2PRoutQualMonDestinationsDelayAlarmDelayUpAvrgOff, er1622v2PRoutLogSSC=er1622v2PRoutLogSSC, fr1622v2PRoutAlarmE2QMonLoss=fr1622v2PRoutAlarmE2QMonLoss, er1622v2PRoutHelperProtocolsTableIx=er1622v2PRoutHelperProtocolsTableIx, fr1622v2PRoutAlarmDiscriminator=fr1622v2PRoutAlarmDiscriminator, sr1622v2PRoutDnsCache=sr1622v2PRoutDnsCache, sr1622v2PRoutAddrPoolsNrOfAddresses=sr1622v2PRoutAddrPoolsNrOfAddresses, er1622v2PRoutDhcpDynIpStartAddress=er1622v2PRoutDhcpDynIpStartAddress, pr1622v2PRoutQualMonLoggingUpDownStatus=pr1622v2PRoutQualMonLoggingUpDownStatus, pr1622v2PRoutQualMonName=pr1622v2PRoutQualMonName, sr1622v2PRoutAddrPools=sr1622v2PRoutAddrPools, ar1622v2PRoutTracertDataHostName=ar1622v2PRoutTracertDataHostName, pr1622v2PRoutRadiusAuthAccepts=pr1622v2PRoutRadiusAuthAccepts, pr1622v2PRoutTacacsAuthSSCTable=pr1622v2PRoutTacacsAuthSSCTable, ar1622v2PRoutActionAction=ar1622v2PRoutActionAction, sr1622v2PRoutDnsServersTableIx=sr1622v2PRoutDnsServersTableIx, er1622v2PRoutQualMonDestinations=er1622v2PRoutQualMonDestinations, sr1622v2PRoutDnsUpdCli=sr1622v2PRoutDnsUpdCli, fr1622v2PRoutAlarmE2QMonJitterOff=fr1622v2PRoutAlarmE2QMonJitterOff, ar1622v2PRoutTracertDataEntry=ar1622v2PRoutTracertDataEntry, er1622v2PRoutRadiusAcctServerEncSecret=er1622v2PRoutRadiusAcctServerEncSecret, er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterAvrgOn, er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOn=er1622v2PRoutQualMonDestinationsDelayAlarmJitterUpAvrgOn, er1622v2PRoutDhcpDynOptionsValueHexData=er1622v2PRoutDhcpDynOptionsValueHexData, er1622v2PRoutRadiusAuthServersTableIx=er1622v2PRoutRadiusAuthServersTableIx, er1622v2PRoutDhcpStatMask=er1622v2PRoutDhcpStatMask, sr1622v2PRoutDhcpStatHold=sr1622v2PRoutDhcpStatHold, pr1622v2PRoutIgmpProxy=pr1622v2PRoutIgmpProxy, er1622v2PRoutRipNeighborsActions=er1622v2PRoutRipNeighborsActions, sr1622v2PRoutDnsDomains=sr1622v2PRoutDnsDomains, er1622v2PRoutPppSecretTableSSCTable=er1622v2PRoutPppSecretTableSSCTable, er1622v2PRoutQualMon=er1622v2PRoutQualMon, er1622v2PRoutRadiusAcctServerTimeOut=er1622v2PRoutRadiusAcctServerTimeOut, pr1622v2PRoutQualMonEntry=pr1622v2PRoutQualMonEntry)
