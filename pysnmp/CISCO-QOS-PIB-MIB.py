#
# PySNMP MIB module CISCO-QOS-PIB-MIB (http://pysnmp.sf.net)
# ASN.1 source file:///opt/xee/dev/mibs/asn1/cisco/CISCO-QOS-PIB-MIB
# Produced by pysmi-0.0.6 at Mon Dec  7 15:51:48 2015
# On host ubuntu platform Linux version 3.19.0-31-generic by user dkor
# Using Python version 2.7.9 (default, Apr  2 2015, 15:33:21) 
#
( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint")
( ciscoPibToMib, ) = mibBuilder.importSymbols("CISCO-SMI", "ciscoPibToMib")
( NotificationGroup, ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
( Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, MibIdentifier, Bits, TimeTicks, Counter64, Unsigned32, ModuleIdentity, Gauge32, iso, ObjectIdentity, IpAddress, Counter32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "MibIdentifier", "Bits", "TimeTicks", "Counter64", "Unsigned32", "ModuleIdentity", "Gauge32", "iso", "ObjectIdentity", "IpAddress", "Counter32")
( DisplayString, MacAddress, TruthValue, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "MacAddress", "TruthValue", "TextualConvention")
ciscoQosPIBMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 9, 18, 2, 1)).setRevisions(("2007-08-29 00:00", "2004-05-03 00:00", "2003-02-21 00:00", "2002-05-02 00:00", "2000-06-16 00:00", "2000-05-11 00:00",))
class Dscp(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,63)

class QosLayer2Cos(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,7)

class QueueRange(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 8, 16, 32, 64,)
    namedValues = NamedValues(("oneQ", 1), ("twoQ", 2), ("threeQ", 3), ("fourQ", 4), ("eightQ", 8), ("sixteenQ", 16), ("thirtyTwoQ", 32), ("sixtyFourQ", 64),)

class ThresholdSetRange(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(0, 1, 2, 4, 8,)
    namedValues = NamedValues(("zeroT", 0), ("oneT", 1), ("twoT", 2), ("fourT", 4), ("eightT", 8),)

class Percent(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+ValueRangeConstraint(0,100)

class QosInterfaceQueueType(Integer32, TextualConvention):
    subtypeSpec = Integer32.subtypeSpec+SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,)
    namedValues = NamedValues(("oneQ1t", 1), ("oneQ2t", 2), ("oneQ4t", 3), ("oneQ8t", 4), ("twoQ1t", 5), ("twoQ2t", 6), ("twoQ4t", 7), ("twoQ8t", 8), ("threeQ1t", 9), ("threeQ2t", 10), ("threeQ4t", 11), ("threeQ8t", 12), ("fourQ1t", 13), ("fourQ2t", 14), ("fourQ4t", 15), ("fourQ8t", 16), ("eightQ1t", 17), ("eightQ2t", 18), ("eightQ4t", 19), ("eightQ8t", 20), ("sixteenQ1t", 21), ("sixteenQ2t", 22), ("sixteenQ4t", 23), ("sixtyfourQ1t", 24), ("sixtyfourQ2t", 25), ("sixtyfourQ4t", 26), ("oneP1Q0t", 27), ("oneP1Q4t", 28), ("oneP1Q8t", 29), ("oneP2Q1t", 30), ("oneP2Q2t", 31), ("oneP3Q1t", 32), ("oneP7Q8t", 33), ("oneP3Q8t", 34), ("sixteenQ8t", 35), ("oneP15Q8t", 36), ("oneP15Q1t", 37), ("oneP7Q1t", 38), ("oneP31Q1t", 39), ("thirtytwoQ1t", 40), ("thirtytwoQ8t", 41), ("oneP31Q8t", 42), ("oneP7Q4t", 43), ("oneP3Q4t", 44), ("oneP7Q2t", 45),)

class QosInterfaceTypeCapabilities(Bits, TextualConvention):
    namedValues = NamedValues(("unspecified", 0), ("inputL2Classification", 1), ("inputIpClassification", 2), ("outputL2Classification", 3), ("outputIpClassification", 4), ("inputPortClassification", 19), ("outputPortClassification", 20), ("inputUflowPolicing", 5), ("inputAggregatePolicing", 6), ("outputUflowPolicing", 7), ("outputAggregatePolicing", 8), ("policeByMarkingDown", 9), ("policeByDropping", 10), ("inputUflowShaping", 21), ("inputAggregateShaping", 22), ("outputUflowShaping", 23), ("outputAggregateShaping", 24), ("fifo", 11), ("wrr", 12), ("wfq", 13), ("cq", 14), ("pq", 15), ("cbwfq", 16), ("pqWrr", 25), ("pqCbwfq", 26), ("tailDrop", 17), ("wred", 18),)

class RoleCombination(OctetString, TextualConvention):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(0,255)

class PolicyInstanceId(Unsigned32, TextualConvention):
    pass

class Unsigned64(Counter64, TextualConvention):
    pass

qosPIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1))
qosDeviceConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2))
qosDevicePibIncarnationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1), )
qosDevicePibIncarnationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosDeviceIncarnationId"))
qosDeviceIncarnationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1, 1, 1), PolicyInstanceId())
qosDevicePdpName = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
qosDevicePibIncarnation = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(128,128)).setFixedLength(128)).setMaxAccess("readonly")
qosDevicePibTtl = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
qosDeviceAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2), )
qosDeviceAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosDeviceAttributeId"))
qosDeviceAttributeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 1), PolicyInstanceId())
qosDevicePepDomain = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
qosDevicePrimaryPdp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 3), IpAddress()).setMaxAccess("readonly")
qosDeviceSecondaryPdp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 4), IpAddress()).setMaxAccess("readonly")
qosDeviceMaxMessageSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
qosDeviceCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 2, 1, 6), Bits().clone(namedValues=NamedValues(("unspecified", 0), ("layer2Cos", 1), ("ipPrecedence", 2), ("dscp", 3),))).setMaxAccess("readonly")
qosInterfaceTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3), )
qosInterfaceTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosInterfaceTypeId"))
qosInterfaceTypeId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3, 1, 1), PolicyInstanceId())
qosInterfaceQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3, 1, 2), QosInterfaceQueueType()).setMaxAccess("readonly")
qosInterfaceTypeRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3, 1, 3), RoleCombination()).setMaxAccess("readonly")
qosInterfaceTypeCapabilities = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 2, 3, 1, 4), QosInterfaceTypeCapabilities()).setMaxAccess("readonly")
qosDomainConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3))
qosDiffServMappingTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 1), )
qosDiffServMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosDscp"))
qosDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 1, 1, 1), Dscp())
qosMarkedDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 1, 1, 2), Dscp()).setMaxAccess("readonly")
qosL2Cos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 1, 1, 3), QosLayer2Cos()).setMaxAccess("readonly")
qosCosToDscpTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 2), )
qosCosToDscpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 2, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosCosToDscpCos"))
qosCosToDscpCos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 2, 1, 1), QosLayer2Cos())
qosCosToDscpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 3, 2, 1, 2), Dscp()).setMaxAccess("readonly")
qosUnmatchedPolicy = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4))
qosUnmatchedPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1), )
qosUnmatchedPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyId"))
qosUnmatchedPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 1), PolicyInstanceId())
qosUnmatchedPolicyRole = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosUnmatchedPolicyDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("in", 0), ("out", 1),))).setMaxAccess("readonly")
qosUnmatchedPolicyDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 4), Dscp()).setMaxAccess("readonly")
qosUnmatchedPolicyDscpTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
qosUnmatchPolMicroFlowPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 6), PolicyInstanceId()).setMaxAccess("readonly")
qosUnmatchedPolicyAggregateId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 4, 1, 1, 7), PolicyInstanceId()).setMaxAccess("readonly")
qosPolicer = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5))
qosPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1), )
qosPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosPolicerId"))
qosPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1, 1), PolicyInstanceId())
qosPolicerRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1, 2), Unsigned64()).setMaxAccess("readonly")
qosPolicerNormalBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
qosPolicerExcessBurst = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
qosPolicerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1, 2,)).clone(namedValues=NamedValues(("drop", 0), ("mark", 1), ("shape", 2),))).setMaxAccess("readonly")
qosAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 2), )
qosAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 2, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosAggregateId"))
qosAggregateId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 2, 1, 1), PolicyInstanceId())
qosAggregatePolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 5, 2, 1, 2), PolicyInstanceId()).setMaxAccess("readonly")
qosMacQos = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6))
qosMacClassificationTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1), )
qosMacClassificationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosMacClassificationId"))
qosMacClassificationId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1, 1, 1), PolicyInstanceId())
qosDstMacVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,4095))).setMaxAccess("readonly")
qosDstMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
qosDstMacCos = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 6, 1, 1, 4), QosLayer2Cos()).setMaxAccess("readonly")
qosIpQos = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7))
qosIpAceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1), )
qosIpAceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIpAceId"))
qosIpAceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 1), PolicyInstanceId())
qosIpAceDstAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
qosIpAceDstAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 3), IpAddress()).setMaxAccess("readonly")
qosIpAceSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 4), IpAddress()).setMaxAccess("readonly")
qosIpAceSrcAddrMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 5), IpAddress()).setMaxAccess("readonly")
qosIpAceDscpMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 6), Dscp()).setMaxAccess("readonly")
qosIpAceDscpMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 7), Dscp()).setMaxAccess("readonly")
qosIpAceProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,255))).setMaxAccess("readonly")
qosIpAceDstL4PortMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
qosIpAceDstL4PortMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
qosIpAceSrcL4PortMin = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
qosIpAceSrcL4PortMax = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0,65535))).setMaxAccess("readonly")
qosIpAcePermit = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 1, 1, 13), TruthValue()).setMaxAccess("readonly")
qosIpAclDefinitionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2), )
qosIpAclDefinitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIpAclDefinitionId"))
qosIpAclDefinitionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2, 1, 1), PolicyInstanceId())
qosIpAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2, 1, 2), PolicyInstanceId()).setMaxAccess("readonly")
qosIpAceOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
qosIpAclDefAceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 2, 1, 4), PolicyInstanceId()).setMaxAccess("readonly")
qosIpAclActionTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3), )
qosIpAclActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIpAclActionId"))
qosIpAclActionId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 1), PolicyInstanceId())
qosIpAclActAclId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 2), PolicyInstanceId()).setMaxAccess("readonly")
qosIpAclInterfaceRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 3), RoleCombination()).setMaxAccess("readonly")
qosIpAclInterfaceDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(0, 1,)).clone(namedValues=NamedValues(("in", 0), ("out", 1),))).setMaxAccess("readonly")
qosIpAclOrder = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
qosIpAclDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 6), Dscp()).setMaxAccess("readonly")
qosIpAclDscpTrusted = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 7), TruthValue()).setMaxAccess("readonly")
qosIpAclMicroFlowPolicerId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 8), PolicyInstanceId()).setMaxAccess("readonly")
qosIpAclAggregateId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 7, 3, 1, 9), PolicyInstanceId()).setMaxAccess("readonly")
qosIfParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8))
qosIfSchedulingPreferencesTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1), )
qosIfSchedulingPreferenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfSchedulingPreferenceId"))
qosIfSchedulingPreferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1, 1), PolicyInstanceId())
qosIfSchedulingRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfSchedulingPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,16))).setMaxAccess("readonly")
qosIfSchedulingDiscipline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8,)).clone(namedValues=NamedValues(("weightedFairQueueing", 1), ("weightedRoundRobin", 2), ("customQueueing", 3), ("priorityQueueing", 4), ("classBasedWFQ", 5), ("fifo", 6), ("pqWrr", 7), ("pqCbwfq", 8),))).setMaxAccess("readonly")
qosIfSchedulingQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 1, 1, 5), QosInterfaceQueueType()).setMaxAccess("readonly")
qosIfDropPreferenceTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2), )
qosIfDropPreferenceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfDropPreferenceId"))
qosIfDropPreferenceId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2, 1, 1), PolicyInstanceId())
qosIfDropRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfDropPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,16))).setMaxAccess("readonly")
qosIfDropDiscipline = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 2, 1, 4), Integer32().subtype(subtypeSpec=SingleValueConstraint(1, 2,)).clone(namedValues=NamedValues(("qosIfDropWRED", 1), ("qosIfDropTailDrop", 2),))).setMaxAccess("readonly")
qosIfDscpAssignmentTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3), )
qosIfDscpAssignmentEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfDscpAssignmentId"))
qosIfDscpAssignmentId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 1), PolicyInstanceId())
qosIfDscpRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfQueueType = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 3), QosInterfaceQueueType()).setMaxAccess("readonly")
qosIfDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 4), Dscp()).setMaxAccess("readonly")
qosIfQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,64))).setMaxAccess("readonly")
qosIfThresholdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,8))).setMaxAccess("readonly")
qosIfRedTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4), )
qosIfRedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfRedId"))
qosIfRedId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 1), PolicyInstanceId())
qosIfRedRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfRedNumThresholdSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 3), ThresholdSetRange()).setMaxAccess("readonly")
qosIfRedThresholdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,8))).setMaxAccess("readonly")
qosIfRedThresholdSetLower = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 5), Percent()).setMaxAccess("readonly")
qosIfRedThresholdSetUpper = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 4, 1, 6), Percent()).setMaxAccess("readonly")
qosIfTailDropTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5), )
qosIfTailDropEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfTailDropId"))
qosIfTailDropId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1, 1), PolicyInstanceId())
qosIfTailDropRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfTailDropNumThresholdSets = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1, 3), ThresholdSetRange()).setMaxAccess("readonly")
qosIfTailDropThresholdSet = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,8))).setMaxAccess("readonly")
qosIfTailDropThresholdSetValue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 5, 1, 5), Percent()).setMaxAccess("readonly")
qosIfWeightsTable = MibTable((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6), )
qosIfWeightsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1), ).setIndexNames((0, "CISCO-QOS-PIB-MIB", "qosIfWeightsId"))
qosIfWeightsId = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 1), PolicyInstanceId())
qosIfWeightsRoles = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 2), RoleCombination()).setMaxAccess("readonly")
qosIfWeightsNumQueues = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 3), QueueRange()).setMaxAccess("readonly")
qosIfWeightsQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1,64))).setMaxAccess("readonly")
qosIfWeightsDrainSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 5), Unsigned32()).setMaxAccess("readonly")
qosIfWeightsQueueSize = MibTableColumn((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 8, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
qosPIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 1))
qosPIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2))
qosPIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 1, 1)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosDevicePibIncarnationTableGroup"), ("CISCO-QOS-PIB-MIB", "qosDeviceAttributeTableGroup"), ("CISCO-QOS-PIB-MIB", "qosInterfaceTypeTableGroup"),))
qosDevicePibIncarnationTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 1)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosDevicePdpName"), ("CISCO-QOS-PIB-MIB", "qosDevicePibIncarnation"), ("CISCO-QOS-PIB-MIB", "qosDevicePibTtl"),))
qosDeviceAttributeTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 2)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosDevicePepDomain"), ("CISCO-QOS-PIB-MIB", "qosDevicePrimaryPdp"), ("CISCO-QOS-PIB-MIB", "qosDeviceSecondaryPdp"), ("CISCO-QOS-PIB-MIB", "qosDeviceMaxMessageSize"), ("CISCO-QOS-PIB-MIB", "qosDeviceCapabilities"),))
qosInterfaceTypeTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 3)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosInterfaceQueueType"), ("CISCO-QOS-PIB-MIB", "qosInterfaceTypeRoles"), ("CISCO-QOS-PIB-MIB", "qosInterfaceTypeCapabilities"),))
qosDiffServMappingTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 4)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosMarkedDscp"), ("CISCO-QOS-PIB-MIB", "qosL2Cos"),))
qosCosToDscpTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 5)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosCosToDscpDscp"),))
qosUnmatchedPolicyTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 6)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyRole"), ("CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyDirection"), ("CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyDscp"), ("CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyDscpTrusted"), ("CISCO-QOS-PIB-MIB", "qosUnmatchPolMicroFlowPolicerId"), ("CISCO-QOS-PIB-MIB", "qosUnmatchedPolicyAggregateId"),))
qosPolicerTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 7)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosPolicerRate"), ("CISCO-QOS-PIB-MIB", "qosPolicerNormalBurst"), ("CISCO-QOS-PIB-MIB", "qosPolicerExcessBurst"), ("CISCO-QOS-PIB-MIB", "qosPolicerAction"),))
qosAggregateTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 8)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosAggregatePolicerId"),))
qosMacClassificationTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 9)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosDstMacVlan"), ("CISCO-QOS-PIB-MIB", "qosDstMacAddress"), ("CISCO-QOS-PIB-MIB", "qosDstMacCos"),))
qosIpAceTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 10)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIpAceDstAddr"), ("CISCO-QOS-PIB-MIB", "qosIpAceDstAddrMask"), ("CISCO-QOS-PIB-MIB", "qosIpAceSrcAddr"), ("CISCO-QOS-PIB-MIB", "qosIpAceSrcAddrMask"), ("CISCO-QOS-PIB-MIB", "qosIpAceDscpMin"), ("CISCO-QOS-PIB-MIB", "qosIpAceDscpMax"), ("CISCO-QOS-PIB-MIB", "qosIpAceProtocol"), ("CISCO-QOS-PIB-MIB", "qosIpAceDstL4PortMin"), ("CISCO-QOS-PIB-MIB", "qosIpAceDstL4PortMax"), ("CISCO-QOS-PIB-MIB", "qosIpAceSrcL4PortMin"), ("CISCO-QOS-PIB-MIB", "qosIpAceSrcL4PortMax"), ("CISCO-QOS-PIB-MIB", "qosIpAcePermit"),))
qosIpAclDefinitionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 11)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIpAclId"), ("CISCO-QOS-PIB-MIB", "qosIpAceOrder"), ("CISCO-QOS-PIB-MIB", "qosIpAclDefAceId"),))
qosIpAclActionTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 12)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIpAclActAclId"), ("CISCO-QOS-PIB-MIB", "qosIpAclInterfaceRoles"), ("CISCO-QOS-PIB-MIB", "qosIpAclInterfaceDirection"), ("CISCO-QOS-PIB-MIB", "qosIpAclOrder"), ("CISCO-QOS-PIB-MIB", "qosIpAclDscp"), ("CISCO-QOS-PIB-MIB", "qosIpAclDscpTrusted"), ("CISCO-QOS-PIB-MIB", "qosIpAclMicroFlowPolicerId"), ("CISCO-QOS-PIB-MIB", "qosIpAclAggregateId"),))
qosIfSchedulingPreferencesTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 13)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfSchedulingRoles"), ("CISCO-QOS-PIB-MIB", "qosIfSchedulingPreference"), ("CISCO-QOS-PIB-MIB", "qosIfSchedulingDiscipline"), ("CISCO-QOS-PIB-MIB", "qosIfSchedulingQueueType"),))
qosIfDropPreferenceTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 14)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfDropRoles"), ("CISCO-QOS-PIB-MIB", "qosIfDropPreference"), ("CISCO-QOS-PIB-MIB", "qosIfDropDiscipline"),))
qosIfDscpAssignmentTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 15)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfDscpRoles"), ("CISCO-QOS-PIB-MIB", "qosIfQueueType"), ("CISCO-QOS-PIB-MIB", "qosIfDscp"), ("CISCO-QOS-PIB-MIB", "qosIfQueue"), ("CISCO-QOS-PIB-MIB", "qosIfThresholdSet"),))
qosIfRedTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 16)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfRedRoles"), ("CISCO-QOS-PIB-MIB", "qosIfRedNumThresholdSets"), ("CISCO-QOS-PIB-MIB", "qosIfRedThresholdSet"), ("CISCO-QOS-PIB-MIB", "qosIfRedThresholdSetLower"), ("CISCO-QOS-PIB-MIB", "qosIfRedThresholdSetUpper"),))
qosIfTailDropTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 17)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfTailDropRoles"), ("CISCO-QOS-PIB-MIB", "qosIfTailDropNumThresholdSets"), ("CISCO-QOS-PIB-MIB", "qosIfTailDropThresholdSet"), ("CISCO-QOS-PIB-MIB", "qosIfTailDropThresholdSetValue"),))
qosIfWeightsTableGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 9, 18, 2, 1, 1, 2, 18)).setObjects(*(("CISCO-QOS-PIB-MIB", "qosIfWeightsRoles"), ("CISCO-QOS-PIB-MIB", "qosIfWeightsNumQueues"), ("CISCO-QOS-PIB-MIB", "qosIfWeightsQueue"), ("CISCO-QOS-PIB-MIB", "qosIfWeightsDrainSize"), ("CISCO-QOS-PIB-MIB", "qosIfWeightsQueueSize"),))
mibBuilder.exportSymbols("CISCO-QOS-PIB-MIB", qosIfDscpAssignmentEntry=qosIfDscpAssignmentEntry, qosMacQos=qosMacQos, qosIfRedTableGroup=qosIfRedTableGroup, qosIfQueue=qosIfQueue, qosIfRedThresholdSet=qosIfRedThresholdSet, qosIpAceDscpMin=qosIpAceDscpMin, qosDeviceConfig=qosDeviceConfig, qosIfSchedulingPreferenceEntry=qosIfSchedulingPreferenceEntry, qosIfTailDropNumThresholdSets=qosIfTailDropNumThresholdSets, qosIfWeightsNumQueues=qosIfWeightsNumQueues, Percent=Percent, QosLayer2Cos=QosLayer2Cos, qosDeviceAttributeTableGroup=qosDeviceAttributeTableGroup, QosInterfaceTypeCapabilities=QosInterfaceTypeCapabilities, qosIfDscp=qosIfDscp, qosAggregateId=qosAggregateId, qosIfWeightsTable=qosIfWeightsTable, qosIpAclDscp=qosIpAclDscp, qosMacClassificationTableGroup=qosMacClassificationTableGroup, qosInterfaceTypeRoles=qosInterfaceTypeRoles, qosPolicerAction=qosPolicerAction, qosIfDropPreference=qosIfDropPreference, qosUnmatchedPolicyTableGroup=qosUnmatchedPolicyTableGroup, PYSNMP_MODULE_ID=ciscoQosPIBMIB, qosIpAclActionEntry=qosIpAclActionEntry, qosDiffServMappingEntry=qosDiffServMappingEntry, qosUnmatchedPolicyId=qosUnmatchedPolicyId, qosDomainConfig=qosDomainConfig, qosIfDropPreferenceId=qosIfDropPreferenceId, qosPolicer=qosPolicer, qosIfDropPreferenceEntry=qosIfDropPreferenceEntry, qosIpAceProtocol=qosIpAceProtocol, qosIfSchedulingPreferenceId=qosIfSchedulingPreferenceId, qosDevicePibIncarnation=qosDevicePibIncarnation, qosIpAceTable=qosIpAceTable, qosIfDropDiscipline=qosIfDropDiscipline, qosIpAclOrder=qosIpAclOrder, qosIfTailDropThresholdSetValue=qosIfTailDropThresholdSetValue, qosCosToDscpDscp=qosCosToDscpDscp, QueueRange=QueueRange, qosIfSchedulingPreferencesTable=qosIfSchedulingPreferencesTable, qosDevicePepDomain=qosDevicePepDomain, qosIfTailDropRoles=qosIfTailDropRoles, qosIpAceDstAddr=qosIpAceDstAddr, ciscoQosPIBMIB=ciscoQosPIBMIB, qosInterfaceTypeEntry=qosInterfaceTypeEntry, qosIfRedNumThresholdSets=qosIfRedNumThresholdSets, qosIpAclActionTable=qosIpAclActionTable, qosDeviceAttributeTable=qosDeviceAttributeTable, qosUnmatchedPolicyTable=qosUnmatchedPolicyTable, qosIpAceEntry=qosIpAceEntry, qosIpAclActionTableGroup=qosIpAclActionTableGroup, qosIpAceSrcL4PortMax=qosIpAceSrcL4PortMax, qosPolicerTable=qosPolicerTable, qosIfWeightsRoles=qosIfWeightsRoles, qosMarkedDscp=qosMarkedDscp, qosIpAceDstL4PortMin=qosIpAceDstL4PortMin, qosDevicePrimaryPdp=qosDevicePrimaryPdp, RoleCombination=RoleCombination, qosDevicePibIncarnationTable=qosDevicePibIncarnationTable, qosDiffServMappingTable=qosDiffServMappingTable, qosIpAclInterfaceDirection=qosIpAclInterfaceDirection, qosDiffServMappingTableGroup=qosDiffServMappingTableGroup, QosInterfaceQueueType=QosInterfaceQueueType, qosPolicerNormalBurst=qosPolicerNormalBurst, qosUnmatchedPolicy=qosUnmatchedPolicy, qosIpAclMicroFlowPolicerId=qosIpAclMicroFlowPolicerId, qosIfRedThresholdSetLower=qosIfRedThresholdSetLower, qosDeviceIncarnationId=qosDeviceIncarnationId, qosIfParameters=qosIfParameters, qosIpAclDscpTrusted=qosIpAclDscpTrusted, qosPolicerRate=qosPolicerRate, qosIpAceTableGroup=qosIpAceTableGroup, qosInterfaceTypeTableGroup=qosInterfaceTypeTableGroup, qosDstMacAddress=qosDstMacAddress, qosIfDscpAssignmentTableGroup=qosIfDscpAssignmentTableGroup, qosIfWeightsId=qosIfWeightsId, qosIfSchedulingQueueType=qosIfSchedulingQueueType, Dscp=Dscp, qosDevicePibIncarnationTableGroup=qosDevicePibIncarnationTableGroup, qosIpAclId=qosIpAclId, qosIpAceId=qosIpAceId, qosUnmatchedPolicyDscp=qosUnmatchedPolicyDscp, qosIfDscpRoles=qosIfDscpRoles, qosIfRedTable=qosIfRedTable, qosDevicePibIncarnationEntry=qosDevicePibIncarnationEntry, qosIfRedRoles=qosIfRedRoles, qosDscp=qosDscp, qosIfDscpAssignmentId=qosIfDscpAssignmentId, PolicyInstanceId=PolicyInstanceId, qosIfWeightsQueueSize=qosIfWeightsQueueSize, qosIpAceSrcAddrMask=qosIpAceSrcAddrMask, ThresholdSetRange=ThresholdSetRange, qosIfRedThresholdSetUpper=qosIfRedThresholdSetUpper, qosDeviceSecondaryPdp=qosDeviceSecondaryPdp, qosDeviceAttributeId=qosDeviceAttributeId, qosIpAclAggregateId=qosIpAclAggregateId, qosAggregateTable=qosAggregateTable, qosIpQos=qosIpQos, qosIfWeightsTableGroup=qosIfWeightsTableGroup, qosPIBConformance=qosPIBConformance, qosIpAclDefinitionId=qosIpAclDefinitionId, qosDevicePdpName=qosDevicePdpName, qosIfSchedulingDiscipline=qosIfSchedulingDiscipline, qosDstMacVlan=qosDstMacVlan, qosIfWeightsDrainSize=qosIfWeightsDrainSize, qosIpAceDstL4PortMax=qosIpAceDstL4PortMax, qosUnmatchedPolicyAggregateId=qosUnmatchedPolicyAggregateId, qosIpAclDefinitionEntry=qosIpAclDefinitionEntry, qosIpAceSrcL4PortMin=qosIpAceSrcL4PortMin, qosIfSchedulingRoles=qosIfSchedulingRoles, qosUnmatchedPolicyDirection=qosUnmatchedPolicyDirection, qosIpAclDefinitionTable=qosIpAclDefinitionTable, qosUnmatchPolMicroFlowPolicerId=qosUnmatchPolMicroFlowPolicerId, qosIpAceSrcAddr=qosIpAceSrcAddr, qosIfDropPreferenceTable=qosIfDropPreferenceTable, qosIfThresholdSet=qosIfThresholdSet, qosCosToDscpCos=qosCosToDscpCos, qosIpAceDscpMax=qosIpAceDscpMax, qosIpAceOrder=qosIpAceOrder, qosInterfaceTypeCapabilities=qosInterfaceTypeCapabilities, qosIpAcePermit=qosIpAcePermit, Unsigned64=Unsigned64, qosCosToDscpEntry=qosCosToDscpEntry, qosAggregateTableGroup=qosAggregateTableGroup, qosAggregateEntry=qosAggregateEntry, qosIpAclActAclId=qosIpAclActAclId, qosPolicerId=qosPolicerId, qosInterfaceTypeId=qosInterfaceTypeId, qosIfSchedulingPreference=qosIfSchedulingPreference, qosIfWeightsQueue=qosIfWeightsQueue, qosDevicePibTtl=qosDevicePibTtl, qosInterfaceTypeTable=qosInterfaceTypeTable, qosPIBCompliance=qosPIBCompliance, qosIpAclInterfaceRoles=qosIpAclInterfaceRoles, qosPIBCompliances=qosPIBCompliances, qosIfTailDropTable=qosIfTailDropTable, qosCosToDscpTable=qosCosToDscpTable, qosInterfaceQueueType=qosInterfaceQueueType, qosIfTailDropThresholdSet=qosIfTailDropThresholdSet, qosIfTailDropTableGroup=qosIfTailDropTableGroup, qosIpAclDefAceId=qosIpAclDefAceId, qosPolicerExcessBurst=qosPolicerExcessBurst, qosIfTailDropId=qosIfTailDropId, qosIfRedEntry=qosIfRedEntry, qosIfSchedulingPreferencesTableGroup=qosIfSchedulingPreferencesTableGroup, qosDstMacCos=qosDstMacCos, qosCosToDscpTableGroup=qosCosToDscpTableGroup, qosAggregatePolicerId=qosAggregatePolicerId, qosPolicerEntry=qosPolicerEntry, qosIfDscpAssignmentTable=qosIfDscpAssignmentTable, qosUnmatchedPolicyRole=qosUnmatchedPolicyRole, qosIpAclDefinitionTableGroup=qosIpAclDefinitionTableGroup, qosPolicerTableGroup=qosPolicerTableGroup, qosIfTailDropEntry=qosIfTailDropEntry, qosUnmatchedPolicyEntry=qosUnmatchedPolicyEntry, qosIfDropPreferenceTableGroup=qosIfDropPreferenceTableGroup, qosMacClassificationId=qosMacClassificationId, qosDeviceCapabilities=qosDeviceCapabilities, qosIpAclActionId=qosIpAclActionId, qosIfQueueType=qosIfQueueType, qosDeviceAttributeEntry=qosDeviceAttributeEntry, qosIfRedId=qosIfRedId, qosIfWeightsEntry=qosIfWeightsEntry, qosPIBGroups=qosPIBGroups, qosUnmatchedPolicyDscpTrusted=qosUnmatchedPolicyDscpTrusted, qosMacClassificationTable=qosMacClassificationTable, qosDeviceMaxMessageSize=qosDeviceMaxMessageSize, qosMacClassificationEntry=qosMacClassificationEntry, qosIpAceDstAddrMask=qosIpAceDstAddrMask, qosIfDropRoles=qosIfDropRoles, qosL2Cos=qosL2Cos)
